"use strict";var t=Object.defineProperty,e=(e,s,i)=>(((e,s,i)=>{s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[s]=i})(e,"symbol"!=typeof s?s+"":s,i),i);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const s=require("three"),i=require("web-ifc");function r(t){const e=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(t)for(const s in t)if("default"!==s){const i=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(e,s,i.get?i:{enumerable:!0,get:()=>t[s]})}return e.default=t,Object.freeze(e)}const n=r(s),o=r(i);var a=function(t,e){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s])})(t,e)};function I(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function s(){this.constructor=t}a(t,e),t.prototype=null===e?Object.create(e):(s.prototype=e.prototype,new s)}function E(t){var e="function"==typeof Symbol&&Symbol.iterator,s=e&&t[e],i=0;if(s)return s.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function c(t,e){var s="function"==typeof Symbol&&t[Symbol.iterator];if(!s)return t;var i,r,n=s.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(i=n.next()).done;)o.push(i.value)}catch(t){r={error:t}}finally{try{i&&!i.done&&(s=n.return)&&s.call(n)}finally{if(r)throw r.error}}return o}function h(t,e,s){if(s||2===arguments.length)for(var i,r=0,n=e.length;r<n;r++)!i&&r in e||(i||(i=Array.prototype.slice.call(e,0,r)),i[r]=e[r]);return t.concat(i||Array.prototype.slice.call(e))}function l(t){return"function"==typeof t}function d(t){var e=t((function(t){Error.call(t),t.stack=(new Error).stack}));return e.prototype=Object.create(Error.prototype),e.prototype.constructor=e,e}"function"==typeof SuppressedError&&SuppressedError;var C=d((function(t){return function(e){t(this),this.message=e?e.length+" errors occurred during unsubscription:\n"+e.map((function(t,e){return e+1+") "+t.toString()})).join("\n  "):"",this.name="UnsubscriptionError",this.errors=e}}));function T(t,e){if(t){var s=t.indexOf(e);0<=s&&t.splice(s,1)}}var u=function(){function t(t){this.initialTeardown=t,this.closed=!1,this._parentage=null,this._finalizers=null}var e;return t.prototype.unsubscribe=function(){var t,e,s,i,r;if(!this.closed){this.closed=!0;var n=this._parentage;if(n)if(this._parentage=null,Array.isArray(n))try{for(var o=E(n),a=o.next();!a.done;a=o.next()){a.value.remove(this)}}catch(e){t={error:e}}finally{try{a&&!a.done&&(e=o.return)&&e.call(o)}finally{if(t)throw t.error}}else n.remove(this);var I=this.initialTeardown;if(l(I))try{I()}catch(t){r=t instanceof C?t.errors:[t]}var d=this._finalizers;if(d){this._finalizers=null;try{for(var T=E(d),u=T.next();!u.done;u=T.next()){var R=u.value;try{F(R)}catch(t){r=null!=r?r:[],t instanceof C?r=h(h([],c(r)),c(t.errors)):r.push(t)}}}catch(t){s={error:t}}finally{try{u&&!u.done&&(i=T.return)&&i.call(T)}finally{if(s)throw s.error}}}if(r)throw new C(r)}},t.prototype.add=function(e){var s;if(e&&e!==this)if(this.closed)F(e);else{if(e instanceof t){if(e.closed||e._hasParent(this))return;e._addParent(this)}(this._finalizers=null!==(s=this._finalizers)&&void 0!==s?s:[]).push(e)}},t.prototype._hasParent=function(t){var e=this._parentage;return e===t||Array.isArray(e)&&e.includes(t)},t.prototype._addParent=function(t){var e=this._parentage;this._parentage=Array.isArray(e)?(e.push(t),e):e?[e,t]:t},t.prototype._removeParent=function(t){var e=this._parentage;e===t?this._parentage=null:Array.isArray(e)&&T(e,t)},t.prototype.remove=function(e){var s=this._finalizers;s&&T(s,e),e instanceof t&&e._removeParent(this)},t.EMPTY=((e=new t).closed=!0,e),t}(),R=u.EMPTY;function b(t){return t instanceof u||t&&"closed"in t&&l(t.remove)&&l(t.add)&&l(t.unsubscribe)}function F(t){l(t)?t():t.unsubscribe()}var p=void 0,A=function(t,e){for(var s=[],i=2;i<arguments.length;i++)s[i-2]=arguments[i];return setTimeout.apply(void 0,h([t,e],c(s)))};function f(){}function O(t){t()}var N=function(t){function e(e){var s=t.call(this)||this;return s.isStopped=!1,e?(s.destination=e,b(e)&&e.add(s)):s.destination=m,s}return I(e,t),e.create=function(t,e,s){return new _(t,e,s)},e.prototype.next=function(t){this.isStopped||this._next(t)},e.prototype.error=function(t){this.isStopped||(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,t.prototype.unsubscribe.call(this),this.destination=null)},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){try{this.destination.error(t)}finally{this.unsubscribe()}},e.prototype._complete=function(){try{this.destination.complete()}finally{this.unsubscribe()}},e}(u),S=function(){function t(t){this.partialObserver=t}return t.prototype.next=function(t){var e=this.partialObserver;if(e.next)try{e.next(t)}catch(t){L(t)}},t.prototype.error=function(t){var e=this.partialObserver;if(e.error)try{e.error(t)}catch(t){L(t)}else L(t)},t.prototype.complete=function(){var t=this.partialObserver;if(t.complete)try{t.complete()}catch(t){L(t)}},t}(),_=function(t){function e(e,s,i){var r,n=t.call(this)||this;return r=l(e)||!e?{next:null!=e?e:void 0,error:null!=s?s:void 0,complete:null!=i?i:void 0}:e,n.destination=new S(r),n}return I(e,t),e}(N);function L(t){var e;e=t,A((function(){throw e}))}var m={closed:!0,next:f,error:function(t){throw t},complete:f},P="function"==typeof Symbol&&Symbol.observable||"@@observable";function M(t){return t}var g=function(){function t(t){t&&(this._subscribe=t)}return t.prototype.lift=function(e){var s=new t;return s.source=this,s.operator=e,s},t.prototype.subscribe=function(t,e,s){var i,r=this,n=(i=t)&&i instanceof N||function(t){return t&&l(t.next)&&l(t.error)&&l(t.complete)}(i)&&b(i)?t:new _(t,e,s);return O((function(){var t=r,e=t.operator,s=t.source;n.add(e?e.call(n,s):s?r._subscribe(n):r._trySubscribe(n))})),n},t.prototype._trySubscribe=function(t){try{return this._subscribe(t)}catch(e){t.error(e)}},t.prototype.forEach=function(t,e){var s=this;return new(e=U(e))((function(e,i){var r=new _({next:function(e){try{t(e)}catch(t){i(t),r.unsubscribe()}},error:i,complete:e});s.subscribe(r)}))},t.prototype._subscribe=function(t){var e;return null===(e=this.source)||void 0===e?void 0:e.subscribe(t)},t.prototype[P]=function(){return this},t.prototype.pipe=function(){for(var t,e=[],s=0;s<arguments.length;s++)e[s]=arguments[s];return(0===(t=e).length?M:1===t.length?t[0]:function(e){return t.reduce((function(t,e){return e(t)}),e)})(this)},t.prototype.toPromise=function(t){var e=this;return new(t=U(t))((function(t,s){var i;e.subscribe((function(t){return i=t}),(function(t){return s(t)}),(function(){return t(i)}))}))},t.create=function(e){return new t(e)},t}();function U(t){var e;return null!==(e=null!=t?t:p)&&void 0!==e?e:Promise}var D=d((function(t){return function(){t(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"}})),y=function(t){function e(){var e=t.call(this)||this;return e.closed=!1,e.currentObservers=null,e.observers=[],e.isStopped=!1,e.hasError=!1,e.thrownError=null,e}return I(e,t),e.prototype.lift=function(t){var e=new w(this,this);return e.operator=t,e},e.prototype._throwIfClosed=function(){if(this.closed)throw new D},e.prototype.next=function(t){var e=this;O((function(){var s,i;if(e._throwIfClosed(),!e.isStopped){e.currentObservers||(e.currentObservers=Array.from(e.observers));try{for(var r=E(e.currentObservers),n=r.next();!n.done;n=r.next()){n.value.next(t)}}catch(t){s={error:t}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(s)throw s.error}}}}))},e.prototype.error=function(t){var e=this;O((function(){if(e._throwIfClosed(),!e.isStopped){e.hasError=e.isStopped=!0,e.thrownError=t;for(var s=e.observers;s.length;)s.shift().error(t)}}))},e.prototype.complete=function(){var t=this;O((function(){if(t._throwIfClosed(),!t.isStopped){t.isStopped=!0;for(var e=t.observers;e.length;)e.shift().complete()}}))},e.prototype.unsubscribe=function(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null},Object.defineProperty(e.prototype,"observed",{get:function(){var t;return(null===(t=this.observers)||void 0===t?void 0:t.length)>0},enumerable:!1,configurable:!0}),e.prototype._trySubscribe=function(e){return this._throwIfClosed(),t.prototype._trySubscribe.call(this,e)},e.prototype._subscribe=function(t){return this._throwIfClosed(),this._checkFinalizedStatuses(t),this._innerSubscribe(t)},e.prototype._innerSubscribe=function(t){var e=this,s=this,i=s.hasError,r=s.isStopped,n=s.observers;return i||r?R:(this.currentObservers=null,n.push(t),new u((function(){e.currentObservers=null,T(n,t)})))},e.prototype._checkFinalizedStatuses=function(t){var e=this,s=e.hasError,i=e.thrownError,r=e.isStopped;s?t.error(i):r&&t.complete()},e.prototype.asObservable=function(){var t=new g;return t.source=this,t},e.create=function(t,e){return new w(t,e)},e}(g),w=function(t){function e(e,s){var i=t.call(this)||this;return i.destination=e,i.source=s,i}return I(e,t),e.prototype.next=function(t){var e,s;null===(s=null===(e=this.destination)||void 0===e?void 0:e.next)||void 0===s||s.call(e,t)},e.prototype.error=function(t){var e,s;null===(s=null===(e=this.destination)||void 0===e?void 0:e.error)||void 0===s||s.call(e,t)},e.prototype.complete=function(){var t,e;null===(e=null===(t=this.destination)||void 0===t?void 0:t.complete)||void 0===e||e.call(t)},e.prototype._subscribe=function(t){var e,s;return null!==(s=null===(e=this.source)||void 0===e?void 0:e.subscribe(t))&&void 0!==s?s:R},e}(y),v=function(t){function e(e){var s=t.call(this)||this;return s._value=e,s}return I(e,t),Object.defineProperty(e.prototype,"value",{get:function(){return this.getValue()},enumerable:!1,configurable:!0}),e.prototype._subscribe=function(e){var s=t.prototype._subscribe.call(this,e);return!s.closed&&e.next(this._value),s},e.prototype.getValue=function(){var t=this,e=t.hasError,s=t.thrownError,i=t._value;if(e)throw s;return this._throwIfClosed(),i},e.prototype.next=function(e){t.prototype.next.call(this,this._value=e)},e}(y);var x=(t=>(t[t.IGNORE=0]="IGNORE",t[t.NORMAL=1]="NORMAL",t[t.HIGH=2]="HIGH",t))(x||{}),V=(t=>(t[t.FACE=0]="FACE",t[t.LINE=1]="LINE",t[t.POINT=2]="POINT",t))(V||{}),G=(t=>(t[t.LINE=0]="LINE",t[t.MESH=1]="MESH",t))(G||{}),B=(t=>(t[t.SET_BATCH_STATE=0]="SET_BATCH_STATE",t[t.ADD_BATCH=1]="ADD_BATCH",t[t.REMOVE_BATCH=2]="REMOVE_BATCH",t[t.UPDATE_FINISHED=3]="UPDATE_FINISHED",t))(B||{}),Y=(t=>(t[t.Full=0]="Full",t[t.Line=1]="Line",t[t.Hidden=2]="Hidden",t))(Y||{}),H=(t=>(t[t.LOAD=0]="LOAD",t[t.UNLOAD=1]="UNLOAD",t[t.PICK=2]="PICK",t[t.CAMERA_UPDATE=3]="CAMERA_UPDATE",t[t.GET_BOUNDINGBOXES=4]="GET_BOUNDINGBOXES",t[t.PROPERTY_GETSETNAMES=5]="PROPERTY_GETSETNAMES",t[t.PROPERTY_GETPROPERTYDEFINITIONS=6]="PROPERTY_GETPROPERTYDEFINITIONS",t[t.PROPERTY_GETPROPERTYVALUES=7]="PROPERTY_GETPROPERTYVALUES",t[t.GUIDS_TO_ITEMIDS=8]="GUIDS_TO_ITEMIDS",t[t.AGGREGATE_PROPERTIES=9]="AGGREGATE_PROPERTIES",t[t.CALL=10]="CALL",t[t.UPDATE_GEOMETRY=11]="UPDATE_GEOMETRY",t[t.ADD_MATERIAL=12]="ADD_MATERIAL",t[t.ERROR=13]="ERROR",t))(H||{}),z=(t=>(t[t.PICK_PRIORITY=0]="PICK_PRIORITY",t[t.VISIBILITY=1]="VISIBILITY",t[t.SELECTION=2]="SELECTION",t[t.HOVER=3]="HOVER",t))(z||{});const W=class t{static transform(t,e,i=new s.Frustum){for(let s=0;s<i.planes.length;s++)i.planes[s].copy(t.planes[s]).applyMatrix4(e);return i}static isHitting(e,s){return t.hits(e,s,!1)}static isIncluded(e,s){return t.hits(e,s,!0)}static containedInIndependentPlanes(t,e){let s=!0;for(const i of e)s=s&&i.distanceToPoint(t)>=0;return s}};e(W,"hits",(()=>{const t=new s.Vector3;return(e,s,i)=>{for(let r=0,n=e.length;r<n;r++){const n=e[r].normal;if(t.set(n.x>=0!==i?s.max.x:s.min.x,n.y>=0!==i?s.max.y:s.min.y,n.z>=0!==i?s.max.z:s.min.z),e[r].distanceToPoint(t)<0)return!1}return!0}})());let j=W;var k={exports:{}};function X(t,e,s){s=s||2;var i,r,n,o,a,I,E,c=e&&e.length,h=c?e[0]*s:t.length,l=q(t,0,h,s,!0),d=[];if(!l||l.next===l.prev)return d;if(c&&(l=function(t,e,s,i){var r,n,o,a=[];for(r=0,n=e.length;r<n;r++)(o=q(t,e[r]*i,r<n-1?e[r+1]*i:t.length,i,!1))===o.next&&(o.steiner=!0),a.push(nt(o));for(a.sort(et),r=0;r<a.length;r++)s=st(a[r],s);return s}(t,e,l,s)),t.length>80*s){i=n=t[0],r=o=t[1];for(var C=s;C<h;C+=s)(a=t[C])<i&&(i=a),(I=t[C+1])<r&&(r=I),a>n&&(n=a),I>o&&(o=I);E=0!==(E=Math.max(n-i,o-r))?32767/E:0}return Z(l,d,s,i,r,E,0),d}function q(t,e,s,i,r){var n,o;if(r===bt(t,e,s,i)>0)for(n=e;n<s;n+=i)o=Tt(n,t[n],t[n+1],o);else for(n=s-i;n>=e;n-=i)o=Tt(n,t[n],t[n+1],o);return o&&Et(o,o.next)&&(ut(o),o=o.next),o}function $(t,e){if(!t)return t;e||(e=t);var s,i=t;do{if(s=!1,i.steiner||!Et(i,i.next)&&0!==It(i.prev,i,i.next))i=i.next;else{if(ut(i),(i=e=i.prev)===i.next)break;s=!0}}while(s||i!==e);return e}function Z(t,e,s,i,r,n,o){if(t){!o&&n&&function(t,e,s,i){var r=t;do{0===r.z&&(r.z=rt(r.x,r.y,e,s,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){var e,s,i,r,n,o,a,I,E=1;do{for(s=t,t=null,n=null,o=0;s;){for(o++,i=s,a=0,e=0;e<E&&(a++,i=i.nextZ);e++);for(I=E;a>0||I>0&&i;)0!==a&&(0===I||!i||s.z<=i.z)?(r=s,s=s.nextZ,a--):(r=i,i=i.nextZ,I--),n?n.nextZ=r:t=r,r.prevZ=n,n=r;s=i}n.nextZ=null,E*=2}while(o>1)}(r)}(t,i,r,n);for(var a,I,E=t;t.prev!==t.next;)if(a=t.prev,I=t.next,n?Q(t,i,r,n):K(t))e.push(a.i/s|0),e.push(t.i/s|0),e.push(I.i/s|0),ut(t),t=I.next,E=I.next;else if((t=I)===E){o?1===o?Z(t=J($(t),e,s),e,s,i,r,n,2):2===o&&tt(t,e,s,i,r,n):Z($(t),e,s,i,r,n,1);break}}}function K(t){var e=t.prev,s=t,i=t.next;if(It(e,s,i)>=0)return!1;for(var r=e.x,n=s.x,o=i.x,a=e.y,I=s.y,E=i.y,c=r<n?r<o?r:o:n<o?n:o,h=a<I?a<E?a:E:I<E?I:E,l=r>n?r>o?r:o:n>o?n:o,d=a>I?a>E?a:E:I>E?I:E,C=i.next;C!==e;){if(C.x>=c&&C.x<=l&&C.y>=h&&C.y<=d&&ot(r,a,n,I,o,E,C.x,C.y)&&It(C.prev,C,C.next)>=0)return!1;C=C.next}return!0}function Q(t,e,s,i){var r=t.prev,n=t,o=t.next;if(It(r,n,o)>=0)return!1;for(var a=r.x,I=n.x,E=o.x,c=r.y,h=n.y,l=o.y,d=a<I?a<E?a:E:I<E?I:E,C=c<h?c<l?c:l:h<l?h:l,T=a>I?a>E?a:E:I>E?I:E,u=c>h?c>l?c:l:h>l?h:l,R=rt(d,C,e,s,i),b=rt(T,u,e,s,i),F=t.prevZ,p=t.nextZ;F&&F.z>=R&&p&&p.z<=b;){if(F.x>=d&&F.x<=T&&F.y>=C&&F.y<=u&&F!==r&&F!==o&&ot(a,c,I,h,E,l,F.x,F.y)&&It(F.prev,F,F.next)>=0)return!1;if(F=F.prevZ,p.x>=d&&p.x<=T&&p.y>=C&&p.y<=u&&p!==r&&p!==o&&ot(a,c,I,h,E,l,p.x,p.y)&&It(p.prev,p,p.next)>=0)return!1;p=p.nextZ}for(;F&&F.z>=R;){if(F.x>=d&&F.x<=T&&F.y>=C&&F.y<=u&&F!==r&&F!==o&&ot(a,c,I,h,E,l,F.x,F.y)&&It(F.prev,F,F.next)>=0)return!1;F=F.prevZ}for(;p&&p.z<=b;){if(p.x>=d&&p.x<=T&&p.y>=C&&p.y<=u&&p!==r&&p!==o&&ot(a,c,I,h,E,l,p.x,p.y)&&It(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function J(t,e,s){var i=t;do{var r=i.prev,n=i.next.next;!Et(r,n)&&ct(r,i,i.next,n)&&dt(r,n)&&dt(n,r)&&(e.push(r.i/s|0),e.push(i.i/s|0),e.push(n.i/s|0),ut(i),ut(i.next),i=t=n),i=i.next}while(i!==t);return $(i)}function tt(t,e,s,i,r,n){var o=t;do{for(var a=o.next.next;a!==o.prev;){if(o.i!==a.i&&at(o,a)){var I=Ct(o,a);return o=$(o,o.next),I=$(I,I.next),Z(o,e,s,i,r,n,0),void Z(I,e,s,i,r,n,0)}a=a.next}o=o.next}while(o!==t)}function et(t,e){return t.x-e.x}function st(t,e){var s=function(t,e){var s,i=e,r=t.x,n=t.y,o=-1/0;do{if(n<=i.y&&n>=i.next.y&&i.next.y!==i.y){var a=i.x+(n-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(a<=r&&a>o&&(o=a,s=i.x<i.next.x?i:i.next,a===r))return s}i=i.next}while(i!==e);if(!s)return null;var I,E=s,c=s.x,h=s.y,l=1/0;i=s;do{r>=i.x&&i.x>=c&&r!==i.x&&ot(n<h?r:o,n,c,h,n<h?o:r,n,i.x,i.y)&&(I=Math.abs(n-i.y)/(r-i.x),dt(i,t)&&(I<l||I===l&&(i.x>s.x||i.x===s.x&&it(s,i)))&&(s=i,l=I)),i=i.next}while(i!==E);return s}(t,e);if(!s)return e;var i=Ct(s,t);return $(i,i.next),$(s,s.next)}function it(t,e){return It(t.prev,t,e.prev)<0&&It(e.next,t,t.next)<0}function rt(t,e,s,i,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-s)*r|0)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-i)*r|0)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function nt(t){var e=t,s=t;do{(e.x<s.x||e.x===s.x&&e.y<s.y)&&(s=e),e=e.next}while(e!==t);return s}function ot(t,e,s,i,r,n,o,a){return(r-o)*(e-a)>=(t-o)*(n-a)&&(t-o)*(i-a)>=(s-o)*(e-a)&&(s-o)*(n-a)>=(r-o)*(i-a)}function at(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){var s=t;do{if(s.i!==t.i&&s.next.i!==t.i&&s.i!==e.i&&s.next.i!==e.i&&ct(s,s.next,t,e))return!0;s=s.next}while(s!==t);return!1}(t,e)&&(dt(t,e)&&dt(e,t)&&function(t,e){var s=t,i=!1,r=(t.x+e.x)/2,n=(t.y+e.y)/2;do{s.y>n!=s.next.y>n&&s.next.y!==s.y&&r<(s.next.x-s.x)*(n-s.y)/(s.next.y-s.y)+s.x&&(i=!i),s=s.next}while(s!==t);return i}(t,e)&&(It(t.prev,t,e.prev)||It(t,e.prev,e))||Et(t,e)&&It(t.prev,t,t.next)>0&&It(e.prev,e,e.next)>0)}function It(t,e,s){return(e.y-t.y)*(s.x-e.x)-(e.x-t.x)*(s.y-e.y)}function Et(t,e){return t.x===e.x&&t.y===e.y}function ct(t,e,s,i){var r=lt(It(t,e,s)),n=lt(It(t,e,i)),o=lt(It(s,i,t)),a=lt(It(s,i,e));return r!==n&&o!==a||(!(0!==r||!ht(t,s,e))||(!(0!==n||!ht(t,i,e))||(!(0!==o||!ht(s,t,i))||!(0!==a||!ht(s,e,i)))))}function ht(t,e,s){return e.x<=Math.max(t.x,s.x)&&e.x>=Math.min(t.x,s.x)&&e.y<=Math.max(t.y,s.y)&&e.y>=Math.min(t.y,s.y)}function lt(t){return t>0?1:t<0?-1:0}function dt(t,e){return It(t.prev,t,t.next)<0?It(t,e,t.next)>=0&&It(t,t.prev,e)>=0:It(t,e,t.prev)<0||It(t,t.next,e)<0}function Ct(t,e){var s=new Rt(t.i,t.x,t.y),i=new Rt(e.i,e.x,e.y),r=t.next,n=e.prev;return t.next=e,e.prev=t,s.next=r,r.prev=s,i.next=s,s.prev=i,n.next=i,i.prev=n,i}function Tt(t,e,s,i){var r=new Rt(t,e,s);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function ut(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Rt(t,e,s){this.i=t,this.x=e,this.y=s,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function bt(t,e,s,i){for(var r=0,n=e,o=s-i;n<s;n+=i)r+=(t[o]-t[n])*(t[n+1]+t[o+1]),o=n;return r}k.exports=X,k.exports.default=X,X.deviation=function(t,e,s,i){var r=e&&e.length,n=r?e[0]*s:t.length,o=Math.abs(bt(t,0,n,s));if(r)for(var a=0,I=e.length;a<I;a++){var E=e[a]*s,c=a<I-1?e[a+1]*s:t.length;o-=Math.abs(bt(t,E,c,s))}var h=0;for(a=0;a<i.length;a+=3){var l=i[a]*s,d=i[a+1]*s,C=i[a+2]*s;h+=Math.abs((t[l]-t[C])*(t[d+1]-t[l+1])-(t[l]-t[d])*(t[C+1]-t[l+1]))}return 0===o&&0===h?0:Math.abs((h-o)/o)},X.flatten=function(t){for(var e=t[0][0].length,s={vertices:[],holes:[],dimensions:e},i=0,r=0;r<t.length;r++){for(var n=0;n<t[r].length;n++)for(var o=0;o<e;o++)s.vertices.push(t[r][n][o]);r>0&&(i+=t[r-1].length,s.holes.push(i))}return s};class Ft{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}x(){return this.bb.readFloat32(this.bb_pos)}mutate_x(t){return this.bb.writeFloat32(this.bb_pos+0,t),!0}y(){return this.bb.readFloat32(this.bb_pos+4)}mutate_y(t){return this.bb.writeFloat32(this.bb_pos+4,t),!0}z(){return this.bb.readFloat32(this.bb_pos+8)}mutate_z(t){return this.bb.writeFloat32(this.bb_pos+8,t),!0}static sizeOf(){return 12}static createVecf(t,e,s,i){return t.prep(4,12),t.writeFloat32(i),t.writeFloat32(s),t.writeFloat32(e),t.offset()}}class pt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}min(t){return(t||new Ft).__init(this.bb_pos,this.bb)}max(t){return(t||new Ft).__init(this.bb_pos+12,this.bb)}static sizeOf(){return 24}static createAABB(t,e,s,i,r,n,o){return t.prep(4,24),t.prep(4,12),t.writeFloat32(o),t.writeFloat32(n),t.writeFloat32(r),t.prep(4,12),t.writeFloat32(i),t.writeFloat32(s),t.writeFloat32(e),t.offset()}}class At{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}center(t){return(t||new Ft).__init(this.bb_pos,this.bb)}axis(t){return(t||new Ft).__init(this.bb_pos+12,this.bb)}refDirection(t){return(t||new Ft).__init(this.bb_pos+24,this.bb)}radius(){return this.bb.readFloat32(this.bb_pos+36)}mutate_radius(t){return this.bb.writeFloat32(this.bb_pos+36,t),!0}angle(){return this.bb.readFloat32(this.bb_pos+40)}mutate_angle(t){return this.bb.writeFloat32(this.bb_pos+40,t),!0}static sizeOf(){return 44}static createArc(t,e,s,i,r,n,o,a,I,E,c,h){return t.prep(4,44),t.writeFloat32(h),t.writeFloat32(c),t.prep(4,12),t.writeFloat32(E),t.writeFloat32(I),t.writeFloat32(a),t.prep(4,12),t.writeFloat32(o),t.writeFloat32(n),t.writeFloat32(r),t.prep(4,12),t.writeFloat32(i),t.writeFloat32(s),t.writeFloat32(e),t.offset()}}const ft=new Int32Array(2),Ot=new Float32Array(ft.buffer),Nt=new Float64Array(ft.buffer),St=1===new Uint16Array(new Uint8Array([1,0]).buffer)[0];var _t,Lt;(Lt=_t||(_t={}))[Lt.UTF8_BYTES=1]="UTF8_BYTES",Lt[Lt.UTF16_STRING=2]="UTF16_STRING";class mt{constructor(t){this.bytes_=t,this.position_=0,this.text_decoder_=new TextDecoder}static allocate(t){return new mt(new Uint8Array(t))}clear(){this.position_=0}bytes(){return this.bytes_}position(){return this.position_}setPosition(t){this.position_=t}capacity(){return this.bytes_.length}readInt8(t){return this.readUint8(t)<<24>>24}readUint8(t){return this.bytes_[t]}readInt16(t){return this.readUint16(t)<<16>>16}readUint16(t){return this.bytes_[t]|this.bytes_[t+1]<<8}readInt32(t){return this.bytes_[t]|this.bytes_[t+1]<<8|this.bytes_[t+2]<<16|this.bytes_[t+3]<<24}readUint32(t){return this.readInt32(t)>>>0}readInt64(t){return BigInt.asIntN(64,BigInt(this.readUint32(t))+(BigInt(this.readUint32(t+4))<<BigInt(32)))}readUint64(t){return BigInt.asUintN(64,BigInt(this.readUint32(t))+(BigInt(this.readUint32(t+4))<<BigInt(32)))}readFloat32(t){return ft[0]=this.readInt32(t),Ot[0]}readFloat64(t){return ft[St?0:1]=this.readInt32(t),ft[St?1:0]=this.readInt32(t+4),Nt[0]}writeInt8(t,e){this.bytes_[t]=e}writeUint8(t,e){this.bytes_[t]=e}writeInt16(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8}writeUint16(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8}writeInt32(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8,this.bytes_[t+2]=e>>16,this.bytes_[t+3]=e>>24}writeUint32(t,e){this.bytes_[t]=e,this.bytes_[t+1]=e>>8,this.bytes_[t+2]=e>>16,this.bytes_[t+3]=e>>24}writeInt64(t,e){this.writeInt32(t,Number(BigInt.asIntN(32,e))),this.writeInt32(t+4,Number(BigInt.asIntN(32,e>>BigInt(32))))}writeUint64(t,e){this.writeUint32(t,Number(BigInt.asUintN(32,e))),this.writeUint32(t+4,Number(BigInt.asUintN(32,e>>BigInt(32))))}writeFloat32(t,e){Ot[0]=e,this.writeInt32(t,ft[0])}writeFloat64(t,e){Nt[0]=e,this.writeInt32(t,ft[St?0:1]),this.writeInt32(t+4,ft[St?1:0])}getBufferIdentifier(){if(this.bytes_.length<this.position_+4+4)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");let t="";for(let e=0;e<4;e++)t+=String.fromCharCode(this.readInt8(this.position_+4+e));return t}__offset(t,e){const s=t-this.readInt32(t);return e<this.readInt16(s)?this.readInt16(s+e):0}__union(t,e){return t.bb_pos=e+this.readInt32(e),t.bb=this,t}__string(t,e){t+=this.readInt32(t);const s=this.readInt32(t);t+=4;const i=this.bytes_.subarray(t,t+s);return e===_t.UTF8_BYTES?i:this.text_decoder_.decode(i)}__union_with_string(t,e){return"string"==typeof t?this.__string(e):this.__union(t,e)}__indirect(t){return t+this.readInt32(t)}__vector(t){return t+this.readInt32(t)+4}__vector_len(t){return this.readInt32(t+this.readInt32(t))}__has_identifier(t){if(4!=t.length)throw new Error("FlatBuffers: file identifier must be length 4");for(let e=0;e<4;e++)if(t.charCodeAt(e)!=this.readInt8(this.position()+4+e))return!1;return!0}createScalarList(t,e){const s=[];for(let i=0;i<e;++i){const e=t(i);null!==e&&s.push(e)}return s}createObjList(t,e){const s=[];for(let i=0;i<e;++i){const e=t(i);null!==e&&s.push(e.unpack())}return s}}class Pt{constructor(t){let e;this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1,this.string_maps=null,this.text_encoder=new TextEncoder,e=t||1024,this.bb=mt.allocate(e),this.space=e}clear(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1,this.string_maps=null}forceDefaults(t){this.force_defaults=t}dataBuffer(){return this.bb}asUint8Array(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())}prep(t,e){t>this.minalign&&(this.minalign=t);const s=1+~(this.bb.capacity()-this.space+e)&t-1;for(;this.space<s+t+e;){const t=this.bb.capacity();this.bb=Pt.growByteBuffer(this.bb),this.space+=this.bb.capacity()-t}this.pad(s)}pad(t){for(let e=0;e<t;e++)this.bb.writeInt8(--this.space,0)}writeInt8(t){this.bb.writeInt8(this.space-=1,t)}writeInt16(t){this.bb.writeInt16(this.space-=2,t)}writeInt32(t){this.bb.writeInt32(this.space-=4,t)}writeInt64(t){this.bb.writeInt64(this.space-=8,t)}writeFloat32(t){this.bb.writeFloat32(this.space-=4,t)}writeFloat64(t){this.bb.writeFloat64(this.space-=8,t)}addInt8(t){this.prep(1,0),this.writeInt8(t)}addInt16(t){this.prep(2,0),this.writeInt16(t)}addInt32(t){this.prep(4,0),this.writeInt32(t)}addInt64(t){this.prep(8,0),this.writeInt64(t)}addFloat32(t){this.prep(4,0),this.writeFloat32(t)}addFloat64(t){this.prep(8,0),this.writeFloat64(t)}addFieldInt8(t,e,s){(this.force_defaults||e!=s)&&(this.addInt8(e),this.slot(t))}addFieldInt16(t,e,s){(this.force_defaults||e!=s)&&(this.addInt16(e),this.slot(t))}addFieldInt32(t,e,s){(this.force_defaults||e!=s)&&(this.addInt32(e),this.slot(t))}addFieldInt64(t,e,s){(this.force_defaults||e!==s)&&(this.addInt64(e),this.slot(t))}addFieldFloat32(t,e,s){(this.force_defaults||e!=s)&&(this.addFloat32(e),this.slot(t))}addFieldFloat64(t,e,s){(this.force_defaults||e!=s)&&(this.addFloat64(e),this.slot(t))}addFieldOffset(t,e,s){(this.force_defaults||e!=s)&&(this.addOffset(e),this.slot(t))}addFieldStruct(t,e,s){e!=s&&(this.nested(e),this.slot(t))}nested(t){if(t!=this.offset())throw new TypeError("FlatBuffers: struct must be serialized inline.")}notNested(){if(this.isNested)throw new TypeError("FlatBuffers: object serialization must not be nested.")}slot(t){null!==this.vtable&&(this.vtable[t]=this.offset())}offset(){return this.bb.capacity()-this.space}static growByteBuffer(t){const e=t.capacity();if(3221225472&e)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");const s=e<<1,i=mt.allocate(s);return i.setPosition(s-e),i.bytes().set(t.bytes(),s-e),i}addOffset(t){this.prep(4,0),this.writeInt32(this.offset()-t+4)}startObject(t){this.notNested(),null==this.vtable&&(this.vtable=[]),this.vtable_in_use=t;for(let e=0;e<t;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()}endObject(){if(null==this.vtable||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);const t=this.offset();let e=this.vtable_in_use-1;for(;e>=0&&0==this.vtable[e];e--);const s=e+1;for(;e>=0;e--)this.addInt16(0!=this.vtable[e]?t-this.vtable[e]:0);this.addInt16(t-this.object_start);const i=2*(s+2);this.addInt16(i);let r=0;const n=this.space;t:for(e=0;e<this.vtables.length;e++){const t=this.bb.capacity()-this.vtables[e];if(i==this.bb.readInt16(t)){for(let e=2;e<i;e+=2)if(this.bb.readInt16(n+e)!=this.bb.readInt16(t+e))continue t;r=this.vtables[e];break}}return r?(this.space=this.bb.capacity()-t,this.bb.writeInt32(this.space,r-t)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-t,this.offset()-t)),this.isNested=!1,t}finish(t,e,s){const i=s?4:0;if(e){const t=e;if(this.prep(this.minalign,8+i),4!=t.length)throw new TypeError("FlatBuffers: file identifier must be length 4");for(let e=3;e>=0;e--)this.writeInt8(t.charCodeAt(e))}this.prep(this.minalign,4+i),this.addOffset(t),i&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)}finishSizePrefixed(t,e){this.finish(t,e,!0)}requiredField(t,e){const s=this.bb.capacity()-t,i=s-this.bb.readInt32(s);if(!(e<this.bb.readInt16(i)&&0!=this.bb.readInt16(i+e)))throw new TypeError("FlatBuffers: field "+e+" must be set")}startVector(t,e,s){this.notNested(),this.vector_num_elems=e,this.prep(4,t*e),this.prep(s,t*e)}endVector(){return this.writeInt32(this.vector_num_elems),this.offset()}createSharedString(t){if(!t)return 0;if(this.string_maps||(this.string_maps=new Map),this.string_maps.has(t))return this.string_maps.get(t);const e=this.createString(t);return this.string_maps.set(t,e),e}createString(t){if(null==t)return 0;let e;return e=t instanceof Uint8Array?t:this.text_encoder.encode(t),this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length),this.bb.bytes().set(e,this.space),this.endVector()}createByteVector(t){return null==t?0:(this.startVector(1,t.length,1),this.bb.setPosition(this.space-=t.length),this.bb.bytes().set(t,this.space),this.endVector())}createObjectOffset(t){return null===t?0:"string"==typeof t?this.createString(t):t.pack(this)}createObjectOffsetList(t){const e=[];for(let s=0;s<t.length;++s){const i=t[s];if(null===i)throw new TypeError("FlatBuffers: Argument for createObjectOffsetList cannot contain null.");e.push(this.createObjectOffset(i))}return e}createStructOffsetList(t,e){return e(this,t.length),this.createObjectOffsetList(t.slice().reverse()),this.endVector()}}class Mt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsAttribute(t,e){return(e||new Mt).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsAttribute(t,e){return t.setPosition(t.position()+4),(e||new Mt).__init(t.readInt32(t.position())+t.position(),t)}data(t,e){const s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb.__vector(this.bb_pos+s)+4*t,e):null}dataLength(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__vector_len(this.bb_pos+t):0}static startAttribute(t){t.startObject(1)}static addData(t,e){t.addFieldOffset(0,e,0)}static createDataVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startDataVector(t,e){t.startVector(4,e,4)}static endAttribute(t){const e=t.endObject();return t.requiredField(e,4),e}static createAttribute(t,e){return Mt.startAttribute(t),Mt.addData(t,e),Mt.endAttribute(t)}}class gt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}start(t){return(t||new Ft).__init(this.bb_pos,this.bb)}end(t){return(t||new Ft).__init(this.bb_pos+12,this.bb)}static sizeOf(){return 24}static createLine(t,e,s,i,r,n,o){return t.prep(4,24),t.prep(4,12),t.writeFloat32(o),t.writeFloat32(n),t.writeFloat32(r),t.prep(4,12),t.writeFloat32(i),t.writeFloat32(s),t.writeFloat32(e),t.offset()}}class Ut{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsPolyline(t,e){return(e||new Ut).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsPolyline(t,e){return t.setPosition(t.position()+4),(e||new Ut).__init(t.readInt32(t.position())+t.position(),t)}points(t,e){const s=this.bb.__offset(this.bb_pos,4);return s?(e||new Ft).__init(this.bb.__vector(this.bb_pos+s)+12*t,this.bb):null}pointsLength(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__vector_len(this.bb_pos+t):0}static startPolyline(t){t.startObject(1)}static addPoints(t,e){t.addFieldOffset(0,e,0)}static startPointsVector(t,e){t.startVector(12,e,4)}static endPolyline(t){return t.endObject()}static createPolyline(t,e){return Ut.startPolyline(t),Ut.addPoints(t,e),Ut.endPolyline(t)}}class Dt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsAxis(t,e){return(e||new Dt).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsAxis(t,e){return t.setPosition(t.position()+4),(e||new Dt).__init(t.readInt32(t.position())+t.position(),t)}types(t){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt8(this.bb.__vector(this.bb_pos+e)+t):0}typesLength(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__vector_len(this.bb_pos+t):0}typesArray(){const t=this.bb.__offset(this.bb_pos,4);return t?new Int8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}indexes(t){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readUint32(this.bb.__vector(this.bb_pos+e)+4*t):0}indexesLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}indexesArray(){const t=this.bb.__offset(this.bb_pos,6);return t?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}lines(t,e){const s=this.bb.__offset(this.bb_pos,8);return s?(e||new gt).__init(this.bb.__vector(this.bb_pos+s)+24*t,this.bb):null}linesLength(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}polyLines(t,e){const s=this.bb.__offset(this.bb_pos,10);return s?(e||new Ut).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+4*t),this.bb):null}polyLinesLength(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.__vector_len(this.bb_pos+t):0}arcs(t,e){const s=this.bb.__offset(this.bb_pos,12);return s?(e||new At).__init(this.bb.__vector(this.bb_pos+s)+44*t,this.bb):null}arcsLength(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.__vector_len(this.bb_pos+t):0}static startAxis(t){t.startObject(5)}static addTypes(t,e){t.addFieldOffset(0,e,0)}static createTypesVector(t,e){t.startVector(1,e.length,1);for(let s=e.length-1;s>=0;s--)t.addInt8(e[s]);return t.endVector()}static startTypesVector(t,e){t.startVector(1,e,1)}static addIndexes(t,e){t.addFieldOffset(1,e,0)}static createIndexesVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startIndexesVector(t,e){t.startVector(4,e,4)}static addLines(t,e){t.addFieldOffset(2,e,0)}static startLinesVector(t,e){t.startVector(24,e,4)}static addPolyLines(t,e){t.addFieldOffset(3,e,0)}static createPolyLinesVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startPolyLinesVector(t,e){t.startVector(4,e,4)}static addArcs(t,e){t.addFieldOffset(4,e,0)}static startArcsVector(t,e){t.startVector(44,e,4)}static endAxis(t){const e=t.endObject();return t.requiredField(e,4),t.requiredField(e,6),t.requiredField(e,8),t.requiredField(e,10),t.requiredField(e,12),e}static createAxis(t,e,s,i,r,n){return Dt.startAxis(t),Dt.addTypes(t,e),Dt.addIndexes(t,s),Dt.addLines(t,i),Dt.addPolyLines(t,r),Dt.addArcs(t,n),Dt.endAxis(t)}}class yt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}localTransformId(){return this.bb.readUint32(this.bb_pos)}mutate_local_transform_id(t){return this.bb.writeUint32(this.bb_pos+0,t),!0}itemId(){return this.bb.readUint32(this.bb_pos+4)}mutate_item_id(t){return this.bb.writeUint32(this.bb_pos+4,t),!0}representationId(){return this.bb.readUint32(this.bb_pos+8)}mutate_representation_id(t){return this.bb.writeUint32(this.bb_pos+8,t),!0}materialId(){return this.bb.readUint32(this.bb_pos+12)}mutate_material_id(t){return this.bb.writeUint32(this.bb_pos+12,t),!0}static sizeOf(){return 16}static createInstance(t,e,s,i,r){return t.prep(4,16),t.writeInt32(r),t.writeInt32(i),t.writeInt32(s),t.writeInt32(e),t.offset()}}class wt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}r(){return this.bb.readUint8(this.bb_pos)}mutate_r(t){return this.bb.writeUint8(this.bb_pos+0,t),!0}g(){return this.bb.readUint8(this.bb_pos+1)}mutate_g(t){return this.bb.writeUint8(this.bb_pos+1,t),!0}b(){return this.bb.readUint8(this.bb_pos+2)}mutate_b(t){return this.bb.writeUint8(this.bb_pos+2,t),!0}a(){return this.bb.readUint8(this.bb_pos+3)}mutate_a(t){return this.bb.writeUint8(this.bb_pos+3,t),!0}sidedness(){return this.bb.readInt8(this.bb_pos+4)}mutate_sidedness(t){return this.bb.writeInt8(this.bb_pos+4,t),!0}lineType(){return this.bb.readInt8(this.bb_pos+5)}mutate_line_type(t){return this.bb.writeInt8(this.bb_pos+5,t),!0}static sizeOf(){return 6}static createMaterial(t,e,s,i,r,n,o){return t.prep(1,6),t.writeInt8(o),t.writeInt8(n),t.writeInt8(r),t.writeInt8(i),t.writeInt8(s),t.writeInt8(e),t.offset()}}class vt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}type(){return this.bb.readInt8(this.bb_pos)}mutate_type(t){return this.bb.writeInt8(this.bb_pos+0,t),!0}index(){return this.bb.readUint32(this.bb_pos+4)}mutate_index(t){return this.bb.writeUint32(this.bb_pos+4,t),!0}boundingBox(t){return(t||new pt).__init(this.bb_pos+8,this.bb)}static sizeOf(){return 32}static createRepresentation(t,e,s,i,r,n,o,a,I){return t.prep(4,32),t.prep(4,24),t.prep(4,12),t.writeFloat32(I),t.writeFloat32(a),t.writeFloat32(o),t.prep(4,12),t.writeFloat32(n),t.writeFloat32(r),t.writeFloat32(i),t.writeInt32(s),t.pad(3),t.writeInt8(e),t.offset()}}class xt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsShellHole(t,e){return(e||new xt).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsShellHole(t,e){return t.setPosition(t.position()+4),(e||new xt).__init(t.readInt32(t.position())+t.position(),t)}profile(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readUint16(this.bb_pos+t):0}mutate_profile(t){const e=this.bb.__offset(this.bb_pos,4);return 0!==e&&(this.bb.writeUint16(this.bb_pos+e,t),!0)}indices(t){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readUint16(this.bb.__vector(this.bb_pos+e)+2*t):0}indicesLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}indicesArray(){const t=this.bb.__offset(this.bb_pos,6);return t?new Uint16Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}static startShellHole(t){t.startObject(2)}static addProfile(t,e){t.addFieldInt16(0,e,0)}static addIndices(t,e){t.addFieldOffset(1,e,0)}static createIndicesVector(t,e){t.startVector(2,e.length,2);for(let s=e.length-1;s>=0;s--)t.addInt16(e[s]);return t.endVector()}static startIndicesVector(t,e){t.startVector(2,e,2)}static endShellHole(t){const e=t.endObject();return t.requiredField(e,6),e}static createShellHole(t,e,s){return xt.startShellHole(t),xt.addProfile(t,e),xt.addIndices(t,s),xt.endShellHole(t)}}class Vt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsShellProfile(t,e){return(e||new Vt).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsShellProfile(t,e){return t.setPosition(t.position()+4),(e||new Vt).__init(t.readInt32(t.position())+t.position(),t)}indices(t){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readUint16(this.bb.__vector(this.bb_pos+e)+2*t):0}indicesLength(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__vector_len(this.bb_pos+t):0}indicesArray(){const t=this.bb.__offset(this.bb_pos,4);return t?new Uint16Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}static startShellProfile(t){t.startObject(1)}static addIndices(t,e){t.addFieldOffset(0,e,0)}static createIndicesVector(t,e){t.startVector(2,e.length,2);for(let s=e.length-1;s>=0;s--)t.addInt16(e[s]);return t.endVector()}static startIndicesVector(t,e){t.startVector(2,e,2)}static endShellProfile(t){const e=t.endObject();return t.requiredField(e,4),e}static createShellProfile(t,e){return Vt.startShellProfile(t),Vt.addIndices(t,e),Vt.endShellProfile(t)}}class Gt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsShell(t,e){return(e||new Gt).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsShell(t,e){return t.setPosition(t.position()+4),(e||new Gt).__init(t.readInt32(t.position())+t.position(),t)}profiles(t,e){const s=this.bb.__offset(this.bb_pos,4);return s?(e||new Vt).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+4*t),this.bb):null}profilesLength(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__vector_len(this.bb_pos+t):0}holes(t,e){const s=this.bb.__offset(this.bb_pos,6);return s?(e||new xt).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+4*t),this.bb):null}holesLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}vertices(t,e){const s=this.bb.__offset(this.bb_pos,8);return s?(e||new Ft).__init(this.bb.__vector(this.bb_pos+s)+12*t,this.bb):null}verticesLength(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}static startShell(t){t.startObject(3)}static addProfiles(t,e){t.addFieldOffset(0,e,0)}static createProfilesVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startProfilesVector(t,e){t.startVector(4,e,4)}static addHoles(t,e){t.addFieldOffset(1,e,0)}static createHolesVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startHolesVector(t,e){t.startVector(4,e,4)}static addVertices(t,e){t.addFieldOffset(2,e,0)}static startVerticesVector(t,e){t.startVector(12,e,4)}static endShell(t){const e=t.endObject();return t.requiredField(e,4),t.requiredField(e,6),t.requiredField(e,8),e}static createShell(t,e,s,i){return Gt.startShell(t),Gt.addProfiles(t,e),Gt.addHoles(t,s),Gt.addVertices(t,i),Gt.endShell(t)}}class Bt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsSweptDisk(t,e){return(e||new Bt).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsSweptDisk(t,e){return t.setPosition(t.position()+4),(e||new Bt).__init(t.readInt32(t.position())+t.position(),t)}axes(t,e){const s=this.bb.__offset(this.bb_pos,4);return s?(e||new Dt).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+4*t),this.bb):null}axesLength(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__vector_len(this.bb_pos+t):0}radius(t){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readFloat64(this.bb.__vector(this.bb_pos+e)+8*t):0}radiusLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}radiusArray(){const t=this.bb.__offset(this.bb_pos,6);return t?new Float64Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}static startSweptDisk(t){t.startObject(2)}static addAxes(t,e){t.addFieldOffset(0,e,0)}static createAxesVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startAxesVector(t,e){t.startVector(4,e,4)}static addRadius(t,e){t.addFieldOffset(1,e,0)}static createRadiusVector(t,e){t.startVector(8,e.length,8);for(let s=e.length-1;s>=0;s--)t.addFloat64(e[s]);return t.endVector()}static startRadiusVector(t,e){t.startVector(8,e,8)}static endSweptDisk(t){const e=t.endObject();return t.requiredField(e,4),t.requiredField(e,6),e}static createSweptDisk(t,e,s){return Bt.startSweptDisk(t),Bt.addAxes(t,e),Bt.addRadius(t,s),Bt.endSweptDisk(t)}}class Yt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}x(){return this.bb.readFloat64(this.bb_pos)}mutate_x(t){return this.bb.writeFloat64(this.bb_pos+0,t),!0}y(){return this.bb.readFloat64(this.bb_pos+8)}mutate_y(t){return this.bb.writeFloat64(this.bb_pos+8,t),!0}z(){return this.bb.readFloat64(this.bb_pos+16)}mutate_z(t){return this.bb.writeFloat64(this.bb_pos+16,t),!0}static sizeOf(){return 24}static createVecd(t,e,s,i){return t.prep(8,24),t.writeFloat64(i),t.writeFloat64(s),t.writeFloat64(e),t.offset()}}class Ht{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}position(t){return(t||new Yt).__init(this.bb_pos,this.bb)}xAxis(t){return(t||new Ft).__init(this.bb_pos+24,this.bb)}yAxis(t){return(t||new Ft).__init(this.bb_pos+36,this.bb)}static sizeOf(){return 48}static createTransform(t,e,s,i,r,n,o,a,I,E){return t.prep(8,48),t.prep(4,12),t.writeFloat32(E),t.writeFloat32(I),t.writeFloat32(a),t.prep(4,12),t.writeFloat32(o),t.writeFloat32(n),t.writeFloat32(r),t.prep(8,24),t.writeFloat64(i),t.writeFloat64(s),t.writeFloat64(e),t.offset()}}class zt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsGeometries(t,e){return(e||new zt).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsGeometries(t,e){return t.setPosition(t.position()+4),(e||new zt).__init(t.readInt32(t.position())+t.position(),t)}coordinates(t){const e=this.bb.__offset(this.bb_pos,4);return e?(t||new Ht).__init(this.bb_pos+e,this.bb):null}localTransforms(t,e){const s=this.bb.__offset(this.bb_pos,6);return s?(e||new Ht).__init(this.bb.__vector(this.bb_pos+s)+48*t,this.bb):null}localTransformsLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}globalTransforms(t,e){const s=this.bb.__offset(this.bb_pos,8);return s?(e||new Ht).__init(this.bb.__vector(this.bb_pos+s)+48*t,this.bb):null}globalTransformsLength(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}materials(t,e){const s=this.bb.__offset(this.bb_pos,10);return s?(e||new wt).__init(this.bb.__vector(this.bb_pos+s)+6*t,this.bb):null}materialsLength(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.__vector_len(this.bb_pos+t):0}representations(t,e){const s=this.bb.__offset(this.bb_pos,12);return s?(e||new vt).__init(this.bb.__vector(this.bb_pos+s)+32*t,this.bb):null}representationsLength(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.__vector_len(this.bb_pos+t):0}instances(t,e){const s=this.bb.__offset(this.bb_pos,14);return s?(e||new yt).__init(this.bb.__vector(this.bb_pos+s)+16*t,this.bb):null}instancesLength(){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__vector_len(this.bb_pos+t):0}shells(t,e){const s=this.bb.__offset(this.bb_pos,16);return s?(e||new Gt).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+4*t),this.bb):null}shellsLength(){const t=this.bb.__offset(this.bb_pos,16);return t?this.bb.__vector_len(this.bb_pos+t):0}sweptDisks(t,e){const s=this.bb.__offset(this.bb_pos,18);return s?(e||new Bt).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+4*t),this.bb):null}sweptDisksLength(){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.__vector_len(this.bb_pos+t):0}geometriesItems(t){const e=this.bb.__offset(this.bb_pos,20);return e?this.bb.readUint32(this.bb.__vector(this.bb_pos+e)+4*t):0}geometriesItemsLength(){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.__vector_len(this.bb_pos+t):0}geometriesItemsArray(){const t=this.bb.__offset(this.bb_pos,20);return t?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}static startGeometries(t){t.startObject(9)}static addCoordinates(t,e){t.addFieldStruct(0,e,0)}static addLocalTransforms(t,e){t.addFieldOffset(1,e,0)}static startLocalTransformsVector(t,e){t.startVector(48,e,8)}static addGlobalTransforms(t,e){t.addFieldOffset(2,e,0)}static startGlobalTransformsVector(t,e){t.startVector(48,e,8)}static addMaterials(t,e){t.addFieldOffset(3,e,0)}static startMaterialsVector(t,e){t.startVector(6,e,1)}static addRepresentations(t,e){t.addFieldOffset(4,e,0)}static startRepresentationsVector(t,e){t.startVector(32,e,4)}static addInstances(t,e){t.addFieldOffset(5,e,0)}static startInstancesVector(t,e){t.startVector(16,e,4)}static addShells(t,e){t.addFieldOffset(6,e,0)}static createShellsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startShellsVector(t,e){t.startVector(4,e,4)}static addSweptDisks(t,e){t.addFieldOffset(7,e,0)}static createSweptDisksVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startSweptDisksVector(t,e){t.startVector(4,e,4)}static addGeometriesItems(t,e){t.addFieldOffset(8,e,0)}static createGeometriesItemsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startGeometriesItemsVector(t,e){t.startVector(4,e,4)}static endGeometries(t){const e=t.endObject();return t.requiredField(e,4),t.requiredField(e,6),t.requiredField(e,8),t.requiredField(e,10),t.requiredField(e,12),t.requiredField(e,14),t.requiredField(e,16),t.requiredField(e,18),t.requiredField(e,20),e}static createGeometries(t,e,s,i,r,n,o,a,I,E){return zt.startGeometries(t),zt.addCoordinates(t,e),zt.addLocalTransforms(t,s),zt.addGlobalTransforms(t,i),zt.addMaterials(t,r),zt.addRepresentations(t,n),zt.addInstances(t,o),zt.addShells(t,a),zt.addSweptDisks(t,I),zt.addGeometriesItems(t,E),zt.endGeometries(t)}}var Wt=(t=>(t[t.None=0]="None",t[t.Shell=1]="Shell",t[t.SweptDisk=2]="SweptDisk",t))(Wt||{});class jt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}data1(){return this.bb.readUint32(this.bb_pos)}mutate_data1(t){return this.bb.writeUint32(this.bb_pos+0,t),!0}data2(){return this.bb.readUint16(this.bb_pos+4)}mutate_data2(t){return this.bb.writeUint16(this.bb_pos+4,t),!0}data3(){return this.bb.readUint16(this.bb_pos+6)}mutate_data3(t){return this.bb.writeUint16(this.bb_pos+6,t),!0}data41(){return this.bb.readUint8(this.bb_pos+8)}mutate_data4_1(t){return this.bb.writeUint8(this.bb_pos+8,t),!0}data42(){return this.bb.readUint8(this.bb_pos+9)}mutate_data4_2(t){return this.bb.writeUint8(this.bb_pos+9,t),!0}data43(){return this.bb.readUint8(this.bb_pos+10)}mutate_data4_3(t){return this.bb.writeUint8(this.bb_pos+10,t),!0}data44(){return this.bb.readUint8(this.bb_pos+11)}mutate_data4_4(t){return this.bb.writeUint8(this.bb_pos+11,t),!0}data45(){return this.bb.readUint8(this.bb_pos+12)}mutate_data4_5(t){return this.bb.writeUint8(this.bb_pos+12,t),!0}data46(){return this.bb.readUint8(this.bb_pos+13)}mutate_data4_6(t){return this.bb.writeUint8(this.bb_pos+13,t),!0}data47(){return this.bb.readUint8(this.bb_pos+14)}mutate_data4_7(t){return this.bb.writeUint8(this.bb_pos+14,t),!0}data48(){return this.bb.readUint8(this.bb_pos+15)}mutate_data4_8(t){return this.bb.writeUint8(this.bb_pos+15,t),!0}static sizeOf(){return 16}static createGuid(t,e,s,i,r,n,o,a,I,E,c,h){return t.prep(4,16),t.writeInt8(h),t.writeInt8(c),t.writeInt8(E),t.writeInt8(I),t.writeInt8(a),t.writeInt8(o),t.writeInt8(n),t.writeInt8(r),t.writeInt16(i),t.writeInt16(s),t.writeInt32(e),t.offset()}}var kt=(t=>(t[t.Normal=0]="Normal",t[t.Border=1]="Border",t[t.Center=2]="Center",t[t.DashDot=3]="DashDot",t[t.Dashed=4]="Dashed",t[t.Divide=5]="Divide",t[t.Dot=6]="Dot",t[t.Hidden=7]="Hidden",t))(kt||{});class Xt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsRelation(t,e){return(e||new Xt).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsRelation(t,e){return t.setPosition(t.position()+4),(e||new Xt).__init(t.readInt32(t.position())+t.position(),t)}data(t,e){const s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb.__vector(this.bb_pos+s)+4*t,e):null}dataLength(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__vector_len(this.bb_pos+t):0}static startRelation(t){t.startObject(1)}static addData(t,e){t.addFieldOffset(0,e,0)}static createDataVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startDataVector(t,e){t.startVector(4,e,4)}static endRelation(t){const e=t.endObject();return t.requiredField(e,4),e}static createRelation(t,e){return Xt.startRelation(t),Xt.addData(t,e),Xt.endRelation(t)}}class qt{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsSpatialStructure(t,e){return(e||new qt).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsSpatialStructure(t,e){return t.setPosition(t.position()+4),(e||new qt).__init(t.readInt32(t.position())+t.position(),t)}localId(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readUint32(this.bb_pos+t):null}mutate_local_id(t){const e=this.bb.__offset(this.bb_pos,4);return 0!==e&&(this.bb.writeUint32(this.bb_pos+e,t),!0)}category(t){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__string(this.bb_pos+e,t):null}children(t,e){const s=this.bb.__offset(this.bb_pos,8);return s?(e||new qt).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+4*t),this.bb):null}childrenLength(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}static startSpatialStructure(t){t.startObject(3)}static addLocalId(t,e){t.addFieldInt32(0,e,null)}static addCategory(t,e){t.addFieldOffset(1,e,0)}static addChildren(t,e){t.addFieldOffset(2,e,0)}static createChildrenVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startChildrenVector(t,e){t.startVector(4,e,4)}static endSpatialStructure(t){return t.endObject()}static createSpatialStructure(t,e,s,i){return qt.startSpatialStructure(t),null!==e&&qt.addLocalId(t,e),qt.addCategory(t,s),qt.addChildren(t,i),qt.endSpatialStructure(t)}}class $t{constructor(){e(this,"bb",null),e(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsModel(t,e){return(e||new $t).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsModel(t,e){return t.setPosition(t.position()+4),(e||new $t).__init(t.readInt32(t.position())+t.position(),t)}static bufferHasIdentifier(t){return t.__has_identifier("0001")}metadata(t){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__string(this.bb_pos+e,t):null}guids(t,e){const s=this.bb.__offset(this.bb_pos,6);return s?(e||new jt).__init(this.bb.__vector(this.bb_pos+s)+16*t,this.bb):null}guidsLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}guidsItems(t){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.readUint32(this.bb.__vector(this.bb_pos+e)+4*t):0}guidsItemsLength(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}guidsItemsArray(){const t=this.bb.__offset(this.bb_pos,8);return t?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}maxLocalId(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readUint32(this.bb_pos+t):0}mutate_max_local_id(t){const e=this.bb.__offset(this.bb_pos,10);return 0!==e&&(this.bb.writeUint32(this.bb_pos+e,t),!0)}localIds(t){const e=this.bb.__offset(this.bb_pos,12);return e?this.bb.readUint32(this.bb.__vector(this.bb_pos+e)+4*t):0}localIdsLength(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.__vector_len(this.bb_pos+t):0}localIdsArray(){const t=this.bb.__offset(this.bb_pos,12);return t?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}categories(t,e){const s=this.bb.__offset(this.bb_pos,14);return s?this.bb.__string(this.bb.__vector(this.bb_pos+s)+4*t,e):null}categoriesLength(){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__vector_len(this.bb_pos+t):0}geometries(t){const e=this.bb.__offset(this.bb_pos,16);return e?(t||new zt).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}attributes(t,e){const s=this.bb.__offset(this.bb_pos,18);return s?(e||new Mt).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+4*t),this.bb):null}attributesLength(){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.__vector_len(this.bb_pos+t):0}relations(t,e){const s=this.bb.__offset(this.bb_pos,20);return s?(e||new Xt).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+4*t),this.bb):null}relationsLength(){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.__vector_len(this.bb_pos+t):0}relationsItems(t){const e=this.bb.__offset(this.bb_pos,22);return e?this.bb.readInt32(this.bb.__vector(this.bb_pos+e)+4*t):0}relationsItemsLength(){const t=this.bb.__offset(this.bb_pos,22);return t?this.bb.__vector_len(this.bb_pos+t):0}relationsItemsArray(){const t=this.bb.__offset(this.bb_pos,22);return t?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}guid(t){const e=this.bb.__offset(this.bb_pos,24);return e?this.bb.__string(this.bb_pos+e,t):null}spatialStructure(t){const e=this.bb.__offset(this.bb_pos,26);return e?(t||new qt).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}static startModel(t){t.startObject(12)}static addMetadata(t,e){t.addFieldOffset(0,e,0)}static addGuids(t,e){t.addFieldOffset(1,e,0)}static startGuidsVector(t,e){t.startVector(16,e,4)}static addGuidsItems(t,e){t.addFieldOffset(2,e,0)}static createGuidsItemsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startGuidsItemsVector(t,e){t.startVector(4,e,4)}static addMaxLocalId(t,e){t.addFieldInt32(3,e,0)}static addLocalIds(t,e){t.addFieldOffset(4,e,0)}static createLocalIdsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startLocalIdsVector(t,e){t.startVector(4,e,4)}static addCategories(t,e){t.addFieldOffset(5,e,0)}static createCategoriesVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startCategoriesVector(t,e){t.startVector(4,e,4)}static addGeometries(t,e){t.addFieldOffset(6,e,0)}static addAttributes(t,e){t.addFieldOffset(7,e,0)}static createAttributesVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startAttributesVector(t,e){t.startVector(4,e,4)}static addRelations(t,e){t.addFieldOffset(8,e,0)}static createRelationsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startRelationsVector(t,e){t.startVector(4,e,4)}static addRelationsItems(t,e){t.addFieldOffset(9,e,0)}static createRelationsItemsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startRelationsItemsVector(t,e){t.startVector(4,e,4)}static addGuid(t,e){t.addFieldOffset(10,e,0)}static addSpatialStructure(t,e){t.addFieldOffset(11,e,0)}static endModel(t){const e=t.endObject();return t.requiredField(e,6),t.requiredField(e,8),t.requiredField(e,12),t.requiredField(e,14),t.requiredField(e,16),t.requiredField(e,24),e}static finishModelBuffer(t,e){t.finish(e,"0001")}static finishSizePrefixedModelBuffer(t,e){t.finish(e,"0001",!0)}}var Zt=(t=>(t[t.Line=0]="Line",t[t.PolyLine=1]="PolyLine",t[t.Arc=2]="Arc",t))(Zt||{}),Kt=(t=>(t[t.Single=0]="Single",t[t.Double=1]="Double",t[t.FrontFace=2]="FrontFace",t[t.BackFace=3]="BackFace",t))(Kt||{});const Qt=class t{static set(e,s,i){const r=s.globalTransforms(e);t.serializeTransform(i,r)}};e(Qt,"get",(()=>{const t=new Ht,e=new s.Matrix4,i=new s.Matrix4;return(s,r,n)=>{Qt.parseTransform(r.localTransforms(s.localTransformId(),t),e),Qt.parseTransform(r.globalTransforms(s.itemId()),i),n.multiplyMatrices(i,e)}})()),e(Qt,"getBBox",(()=>{const t=new pt;return(e,s)=>{e.boundingBox(t),Qt.parseBBox(t,s)}})()),e(Qt,"parseBBox",(()=>{const t=new Ft;return(e,s)=>{e.min(t),s.min.set(Jt(t.x()),Jt(t.y()),Jt(t.z())),e.max(t),s.max.set(Jt(t.x()),Jt(t.y()),Jt(t.z()))}})()),e(Qt,"parseTransform",(()=>{const t=new s.Vector3,e=new s.Vector3,i=new s.Vector3,r=new s.Vector3,n=new Yt,o=new Ft;return(s,a)=>(s.position(n),t.set(Jt(n.x()),Jt(n.y()),Jt(n.z())),s.xAxis(o),e.set(Jt(o.x()),Jt(o.y()),Jt(o.z())),s.yAxis(o),i.set(Jt(o.x()),Jt(o.y()),Jt(o.z())),r.crossVectors(e,i),a.set(e.x,i.x,r.x,t.x,e.y,i.y,r.y,t.y,e.z,i.z,r.z,t.z,0,0,0,1),a)})()),e(Qt,"serializeTransform",(()=>{const t=new Yt,e=new Ft;return(s,i)=>{const r=i.position(t);r.mutate_x(s.elements[12]),r.mutate_y(s.elements[13]),r.mutate_z(s.elements[14]);const n=i.xAxis(e);n.mutate_x(s.elements[0]),n.mutate_y(s.elements[1]),n.mutate_z(s.elements[2]);const o=i.yAxis(e);o.mutate_x(s.elements[4]),o.mutate_y(s.elements[5]),o.mutate_z(s.elements[6])}})()),e(Qt,"getBBoxSize",(()=>{const t=new s.Vector3,e=new s.Vector3,i=new s.Vector3,r=new s.Vector3,n=new s.Line3;return s=>(t.copy(s.min),e.copy(s.max),i.addVectors(t,e).multiplyScalar(.5),s.getSize(r),r.x>=r.y&&r.x>=r.z?(t.set(t.x,i.y,i.z),e.set(e.x,i.y,i.z)):r.y>=r.z?(t.set(i.x,t.y,i.z),e.set(i.x,e.y,i.z)):(t.set(i.x,i.y,t.z),e.set(i.x,i.y,e.z)),n.start=t.clone(),n.end=e.clone(),n)})());function Jt(t){return Number.isNaN(t)||!Number.isFinite(t)?0:t}class te{}e(te,"zero",Object.freeze(new s.Vector3(0,0,0))),e(te,"one",Object.freeze(new s.Vector3(1,1,1))),e(te,"up",Object.freeze(new s.Vector3(0,0,1))),e(te,"down",Object.freeze(new s.Vector3(0,0,-1))),e(te,"forward",Object.freeze(new s.Vector3(0,1,0))),e(te,"back",Object.freeze(new s.Vector3(0,-1,0))),e(te,"right",Object.freeze(new s.Vector3(1,0,0))),e(te,"left",Object.freeze(new s.Vector3(-1,0,0))),e(te,"threejsUp",Object.freeze(new s.Vector3(0,1,0))),e(te,"threejsDown",Object.freeze(new s.Vector3(0,-1,0))),e(te,"threejsForward",Object.freeze(new s.Vector3(0,0,1))),e(te,"threejsBack",Object.freeze(new s.Vector3(0,0,-1))),e(te,"threejsCameraForward",Object.freeze(new s.Vector3(0,0,-1))),e(te,"threejsCameraBack",Object.freeze(new s.Vector3(0,0,1)));const ee=class{static arc3Divisions(t){return this.splitArc(t,5,4)}static arc2Divisions(t){return this.splitArc(t,10,8)}static linesPick(t,e,s){this.traverseLines(t,((t,i)=>{this.linePick(t,i,e,s)}))}static arcPick(t,e,s,i){this.traverseArcs(t,((t,s,r)=>{this.linePick(t,s[0],e,i),s.forEach(((t,r)=>{r>0&&this.linePick(s[r-1],t,e,i)})),this.linePick(s[s.length-1],r,e,i)}),s)}static polyLinePick(t,e,s){this.traversePolylines(t,((t,i)=>{this.linePick(t,i,e,s)}))}static geometryLinePick(t,e,s){this.traverseSLines(t,((t,i)=>{this.linePick(t,i,e,s)}))}static screenPointToCasterPoint(t,e,i=new s.Vector2){const r=e.getBoundingClientRect();return i.x=(t.x-r.left)/e.clientWidth*2-1,i.y=-(t.y-r.top)/e.clientHeight*2+1,i}static screenToCasterPoint(t,e,i,r=new s.Ray){return this.rayCaster.setFromCamera(this.screenPointToCasterPoint(t,e),i),r.copy(this.rayCaster.ray)}static splitArc(t,e,s){const i=Math.round(t.angle()*t.radius()*e);return Math.min(Math.max(i,s),30)}};e(ee,"rayCaster",new s.Raycaster),e(ee,"traverseLines",(()=>{const t=new s.Vector3,e=new s.Vector3,i=new Ft,r=new gt;return(s,n)=>{const o=s.linesLength();for(let a=0;a<o;a++)s.lines(a,r),r.start(i),t.set(i.x(),i.y(),i.z()),r.end(i),e.set(i.x(),i.y(),i.z()),n(t,e)}})()),e(ee,"traverseArcs",(()=>{const t=new s.Vector3,e=new s.Vector3,i=[],r=new s.Vector3,n=new s.Vector3,o=new At;return(a,I,E)=>{const c=a.arcsLength();for(let h=0;h<c;h++){a.arcs(h,o);const c=E(o);r.set(o.center().x(),o.center().y(),o.center().z()),n.set(o.axis().x(),o.axis().y(),o.axis().z()),t.set(o.refDirection().x(),o.refDirection().y(),o.refDirection().z()),i.length=c-2;for(let e=0;e<i.length;e++)i[e]=new s.Vector3,i[e].copy(t),i[e].applyAxisAngle(n,o.angle()*(e+1)/(c-1)),i[e].multiplyScalar(o.radius()),i[e].add(r);e.copy(t),e.applyAxisAngle(n,o.angle()),e.multiplyScalar(o.radius()),e.add(r),t.multiplyScalar(o.radius()),t.add(r),I(t,i,e)}}})()),e(ee,"traversePolylines",(()=>{const t=new s.Vector3,e=new s.Vector3,i=new Ut;return(s,r)=>{const n=s.polyLinesLength();for(let o=0;o<n;o++){s.polyLines(o,i);for(let s=0,n=i.pointsLength()-1;s<n;s++)t.set(i.points(s).x(),i.points(s).y(),i.points(s).z()),e.set(i.points(s+1).x(),i.points(s+1).y(),i.points(s+1).z()),r(t,e)}}})()),e(ee,"traverseSLines",(()=>{const t=new s.Vector3,e=new s.Vector3;return(s,i)=>{if(s){const r=s.length/3;for(let n=1;n<r;n++)e.set(s[3*n],s[3*n+1],s[3*n+2]),t.set(s[3*(n-1)],s[3*(n-1)+1],s[3*(n-1)+2]),i(t,e)}}})()),e(ee,"linePick",(()=>{const t=new s.Vector3,e=new s.Vector3;return(s,i,r,n)=>{const o=r.distanceSqToSegment(s,i,t,e);n(t,e,s,i,o)}})()),e(ee,"cylinderHit",(()=>{const t=new s.Vector3,e=new s.Vector3,i=new s.Vector3,r=new s.Matrix4,n=new s.Matrix4,o=new s.Ray,a=new s.Vector3,I=new s.Vector3,E=new s.Vector3,c=[],h=(()=>{const t=new s.Vector3(0,0,1),e=new s.Vector3(1,0,0);return(s,i)=>{Math.abs(s.dot(t))>.9?i.crossVectors(s,e).normalize():i.crossVectors(s,t).normalize()}})(),l=(t,e,s)=>{a.copy(o.direction).normalize().multiplyScalar(t).add(o.origin),a.z>=0&&a.z<=e/s&&(I.set(a.x,a.y,0).applyMatrix4(n).normalize(),a.applyMatrix4(r),c.push({point:a.clone()}))};return(s,a,I,d)=>{const C=a.distanceTo(s);t.copy(a).sub(s).normalize(),h(t,i),e.crossVectors(t,i),r.identity().makeBasis(i,e,t),r.setPosition(s),r.scale(E.set(d,d,d)),n.copy(r).invert(),o.copy(I).applyMatrix4(n);const T=o.direction.x*o.direction.x+o.direction.y*o.direction.y,u=2*o.origin.x*o.direction.x+2*o.origin.y*o.direction.y,R=o.origin.x*o.origin.x+o.origin.y*o.origin.y-1;if(4*T*R>u*u)return[];const b=(-u+Math.sqrt(u*u-4*T*R))/(2*T),F=(-u-Math.sqrt(u*u-4*T*R))/(2*T);return c.length=0,n.transpose(),l(b,C,d),l(F,C,d),c}})()),e(ee,"sectionHit",(()=>{const t=new s.Plane,e=new s.Vector3,i=new s.Vector3;return(s,r,n,o)=>{if(e.copy(te.up).applyQuaternion(r),t.setFromNormalAndCoplanarPoint(e,s),n.intersectsPlane(t)&&(n.intersectPlane(t,i),i.distanceTo(s)<=o))return{point:s.clone()}}})()),e(ee,"screenRectToFrustum",(()=>{const t=new s.Plane,e=new s.Plane,i=new s.Plane,r=new s.Plane,n=new s.Plane,o=new s.Plane,a=new s.Vector3,I=new s.Vector3,E=new s.Vector3,c=new s.Vector3,h=new s.Vector3,l=new s.Vector3,d=new s.Vector2,C=new s.Vector2;return(T,u,R,b)=>(ee.screenPointToCasterPoint(T,R,d),ee.screenPointToCasterPoint(u,R,C),a.set(d.x,d.y,1).unproject(b),I.set(C.x,d.y,1).unproject(b),E.set(d.x,C.y,1).unproject(b),c.set(C.x,C.y,1).unproject(b),h.set(d.x,d.y,0).unproject(b),l.set(C.x,C.y,0).unproject(b),t.setFromCoplanarPoints(h,a,I),e.setFromCoplanarPoints(l,I,c),i.setFromCoplanarPoints(l,c,E),r.setFromCoplanarPoints(h,E,a),b.getWorldDirection(n.normal),n.constant=b.position.length(),o.normal=n.normal,o.constant=1/0,new s.Frustum(t,i,r,e,o,n))})());let se=ee;const ie=class t{constructor(){e(this,"tempInt",new Int32Array(1)),e(this,"tempFloat",new Float32Array(this.tempInt.buffer)),e(this,"buffer",new Uint8Array(this.tempInt.buffer)),e(this,"checksum",-1)}append(e){switch(typeof e){case"number":Number.isInteger(e)&&e<t.int32MaxValue&&e>t.int32MinValue?this.tempInt[0]=e:this.tempFloat[0]=e,this.update();break;case"boolean":this.tempInt[0]=e?1:0,this.update();break;case"string":for(let t=0;t<e.length;++t)this.tempInt[0]=e.codePointAt(t),this.update();break;case"object":for(const t in e)e.hasOwnProperty(t)&&this.append(e[t])}return this}value(){return~this.checksum}reset(){return this.checksum=-1,this}update(){for(let e=0;e<4;++e){this.checksum^=this.buffer[e];for(let e=0;e<8;++e)this.checksum=1&this.checksum?this.checksum>>1^t.polynomial:this.checksum>>1}}};e(ie,"polynomial",2197175160),e(ie,"int32MaxValue",2147483647),e(ie,"int32MinValue",-2147483648);let re=ie;const ne=class t{constructor(t,s){e(this,"first"),this.first={start:0,count:t,prev:null,next:null,value:s}}getBufferData(t){let e=this.first;for(;;){if(null===e||e.start<=t&&t<e.start+e.count)return e;e=e.next}}add(e,s,i){if(!t.stash.length)return{start:e,count:s,prev:null,next:null,value:i};const r=t.stash.pop();return r.start=e,r.count=s,r.value=i,r}remove(e){e&&(e.next=null,e.prev=null,t.stash.push(e))}update(t,e){const s=this.getBufferData(t);if(s.value===e)return;const i=this.add(s.start,t-s.start,s.value),r=this.add(t,1,e),n=this.add(t+1,s.count-i.count-1,s.value);if(s.prev?(s.prev.next=i,i.prev=s.prev):this.first=i,s.next&&(s.next.prev=n,n.next=s.next),this.remove(s),i.next=r,r.prev=i,r.next=n,n.prev=r,i.count||(i.prev?i.prev.next=r:this.first=r,r.prev=i.prev,this.remove(i)),n.count||(n.next&&(n.next.prev=r),r.next=n.next,this.remove(n)),r.prev&&r.prev.value===r.value){r.count=r.prev.count+r.count,r.start=r.prev.start;const t=r.prev.prev;this.remove(r.prev),r.prev=t,r.prev?r.prev.next=r:this.first=r}if(r.next&&r.next.value===r.value){r.count=r.next.count+r.count;const t=r.next.next;this.remove(r.next),r.next=t,r.next&&(r.next.prev=r)}}getMinimal(t){const e=[];let s=this.first;for(;null!==s;)t&&!t(s.value)||e.push(s),s=s.next;return e}size(t){let e=0,s=this.first;for(;null!==s;)t&&!t(s.value)||++e,s=s.next;return e}allContain(t){return null===this.first.next&&this.first.value===t}static mapRange(t,e,s){s||(s={start:0,count:0});const i=t.start+t.count===e.length;return s.start=e[t.start],s.count=i?1/0:e[t.start+t.count]-s.start,s}};e(ne,"stash",[]),e(ne,"get",(()=>{const t={start:0,count:0};return(e,s,i,r)=>{const n=e.getMinimal(i),o=new Uint32Array(n.length),a=new Uint32Array(n.length);for(let e=0;e<n.length;++e){const i=n[e];ne.mapRange(i,s,t),o[e]=t.start,a[e]=t.count===1/0?4294967295:t.count,r&&r(e,i.value)}return{starts:o,counts:a}}})()),e(ne,"getComplementary",((t,e)=>{let s=0;for(let i=0;i<t.starts.length;++i){const r=t.starts[i],n=4294967295===t.counts[i]?1/0:t.counts[i];r>s&&e(s,r-s),s=r+n}s!==1/0&&e(s,1/0)}));let oe=ne;const ae=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","_","$"];class Ie{constructor({buffer:t,guid:s}){e(this,"buffer"),t?this.buffer=t:s?this.setGuid(s):this.buffer=new Uint8Array(16)}parseJson({data:t}){this.buffer=new Uint8Array(JSON.parse(`[${t}]`))}isSameAs(t){for(let e=0;e<16;e++)if(this.buffer[e]!==t.buffer[e])return!1;return!0}serialize(){return this.guid}get guidNumbers(){const t=this.buffer.byteOffset,e=new DataView(this.buffer.buffer,t,16);return{b1:e.getUint32(0,!0),b2:e.getUint16(4,!0),b3:e.getUint16(6,!0),b4:e.getUint8(8),b5:e.getUint8(9),b6:e.getUint8(10),b44:e.getUint8(11),b45:e.getUint8(12),b46:e.getUint8(13),b47:e.getUint8(14),b48:e.getUint8(15)}}get guid(){const t=new Uint8Array(24),e=this.buffer;t[0]=e[15],t[1]=e[14],t[2]=e[13],t[3]=0,t[4]=e[12],t[5]=e[11],t[6]=e[10],t[7]=0,t[8]=e[9],t[9]=e[8],t[10]=e[6],t[11]=0,t[12]=e[7],t[13]=e[4],t[14]=e[5],t[15]=0,t[16]=e[0],t[17]=e[1],t[18]=e[2],t[19]=0,t[20]=e[3],t[21]=0,t[22]=0,t[23]=0;const s=new Uint32Array(t.buffer);return this.exportBase64(s[5],8)+this.exportBase64(s[4],24)+this.exportBase64(s[3],24)+this.exportBase64(s[2],24)+this.exportBase64(s[1],24)+this.exportBase64(s[0],24)}setGuid(t){this.buffer=new Uint8Array(16);const e=this.importBase64(t[0],6)+this.importBase64(t[1],0),s=this.importBase64(t[2],18)+this.importBase64(t[3],12)+this.importBase64(t[4],6)+this.importBase64(t[5],0),i=this.importBase64(t[6],18)+this.importBase64(t[7],12)+this.importBase64(t[8],6)+this.importBase64(t[9],0),r=this.importBase64(t[10],18)+this.importBase64(t[11],12)+this.importBase64(t[12],6)+this.importBase64(t[13],0),n=this.importBase64(t[14],18)+this.importBase64(t[15],12)+this.importBase64(t[16],6)+this.importBase64(t[17],0),o=this.importBase64(t[18],18)+this.importBase64(t[19],12)+this.importBase64(t[20],6)+this.importBase64(t[21],0),a=this.bytes(o),I=this.bytes(n),E=this.bytes(r),c=this.bytes(i),h=this.bytes(s),l=this.bytes(e);this.buffer[15]=a[0],this.buffer[14]=a[1],this.buffer[13]=a[2],this.buffer[12]=I[0],this.buffer[11]=I[1],this.buffer[10]=I[2],this.buffer[9]=E[0],this.buffer[8]=E[1],this.buffer[6]=E[2],this.buffer[7]=c[0],this.buffer[4]=c[1],this.buffer[5]=c[2],this.buffer[0]=h[0],this.buffer[1]=h[1],this.buffer[2]=h[2],this.buffer[3]=l[0]}fromBuffer(t,e){this.buffer=new Uint8Array(t,e,16)}exportBase64(t,e){let s="";if(e>0){s+=ae[63&t],s=this.exportBase64(t>>6,e-6)+s}return s}importBase64(t,e){let s=0;for(;s<64&&ae[s]!=t;)s++;return s<<e}bytes(t){const e=new ArrayBuffer(8);return new Int32Array(e)[0]=t,new Uint8Array(e)}}function Ee(t,e){if(Array.isArray(t))for(let s=0;s<t.length;s++)e(t[s],s);else e(t,0)}class ce extends Map{constructor(t,s){super(s),e(this,"tracker",null),e(this,"localId"),e(this,"guard",(()=>!0)),e(this,"onAttributesRequested",null),this.localId=t}get itemChanges(){if(!this.tracker)return null;if(!this.localId)return console.warn("Item relations can't be tracked."),null;let t=this.tracker.get(this.localId);return t||(t={type:"modified",added:{},deleted:new Set,removed:{},modified:{}},this.tracker.set(this.localId,t)),t}set(t,e){const s=this.has(t);if(!(this.guard??(()=>!0))(t,e))return this;const i=this.itemChanges;return i?(s?i.modified[t]=e:i.added[t]=e,super.set(t,e)):super.set(t,e)}add(t,e){var s;const i=this.has(t);let r=this.get(t);if(!r)return r=new Set([e]),this.set(t,r),!0;if(!r||r.has(e))return!1;const n=this.itemChanges;if(!n)return r.add(e),!0;if(i)if(null==(s=n.removed[t])?void 0:s.has(e))n.removed[t].delete(e),0===n.removed[t].size&&delete n.removed[t];else{let s=n.modified[t];s||(s=new Set,n.modified[t]=s),s.add(e)}else{let s=n.added[t];s||(s=new Set,n.added[t]=s),s.add(e)}return r.add(e),!0}remove(t,e){var s;const i=this.get(t);if(!i)return!1;if(!i.has(e))return!1;const r=this.itemChanges;if(!r)return i.delete(e);if(null==(s=r.modified[t])?void 0:s.has(e))r.modified[t].delete(e),0===r.modified[t].size&&delete r.modified[t];else{let s=r.removed[t];s||(s=new Set,r.removed[t]=s),s.add(e)}return i.delete(e)}delete(t){if(!this.has(t))return!1;const e=this.itemChanges;return e?(e.deleted.add(t),super.delete(t)):super.delete(t)}async getAttributes(t,e=!1){if(!this.onAttributesRequested)return null;const s=this.get(t);return s?await this.onAttributesRequested([...s],e):null}}class he extends Map{constructor(t,s,i){super(i),e(this,"tracker",null),e(this,"localId"),e(this,"relations"),e(this,"_guid",null),e(this,"_category"),e(this,"guard",(()=>!0)),this.localId=t,this._category=s,this.relations=new ce(t)}set guid(t){this._guid=t}get guid(){return this._guid}set category(t){this._category=t}get category(){return this._category}set(t,e){if(!(this.guard??(()=>!0))(t,e))return this;const s=void 0!==e.type?e:{value:e.value,type:this.getType(t)};if(!this.tracker)return super.set(t,s);if(null===this.localId)return console.warn("Item attributes are missing a valid localId. Changes can't be tracked."),super.set(t,s);let i=this.tracker.get(this.localId);return i||(i={type:"modified",added:{},deleted:[],modified:{}},this.tracker.set(this.localId,i)),"added"===i.type?i.data[t]=s:"modified"===i.type&&(this.has(t)?i.modified[t]=s:i.deleted.includes(t)?(i.deleted=i.deleted.filter((t=>t!=t)),i.modified[t]=s):i.added[t]=s),super.set(t,s)}setValue(t,e){return this.set(t,{value:e,type:this.getType(t)})}setType(t,e){const s=this.getValue(t);return s?this.set(t,{value:s,type:e}):this}delete(t){if(!this.tracker)return super.delete(t);const e=this.get("localId");if(void 0===e||"number"!=typeof e)return console.warn("Item attributes are missing a valid localId. Changes can't be tracked."),"localId"!==t&&super.delete(t);if("localId"===t)return!1;if(!this.has(t))return!1;let s=this.tracker.get(e);return s||(s={type:"modified",added:{},deleted:[],modified:{}},this.tracker.set(e,s)),"added"===s.type?delete s.data[t]:"modified"===s.type&&(t in s.added?delete s.added[t]:t in s.modified?(delete s.modified[t],s.deleted.push(t)):s.deleted.push(t)),super.delete(t)}getValue(t){const e=this.get(t);return e?e.value:null}getType(t){var e;return null==(e=this.get(t))?void 0:e.type}getAll(){const t={};for(const[e,s]of this.entries())t[e]=s.value;return this.localId&&(t.localId=this.localId),this.guid&&(t.guid=this.guid),this.category&&(t.category=this.category),t}async getRelationAttribute(t,e){var s;return null==(s=await this.relations.getAttributes(t))?void 0:s.map((t=>t.getValue(e)))}}class le{constructor(t,i,r,n){e(this,"updateCameraPositionEvent",(()=>{})),e(this,"updateCameraFrustumEvent",(()=>{})),e(this,"getClippingPlanesEvent",(()=>[])),e(this,"updateFOVEvent",(()=>{})),e(this,"updateOrthoSizeEvent",(()=>{})),e(this,"transformEvent",(()=>{})),e(this,"object",new s.Object3D),e(this,"lodSetting",2),e(this,"attrsChanges",new Map),e(this,"relsChanges",new Map),e(this,"_tiles",new Map),e(this,"_inverseTransform",new s.Matrix4),e(this,"_localRay",new s.Ray),e(this,"_localFrustum",new s.Frustum),e(this,"_isLoaded",!1),e(this,"_isProcessing",!1),e(this,"_frozen",!1),e(this,"_meshManager"),e(this,"_threadConnection"),e(this,"_modelList"),e(this,"_bbox"),e(this,"_itemsAdded",0),e(this,"updateCamera",(()=>{const t=new s.Vector3,e=new s.Frustum;return async()=>{if(this.frozen)return;this._isProcessing=!0,this._meshManager.cleanUpRequests(this.modelId),this._inverseTransform.copy(this.object.matrixWorld).invert(),this.updateCameraPositionEvent(t),this.updateCameraFrustumEvent(e);const s=this.updateFOVEvent();let i=this.updateOrthoSizeEvent();i&&(i*=this._inverseTransform.getMaxScaleOnAxis());const r=this.getClippingPlanesEvent().map((t=>t.clone().applyMatrix4(this._inverseTransform))),n={gpuMemoryUsage:this.estimateGpuCapacity(),geometryCacheSize:void 0,lodSetting:this.lodSetting},o={type:H.CAMERA_UPDATE,modelId:this.modelId,camera:{frustum:j.transform(e,this._inverseTransform),position:t.applyMatrix4(this._inverseTransform),fieldOfView:s,orthoSize:i,resolution:Math.max(window.innerWidth,window.innerHeight),xr:!1,settings:n,clipPlanes:r,modelTransform:this.object.matrixWorld}};await this._threadConnection.fetch(o)}})()),this.object.name=t,this._bbox=new v(new s.Box3),this.object.up.copy(te.up),this._meshManager=i,this._threadConnection=r,this._modelList=n}get modelId(){return this.object.name}getAbsoluteBoundingBox(){return this._bbox.value.clone().applyMatrix4(this.object.matrixWorld)}onBoundingBoxChange(t){this._bbox.subscribe((()=>t()))}onTransformChange(t){this.transformEvent=t}get frozen(){return!!this._frozen}set frozen(t){const e=this._frozen;this._frozen=t,e&&!t&&this.updateCamera()}async setup(t){await this.init(this.modelId,t),this._isLoaded=!0,this._isProcessing=!0}isBusy(){return!this._isLoaded||this._isProcessing||this._meshManager.hasRequests()}transform(t){t.decompose||(t=(new s.Matrix4).fromArray(t.elements)),t.decompose(this.object.position,this.object.quaternion,this.object.scale),this.object.updateMatrixWorld(!0),this.transformEvent&&this.transformEvent(),this.updateCamera()}async getFullBBox(t){if(!t)return this.getAbsoluteBoundingBox();const e={type:H.GET_BOUNDINGBOXES,modelId:this.modelId,itemIdGroups:[t]},i=(await this._threadConnection.fetch(e)).boundingBoxes[0];return(new s.Box3).copy(i).applyMatrix4(this.object.matrixWorld)}extendFullBBox(t){this._bbox.value.expandByObject(t),this._bbox.next(this._bbox.value)}async getBBoxes(t){const e={type:H.GET_BOUNDINGBOXES,modelId:this.modelId,itemIdGroups:t?t.map((t=>[t])):void 0},i=(await this._threadConnection.fetch(e)).boundingBoxes.map((t=>(new s.Box3).copy(t)));for(const t of i)t.applyMatrix4(this.object.matrixWorld);return i}async getCoordinates(){return await this._threadConnection.invoke(this.modelId,"getCoordinates",arguments)}onProcessFinish(){this._isProcessing=!1}async pick(t){const e=this.getPickData(t),s=this.buildPickData(e);if(!s)return;const i=await this._threadConnection.fetch(s);return i.hits&&i.hits.length?this.buildHitData(i.hits[0],i.childrenItemIds,e):void 0}async pickWithSnapping(t){const e=this.getPickData(t),s=this.buildPickData(e);if(!s)return;s.snapTypes=t.snapTypes;const i=await this._threadConnection.fetch(s);return i.hits?i.hits.map((t=>this.buildHitData(t,i.childrenItemIds,e))):void 0}async setVisible(t,e){return await this._threadConnection.invoke(this.modelId,"setVisibility",arguments)}async getVisible(t){return await this._threadConnection.invoke(this.modelId,"getVisibility",arguments)}async getVisibleItemIds(t){return await this._threadConnection.invoke(this.modelId,"getVisibleItemIds",arguments)}async resetVisible(){return await this._threadConnection.invoke(this.modelId,"resetVisibility",arguments)}async highlight(t,e){await this._threadConnection.invoke(this.modelId,"setCustomMaterial",arguments)}async resetHighlight(t){await this._threadConnection.invoke(this.modelId,"resetCustomMaterials",arguments)}async getHighlight(t){const e=await this._threadConnection.invoke(this.modelId,"getCustomMaterials",arguments);return this.resetColors(e),e}async getHighlightItemIds(){return await this._threadConnection.invoke(this.modelId,"getCustomMaterialItemIds",arguments)}async getItemGeometry(t){const e=await this._threadConnection.invoke(this.modelId,"getItemGeometry",arguments);for(const t of e)t.transform=(new s.Matrix4).fromArray(t.transform.elements);return e}async getSection(t){return await this._threadConnection.invoke(this.modelId,"getSection",arguments)}async getBuffer(){return await this._threadConnection.invoke(this.modelId,"getBuffer",arguments)}async dispose(){this._modelList.delete(this.modelId),this._isLoaded=!1,await this._threadConnection.fetch({type:H.UNLOAD,modelId:this.modelId}),this._threadConnection.delete(this.modelId);for(const[t,e]of this._tiles)this.deleteTileMesh(t,e);this._meshManager.disposeMaterials(this.modelId)}async handleRequest(t){switch(t.type){case H.UPDATE_GEOMETRY:this.rebuildMeshes(t);break;case H.ADD_MATERIAL:this.saveMaterial(t);break;case H.ERROR:this.logError(t)}}async getItemCategory(t){return await this._threadConnection.invoke(this.modelId,"getItemCategory",arguments)}async getItemGuid(t){return await this._threadConnection.invoke(this.modelId,"getItemGuid",arguments)}async getItemAttributes(t,e){const{includeRelations:s}={includeRelations:!1,...e},i=await this._threadConnection.invoke(this.modelId,"getItemAttributes",arguments),r=t,n=await this.getItemCategory(t),o=new he(r,n);if(o.guid=await this.getItemGuid(r),!i){const t=this.attrsChanges.get(r);if(!t||"added"!==t.type)return null;o.localId=r;for(const[e,s]of Object.entries(t.data))o.set(e,s);return o}const a=this.attrsChanges.get(r);if(a&&"modified"===a.type)for(const[t,e]of Object.entries(a.added))o.set(t,e);for(const t in i){const{value:e,type:s}=i[t];"modified"===(null==a?void 0:a.type)&&a.deleted.includes(t)||("modified"===(null==a?void 0:a.type)&&t in a.modified?o.set(t,a.modified[t]):o.set(t,{value:e,type:s}))}if(s){const e=await this.getItemRelations(t);e&&(o.relations=e)}return o.tracker=this.attrsChanges,o.relations.tracker=this.relsChanges,o}async getItemRelations(t){const e=await this._threadConnection.invoke(this.modelId,"getItemRelations",arguments);if(!e)return null;const s=t,i=new ce(s);i.onAttributesRequested=async(t,e)=>{const s=[];for(const i of t){const t=await this.getItemAttributes(i,{includeRelations:e});t&&s.push(t)}return s};const r=this.relsChanges.get(s);if(r&&"modified"===r.type)for(const[t,e]of Object.entries(r.added))i.set(t,e);for(const[t,s]of Object.entries(e))if("modified"!==(null==r?void 0:r.type)||!r.deleted.has(t))if("modified"===(null==r?void 0:r.type)&&t in r.modified){const e=new Set([...r.modified[t],...s]);i.set(t,new Set(e))}else i.set(t,new Set(s));return i.tracker=this.relsChanges,i}setCamera(t){const e=new n.Matrix4;this.updateCameraPositionEvent=e=>{e.copy(t.position)},this.updateCameraFrustumEvent=s=>{t.updateProjectionMatrix(),t.updateWorldMatrix(!0,!0);const{projectionMatrix:i,matrixWorldInverse:r}=t;e.multiplyMatrices(i,r),s.setFromProjectionMatrix(e)},this.updateFOVEvent=()=>{if(t instanceof n.PerspectiveCamera)return t.fov},this.updateOrthoSizeEvent=()=>{}}async addItem(t,e,s){++this._itemsAdded;const i=await this.getMaxLocalId();let r=this.attrsChanges.get(i);return r||(r={type:"added",data:e},this.attrsChanges.set(i,r)),i}async getAllCategories(){return await this._threadConnection.invoke(this.modelId,"getAllCategories",arguments)}async getMetadata(){return await this._threadConnection.invoke(this.modelId,"getMetadata",arguments)}async getLocalIdByGuid(t){return await this._threadConnection.invoke(this.modelId,"getLocalIdByGuid",arguments)}async getMaxLocalId(){return await this._threadConnection.invoke(this.modelId,"getMaxLocalId",arguments)+this._itemsAdded}getPickData(t){const{camera:e,mouse:s,dom:i}=t;e.updateProjectionMatrix(),e.updateWorldMatrix(!0,!0);const r=s.clone().subScalar(10),n=s.clone().addScalar(10);return{ray:se.screenToCasterPoint(s,i,e),frustum:se.screenRectToFrustum(r,n,i,e)}}buildHitData(t,e,i){return{point:(new s.Vector3).copy(t.point).applyMatrix4(this.object.matrixWorld),normal:t.normal?(new s.Vector3).copy(t.normal).transformDirection(this.object.matrixWorld).normalize():void 0,distance:Math.sqrt(t.cameraDistanceSq)*this.object.matrixWorld.getMaxScaleOnAxis(),distanceToRay:void 0!==t.distanceSqToRay?Math.sqrt(t.distanceSqToRay)*this.object.matrixWorld.getMaxScaleOnAxis():void 0,id:t.itemId,localId:t.localId,childrenIds:e,object:this.object,model:this,caster:i,pickPriority:t.pickPriority,snapGeometryType:t.snapGeometryType,snapType:t.snapType,snapLineStart:t.snapLineStart?(new s.Vector3).copy(t.snapLineStart).applyMatrix4(this.object.matrixWorld):void 0,snapLineEnd:t.snapLineEnd?(new s.Vector3).copy(t.snapLineEnd).applyMatrix4(this.object.matrixWorld):void 0}}buildPickData(t){if(!t.frustum.intersectsBox(this.getAbsoluteBoundingBox()))return;this._inverseTransform.copy(this.object.matrixWorld).invert();const e={type:H.PICK};return e.modelId=this.modelId,t.ray&&(this._localRay.copy(t.ray).applyMatrix4(this._inverseTransform),e.ray=this._localRay),j.transform(t.frustum,this._inverseTransform,this._localFrustum),e.frustum=this._localFrustum,e}rebuildMeshes(t){this._meshManager.addToRequests(t.actions),t.actions=void 0}saveMaterial(t){this.resetColors(t.materials),this._meshManager.saveMaterials(t.modelId,t.materials),t.materials=void 0}logError(t){console.error(t)}resetColors(t){for(const e of t)e&&e.color&&!e.color.isColor&&(e.color=new s.Color(e.color.r,e.color.g,e.color.b))}async init(t,e){const s={type:H.LOAD,modelId:t,buffer:e},i=await this._threadConnection.fetch(s,s.buffer instanceof ArrayBuffer?[s.buffer]:void 0);this._bbox.value.min.copy(i.boundingBox.min),this._bbox.value.max.copy(i.boundingBox.max),this._bbox.next(this._bbox.value)}deleteTileMesh(t,e){this.object.remove(e),e.geometry.dispose(),Ee(e.material,(t=>t.dispose())),this._tiles.delete(t)}addTile(t){this.object.add(t),this._tiles.set(t.userData.id,t)}getTile(t){return this._tiles.get(t)}deleteTile(t){const e=this._tiles.get(t);e&&this.deleteTileMesh(t,e)}estimateGpuCapacity(){return Math.trunc(screen.width*screen.height*window.devicePixelRatio*window.devicePixelRatio*200)}}class de extends s.ShaderMaterial{constructor(t,i){const r={uniforms:s.UniformsUtils.merge([s.UniformsLib.common,{diffuse:{value:new s.Color(t.color)},opacity:{value:t.opacity??1},transparent:{value:t.transparent??!1},worldUnits:{value:1},linewidth:{value:1},resolution:{value:new s.Vector2(1,1)},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}}]),transparent:t.transparent??!1,vertexShader:"\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n        #ifdef VISIBILITY_ATTRIBUTE\n            attribute float visibilityMask;\n        #endif\n\t\t#ifdef WORLD_UNITS\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\t\t\t#ifdef USE_DASH\n\t\t\t\tvarying vec2 vUv;\n\t\t\t#endif\n\t\t#else\n\t\t\tvarying vec2 vUv;\n\t\t#endif\n\t\t#ifdef USE_DASH\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\t\t#endif\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\t\t}\n\t\tvoid main() {\n            #ifdef VISIBILITY_ATTRIBUTE\n                if (visibilityMask == 0.0) {\n                    gl_Position = vec4(0,0,1,1); // Cull segment\n                    return;\n                }\n            #endif\n\n            #ifdef USE_COLOR\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\t\t\t#endif\n\t\t\t#ifdef USE_DASH\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\t\t\t\tvUv = uv;\n\t\t\t#endif\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\t\t\t#ifdef WORLD_UNITS\n\t\t\t\tworldStart = start.xyz;\n\t\t\t\tworldEnd = end.xyz;\n\t\t\t#else\n\t\t\t\tvUv = uv;\n\t\t\t#endif\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\t\t\tif ( perspective ) {\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\t\t\t\t\ttrimSegment( start, end );\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\t\t\t\t\ttrimSegment( end, start );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\t\t\t// ndc space\n\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\t\t\t#ifdef WORLD_UNITS\n\t\t\t\t// get the offset direction as perpendicular to the view vector\n\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\tvec3 offset;\n\t\t\t\tif ( position.y < 0.5 ) {\n\t\t\t\t\toffset = normalize( cross( start.xyz, worldDir ) );\n\t\t\t\t} else {\n\t\t\t\t\toffset = normalize( cross( end.xyz, worldDir ) );\n\t\t\t\t}\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\t\t\t\tfloat forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );\n\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t#ifndef USE_DASH\n\t\t\t\t\t// extend the line bounds to encompass  endcaps\n\t\t\t\t\tstart.xyz += - worldDir * linewidth * 0.5;\n\t\t\t\t\tend.xyz += worldDir * linewidth * 0.5;\n\t\t\t\t\t// shift the position of the quad so it hugs the forward edge of the line\n\t\t\t\t\toffset.xy -= dir * forwardOffset;\n\t\t\t\t\toffset.z += 0.5;\n\t\t\t\t#endif\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\t\t\t\t\toffset.xy += dir * 2.0 * forwardOffset;\n\t\t\t\t}\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth * 0.5;\n\t\t\t\t// set the world position\n\t\t\t\tworldPos = ( position.y < 0.5 ) ? start : end;\n\t\t\t\tworldPos.xyz += offset;\n\t\t\t\t// project the worldpos\n\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t// segements overlap neatly\n\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\tclip.z = clipPose.z * clip.w;\n\t\t\t#else\n\t\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t\t// undo aspect ratio adjustment\n\t\t\t\tdir.x /= aspect;\n\t\t\t\toffset.x /= aspect;\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y < 0.0 ) {\n\t\t\t\t\toffset += - dir;\n\t\t\t\t} else if ( position.y > 1.0 ) {\n\t\t\t\t\toffset += dir;\n\t\t\t\t}\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth;\n\t\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\t\toffset /= resolution.y;\n\t\t\t\t// select end\n\t\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\t\t\t\t// back to clip space\n\t\t\t\toffset *= clip.w;\n\t\t\t\tclip.xy += offset;\n\t\t\t#endif\n\t\t\tgl_Position = clip;\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\t\t\t#include <clipping_planes_vertex>\n\t\t}\n",fragmentShader:"\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\t\tuniform float linewidth;\n\t\t#ifdef USE_DASH\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\t\t#endif\n\t\tvarying float vLineDistance;\n\t\t#ifdef WORLD_UNITS\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\t\t\t#ifdef USE_DASH\n\t\t\t\tvarying vec2 vUv;\n\t\t\t#endif\n\t\t#else\n\t\t\tvarying vec2 vUv;\n\t\t#endif\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\t\t\tfloat mua;\n\t\t\tfloat mub;\n\t\t\tvec3 p13 = p1 - p3;\n\t\t\tvec3 p43 = p4 - p3;\n\t\t\tvec3 p21 = p2 - p1;\n\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\tfloat d2121 = dot( p21, p21 );\n\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\t\t\tmua = numer / denom;\n\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\t\t\treturn vec2( mua, mub );\n\t\t}\n\t\tvoid main() {\n\t\t\t#include <clipping_planes_fragment>\n\t\t\t#ifdef USE_DASH\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\t\t\t\tif ( mod( vLineDistance, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\t\t\t#endif\n\t\t\tfloat alpha = opacity;\n\t\t\t#ifdef WORLD_UNITS\n\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\tfloat len = length( delta );\n\t\t\t\tfloat norm = len / linewidth;\n\t\t\t\t#ifndef USE_DASH\n\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\t\t\t\t\t#else\n\t\t\t\t\t\tif ( norm > 0.5 ) {\n\t\t\t\t\t\t\tdiscard;\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t#else\n\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\tfloat dlen = fwidth( len2 );\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\t\t\t\t\t}\n\t\t\t\t#else\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\t\tif ( len2 > 1.0 ) discard;\n\t\t\t\t\t}\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\t\t\t#include <color_fragment>\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, alpha );\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <colorspace_fragment>\n\t\t}\n"};super(r),e(this,"usesDepthPeeling",!0),e(this,"isLODMaterial",!0),e(this,"globals"),e(this,"selfTransparent"),e(this,"selfOpacity"),e(this,"isLineMaterial",!0),e(this,"params"),this.globals=i,this.selfOpacity=r.uniforms.opacity.value,this.selfTransparent=r.transparent,delete this.transparent,this.clipping=!0,this.lights=!1,this.params=t;const n={...t};delete n.color,delete n.transparent,this.setValues(n)}get transparent(){return this.globals&&void 0!==this.globals.globalTransparent?this.globals.globalTransparent:this.selfTransparent}set transparent(t){this.selfTransparent=t}updateTransparent(){if(this.globals){this.globals.globalOpacity&&(this.uniforms.opacity.value=this.selfOpacity*this.globals.globalOpacity.value);const t=this.selfTransparent||void 0!==this.globals.globalTransparent;this.uniforms.transparent.value=Number(t),this.blending=t?s.NormalBlending:s.NoBlending}}setIntersect(t){this.clipIntersection=t,this.needsUpdate=!0}get color(){return this.uniforms.diffuse.value}set color(t){this.uniforms.diffuse.value=t}copy(t){throw new Error("Material can not be copied")}get isLineBasicMaterial(){return this.updateTransparent(),!1}get hasVisibility(){return!!this.defines.VISIBILITY_ATTRIBUTE}set hasVisibility(t){this.hasVisibility!==t&&(this.defines.VISIBILITY_ATTRIBUTE=t,this.needsUpdate=!0)}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(t){!0===t?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(t){this.uniforms&&this.uniforms.linewidth&&(this.uniforms.linewidth.value=t)}get dashed(){return Boolean("USE_DASH"in this.defines)}set dashed(t){Boolean(t)!==Boolean("USE_DASH"in this.defines)&&(this.needsUpdate=!0),!0===t?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(t){this.uniforms.dashScale.value=t}get dashSize(){return this.uniforms.dashSize.value}set dashSize(t){this.uniforms.dashSize.value=t}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(t){this.uniforms.dashOffset.value=t}get gapSize(){return this.uniforms.gapSize.value}set gapSize(t){this.uniforms.gapSize.value=t}get opacity(){return this.uniforms.opacity.value}set opacity(t){this.uniforms&&(this.uniforms.opacity.value=t)}get resolution(){return this.uniforms.resolution.value}set resolution(t){this.uniforms.resolution.value.copy(t)}get alphaToCoverage(){return Boolean("USE_ALPHA_TO_COVERAGE"in this.defines)}set alphaToCoverage(t){this.defines&&(Boolean(t)!==Boolean("USE_ALPHA_TO_COVERAGE"in this.defines)&&(this.needsUpdate=!0),!0===t?this.defines.USE_ALPHA_TO_COVERAGE="":delete this.defines.USE_ALPHA_TO_COVERAGE)}clone(){return new de(this.params,this.globals)}}const Ce=new s.Vector3,Te=new s.Vector3;class ue extends s.Mesh{constructor(t,e){super(t,e),this.material=e;const s=Array.isArray(e)?e[0]:e;s&&s.defines&&(s.dashed?s.defines.USE_DASH="":delete s.defines.USE_DASH),this.onBeforeRender=e=>{Ee(this.material,(s=>{s.resolution&&e.getSize(s.resolution),t&&t.hasVisibleFilter&&s instanceof de&&(s.hasVisibility=!0)}))}}update(t){this.geometry.setPoints(t),this.material.dashed&&this.calculateSegmentLengths(),this.geometry.boundingBox&&this.geometry.computeBoundingBox(),this.geometry.boundingSphere&&this.geometry.computeBoundingSphere()}calculateSegmentLengths(){const t=this.geometry,e=t.attributes.instanceStart,i=t.attributes.instanceEnd,r=new Float32Array(2*e.count);for(let t=0,s=0,n=e.count;t<n;t++,s+=2)Ce.fromBufferAttribute(e,t),Te.fromBufferAttribute(i,t),r[s]=0===s?0:r[s-1],r[s+1]=r[s]+Ce.distanceTo(Te);const n=new s.InstancedInterleavedBuffer(r,2,1);t.setAttribute("instanceDistanceStart",new s.InterleavedBufferAttribute(n,1,0)),t.setAttribute("instanceDistanceEnd",new s.InterleavedBufferAttribute(n,1,1))}}const Re=new s.Float32BufferAttribute([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3),be=new s.Float32BufferAttribute([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2),Fe=new s.Uint8BufferAttribute([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5],1),pe=new s.Vector3,Ae=new s.Box3;class fe extends s.InstancedBufferGeometry{constructor(){super(),e(this,"isLODGeometry",!0),this.setup()}setup(){this.setIndex(Fe),this.setAttribute("position",Re),this.setAttribute("uv",be)}get instanceStart(){return this.getAttribute("instanceStart")}get instanceEnd(){return this.getAttribute("instanceEnd")}get visibilityMask(){return this.getAttribute("visibilityMask")}setPositionsAttr(t,e){let i,r=this.instanceStart,n=this.instanceEnd;r&&(r.data.array.length===t.length?(i=r.data,i.array=t,i.needsUpdate=!0):(r=void 0,n=void 0,this.index=null,delete this.attributes.position,delete this.attributes.uv,delete this.attributes.visibilityMask,this.dispose(),this.setup())),r||(i=new s.InstancedInterleavedBuffer(t,6,1),r=new s.InterleavedBufferAttribute(i,3,0),n=new s.InterleavedBufferAttribute(i,3,3)),e&&(i.onUploadCallback=e),this.setAttribute("instanceStart",r),this.setAttribute("instanceEnd",n)}setPoints(t){const e=new Float32Array(3*(t.length-1)*2);for(let s=0;s<t.length-1;s++){const i=3*s*2;e[i]=t[s].x,e[i+1]=t[s].y,e[i+2]=t[s].z||0,e[i+3]=t[s+1].x,e[i+4]=t[s+1].y,e[i+5]=t[s+1].z||0}this.setPositionsAttr(e)}setLocations(t){const e=t.length-3,s=new Float32Array(2*e);for(let i=0;i<e;i+=3)s[2*i]=t[i],s[2*i+1]=t[i+1],s[2*i+2]=t[i+2],s[2*i+3]=t[i+3],s[2*i+4]=t[i+4],s[2*i+5]=t[i+5];this.setPositionsAttr(s)}setVisibility(t){const e=this.instanceStart;if(!e)throw new Error("Geometry was not built");const i=e.count;let r=this.visibilityMask;r?r.array.fill(0):(r=new s.InstancedBufferAttribute(new Uint8Array(i),1),this.setAttribute("visibilityMask",r)),!0===t?r.array.fill(1):t&&this.addVisibleFilter(t),r.needsUpdate=!0}addVisibleFilter(t){if(!this.hasVisibleFilter)throw new Error("Visibility attribute was not initialised");const e=this.visibilityMask,s=e.array;for(let e=0;e<t.starts.length;++e){const i=t.starts[e]/2,r=t.counts[e]/2;4294967295===r?s.fill(1,i):s.fill(1,i,i+r)}e.needsUpdate=!0}get hasVisibleFilter(){return!!this.visibilityMask}addGroup(t,e,s){this.groups.push({start:0,count:1/0,instanceOffset:t/2,instanceCount:e/2,materialIndex:s})}applyMatrix4(t){return this.instanceStart.applyMatrix4(t),this.instanceEnd.applyMatrix4(t),this.boundingBox&&this.computeBoundingBox(),this.boundingSphere&&this.computeBoundingSphere(),this}computeBoundingBox(){this.boundingBox||(this.boundingBox=new s.Box3);const t=this.instanceStart;t?this.boundingBox.setFromArray(t.data.array):this.boundingBox.makeEmpty()}computeBoundingSphere(){this.boundingSphere||(this.boundingSphere=new s.Sphere);const t=this.instanceStart;if(t){const e=this.boundingSphere.center;Ae.setFromArray(t.data.array),Ae.getCenter(e);let s=0;for(let i=0,r=t.data.array.length;i<r;i+=3)pe.fromArray(t.data.array,i),s=Math.max(s,e.distanceToSquared(pe));this.boundingSphere.radius=Math.sqrt(s)}}setFromPoints(t){throw new Error("Not implemented")}computeVertexNormals(){throw new Error("Not implemented")}computeTangents(){throw new Error("Not implemented")}toNonIndexed(){throw new Error("Not implemented")}normalizeNormals(){throw new Error("Not implemented")}}class Oe{constructor(t){e(this,"_clippingEnabled",!1),e(this,"_materials",new Map),e(this,"_modelIDToMatID",new Map),e(this,"_isModelClipped",new Map),e(this,"_crcChecker",new re),e(this,"_forceDoubleSide",!1),e(this,"_updateManager"),this._updateManager=t;const s=document.createElement("canvas");s.width=3,s.height=3,this.canvasContext2D=s.getContext("2d",{willReadFrequently:!0})}get clippingEnabled(){return this._clippingEnabled}set clippingEnabled(t){this._clippingEnabled=t,this.resetDoubleSide()}resetDoubleSide(){this.clippingEnabled||this._forceDoubleSide?this.forEach((t=>t.enableForceDoubleSide())):this.forEach((t=>t.disableForceDoubleSide())),this._updateManager.redraw()}setClipping(t,e){this._isModelClipped.set(t,e);const s=this._modelIDToMatID.get(t);s&&s.forEach((t=>this._materials.get(t).clippingPlanes=e?this._updateManager.clippingPlanes:[]))}get(t,e){return this._crcChecker.reset().append(t.modelId).append(t.objectType).append(e).append(t.lodLevel).append(void 0!==t.templateId),this.getDedupMaterial(this._crcChecker.value(),e,t)}disposeMaterials(t){const e=this._modelIDToMatID.get(t);if(e){for(const t of e)this._materials.get(t).dispose(),this._materials.delete(t);this._modelIDToMatID.delete(t)}}getSettings(t){const e=t.opacity??1;return{opacity:e,transparent:t.transparent||e<1,clippingPlanes:this._updateManager.clippingPlanes,clipIntersection:!1}}newLODMaterial(t,e){const{data:i}=t,r=new s.Color(i.color);e.lodLevel===Y.Line&&r.multiplyScalar(.85);const n={color:r,linewidth:i.lineWidth??2,...this.getSettings(i)};i.lineType!==kt.Normal&&void 0!==i.lineType&&(n.dashed=!0,n.dashSize=1,n.gapSize=.5,n.dashScale=1);const o=new de(n,this._updateManager.uniforms);return o.userData={customId:i.customId},o}getDedupMaterial(t,e,s){const i=s.modelId;if(this._materials.has(t))return this._materials.get(t);const r=this.newMaterial(e,s);return this._isModelClipped.has(s.modelId)&&!this._isModelClipped.get(s.modelId)&&(r.clippingPlanes=[]),this._materials.set(t,r),this._modelIDToMatID.has(i)||this._modelIDToMatID.set(i,new Set),this._modelIDToMatID.get(i).add(t),r}newMaterial(t,e){const i={data:t};if(i.instancing=void 0!==e.templateId,e.objectType===G.MESH)return new s.MeshLambertMaterial({color:t.color,transparent:t.opacity<1,opacity:t.opacity,userData:{customId:t.customId}});if(e.objectType===G.LINE){const{r:r,g:n,b:o}=t.color;return 1===r&&0===n&&0===o?new s.LineBasicMaterial({color:t.color,linewidth:t.lineWidth??2,userData:{customId:t.customId}}):this.newLODMaterial(i,e)}return new s.PointsMaterial({color:t.color,transparent:t.opacity<1,opacity:t.opacity,userData:{customId:t.customId}})}forEach(t){for(const e of this._materials.values()){const s=e;s.isWVMeshMaterial&&t(s)}}}class Ne{constructor(t){e(this,"list"),e(this,"_updateFinished",!0),e(this,"_requestList"),e(this,"_materialList",new Map),e(this,"_materialManager"),e(this,"_updateManager"),e(this,"deleteAttribute",(t=>function(){delete this.array})),this._updateManager=t,this.list=new Map,this._requestList=[],this._materialManager=new Oe(this._updateManager)}get clippingEnabled(){return this._materialManager.clippingEnabled}set clippingEnabled(t){this._materialManager.clippingEnabled=t}addToRequests(t){for(const e of t)this.insertInRequests(e)||this._requestList.push(e),e.actionType===B.UPDATE_FINISHED&&(this._updateFinished=!0)}hasRequests(){return this._requestList.length>0}cleanUpRequests(t){this._requestList=this._requestList.filter((e=>e.modelId!==t||e.actionType!==B.UPDATE_FINISHED))}update(){const t=performance.now();for(;this._requestList.length>0;){const e=this._requestList.shift();if(!e)continue;const s=this.list.get(e.modelId);if(s){switch(e.actionType){case B.ADD_BATCH:this.addTile(s,e);break;case B.REMOVE_BATCH:this.deleteTile(s,e);break;case B.SET_BATCH_STATE:this.setTileStatus(s,e);break;case B.UPDATE_FINISHED:s.onProcessFinish()}if(this._updateManager.redraw(),performance.now()-t>4)return}}}async forceUpdateFinish(t=200){return new Promise((e=>{this._updateFinished=!1;const s=setInterval((()=>{this.update(),this._updateFinished&&(clearInterval(s),e())}),t)}))}saveMaterials(t,e){this._materialList.has(t)?this._materialList.get(t).push(...e):this._materialList.set(t,e)}setClipping(t,e){this._materialManager.setClipping(t,e)}disposeMaterials(t){this._materialList.delete(t),this._materialManager.disposeMaterials(t)}insertInRequests(t){const e=t,s=this._requestList;if(void 0===e.batchId)return!1;if(e.actionType===B.REMOVE_BATCH&&(this._requestList=s.filter((t=>!((t.actionType===B.ADD_BATCH||t.actionType===B.REMOVE_BATCH)&&t.modelId===e.modelId&&t.batchId===e.batchId)))),e.actionType===B.ADD_BATCH&&(this._requestList=s.filter((t=>!(t.actionType===B.ADD_BATCH&&t.modelId===e.modelId&&t.batchId===e.batchId)))),e.actionType===B.SET_BATCH_STATE){const t=s.find((t=>t.modelId===e.modelId&&t.batchId===e.batchId));if(t)return t.actionType!==B.ADD_BATCH&&t.actionType!==B.SET_BATCH_STATE||(t.state=e.state),!0}return!1}setTileData(t,e){const i=t.geometry;t.userData=e.userData,t.matrixAutoUpdate=!1,t.applyMatrix4(e.transform),t.matrix.copy(e.transform),i.boundingBox=(new s.Box3).copy(e.boundingBox),i.boundingSphere=i.boundingBox.getBoundingSphere(new s.Sphere),this.setStatus(t,e)}createMesh(t,e){if(!e.indices)throw new Error("indices are required for mesh");if(t.setIndex(new s.BufferAttribute(e.indices,1)),t.index.onUpload(this.deleteAttribute(t)),!e.positions)throw new Error("positions are required for mesh");t.setAttribute("position",new s.BufferAttribute(e.positions,3)),t.attributes.position.onUpload(this.deleteAttribute(t)),e.normals&&t.setAttribute("normal",new s.BufferAttribute(e.normals,3,!0)),t.attributes.normal.onUpload(this.deleteAttribute(t)),e.ids&&(t.setAttribute("id",new s.BufferAttribute(e.ids,1,!1)),t.attributes.id.onUpload(this.deleteAttribute(t))),e.uvs&&0!==e.uvs.length&&(t.setAttribute("uv",new s.BufferAttribute(e.uvs,2)),t.attributes.uv.onUpload(this.deleteAttribute(t)));const i=this._materialList.get(e.modelId)[e.materialId],r=this._materialManager.get(e,i);return new s.Mesh(t,[r])}createLODMesh(t,e){const s=this._materialList.get(e.modelId)[e.materialId],i=this._materialManager.get(e,s);if(!e.positions)throw new Error("positions are required for line");const r=new fe;r.setPositionsAttr(e.positions,this.deleteAttribute(t));const n=new ue(r,[i]);return void 0!==i.dashSize&&n.calculateSegmentLengths(),n}setTileStatus(t,e){const s=t.getTile(e.batchId);s&&this.setStatus(s,e)}setLODMeshVisible(t,e){t.geometry.setVisibility(e.visible),e.customMaterialRanges?(t.geometry.addVisibleFilter(e.customMaterialRanges),oe.getComplementary(e.customMaterialRanges,((e,s)=>{t.geometry.addGroup(e,s,0)}))):t.geometry.addGroup(0,1/0,0)}setStatus(t,e){const s=e.state,i=t.geometry;if(i.clearGroups(),e.lodLevel===Y.Line&&t instanceof ue?this.setLODMeshVisible(t,s):(this.iterate(s.visible,((t,e)=>{i.addGroup(t,e,0)})),this.iterate(s.hovered,((t,e)=>{i.addGroup(t,e,1)}))),s.customMaterialRanges){const r=t.material.slice(0,2),n=new Map;for(let t=0;t<s.customMaterialRanges.starts.length;++t){const o=s.customMaterialIds[t];if(!n.has(o)){const t=this._materialList.get(e.modelId)[e.materialId],s=this._materialList.get(e.modelId)[o];r.push(this._materialManager.get(e,this.combine(t,s))),n.set(o,r.length-1)}const a=s.customMaterialRanges.starts[t],I=4294967295===s.customMaterialRanges.counts[t]?1/0:s.customMaterialRanges.counts[t];i.addGroup(a,I,n.get(s.customMaterialIds[t]))}t.material=r}}combine(t,e){const s={...t};return Object.assign(s,e)}getTileID(t){return t.userData&&void 0!==t.userData.id?t.userData.id.toString():""}deleteTile(t,e){t.deleteTile(e.batchId)}addTile(t,e){const i=this.create(new s.BufferGeometry,e);this.setTileData(i,e),t.addTile(i)}create(t,e){if(e.objectType===G.MESH)return this.createMesh(t,e);if(e.objectType===G.LINE)return this.createLODMesh(t,e);throw new Error(`unsupported object type! ${e.objectType}`)}iterate(t,e){if(t&&0!==t.starts.length)for(let s=0;s<t.starts.length;++s)e(t.starts[s],4294967295===t.counts[s]?1/0:t.counts[s])}}class Se{constructor(){e(this,"clippingPlanes",[]),e(this,"uniforms"),e(this,"renderer"),e(this,"onRedraw",(()=>{})),e(this,"redraw",(()=>{this.onRedraw()}))}}class _e{constructor(t){e(this,"communicationKey",0),e(this,"handlers",new Map),e(this,"handleInput"),e(this,"onInput",(t=>{t.data.isResponse?this.onOutput(t.data):this.manageInput(t.data)})),this.handleInput=t}initConnection(t){t.onmessage=this.onInput}fetch(t,e){return t.messageId=this.communicationKey++,new Promise((async(s,i)=>{this.handlers.set(t.messageId,(t=>{t.error?i(t.error):s(t)}));(await this.fetchConnection(t)).postMessage(t,e)}))}onOutput(t){const e=this.handlers.get(t.messageId);this.handlers.delete(t.messageId),e(t)}async manageInput(t){try{await this.handleInput(t)}catch(e){console.error(e),t.error=e.toString()}t.isResponse=!0,(await this.fetchConnection(t)).postMessage(t)}}class Le extends _e{constructor(t,s){super(s),e(this,"threads",new Map),e(this,"modelThread",new Map),e(this,"threadPort",new Map),e(this,"placeholder",{}),this.threadUrl=t}async fetchConnection(t){let e=this.modelThread.get(t.modelId);if(e===this.placeholder)throw new Error("Unable to get message port while worker is being created");if(!e){this.modelThread.set(t.modelId,this.placeholder);const s=navigator.hardwareConcurrency?navigator.hardwareConcurrency-3:0;this.threads.size<Math.max(s,2)?e=this.newThread(await this.threadUrl):(e=Array.from(this.threads.keys()).reduce(((t,e)=>this.threads.get(t)<this.threads.get(e)?t:e)),this.threads.set(e,this.threads.get(e)+1)),this.modelThread.set(t.modelId,e)}return this.threadPort.get(e)}newThread(t){const e=new Worker(t,{type:"module"}),s=new MessageChannel;return this.initConnection(s.port1),this.threadPort.set(e,s.port1),e.postMessage(s.port2,[s.port2]),this.threads.set(e,1),e}async invoke(t,e,s){return(await this.fetch({type:H.CALL,modelId:t,methodName:e,args:Array.from(s)})).result}delete(t){const e=this.modelThread.get(t);this.modelThread.delete(t);0===this.threads.get(e)-1&&(this.threads.delete(e),this.threadPort.delete(e),e.terminate())}}const me=new Map([[o.IFCRELDEFINESBYPROPERTIES,{forRelating:"DefinesOcurrence",forRelated:"IsDefinedBy"}],[o.IFCRELASSOCIATESMATERIAL,{forRelated:"HasAssociations",forRelating:"AssociatedTo"}],[o.IFCRELAGGREGATES,{forRelated:"Decomposes",forRelating:"IsDecomposedBy"}],[o.IFCRELCONTAINEDINSPATIALSTRUCTURE,{forRelated:"ContainedInStructure",forRelating:"ContainsElements"}]]),Pe={base:{entities:new Set([o.IFCPROJECT,o.IFCSITE,o.IFCBUILDING,o.IFCBUILDINGSTOREY]),rels:new Set([o.IFCRELAGGREGATES,o.IFCRELCONTAINEDINSPATIALSTRUCTURE])},materials:{entities:new Set([o.IFCMATERIAL,o.IFCMATERIALCONSTITUENT,o.IFCMATERIALCONSTITUENTSET,o.IFCMATERIALLAYER,o.IFCMATERIALLAYERSET,o.IFCMATERIALLAYERSETUSAGE,o.IFCMATERIALPROFILE,o.IFCMATERIALPROFILESET,o.IFCMATERIALPROFILESETUSAGE]),rels:new Set([o.IFCRELASSOCIATESMATERIAL])},properties:{entities:new Set([o.IFCPROPERTYSET,o.IFCPROPERTYSINGLEVALUE,o.IFCELEMENTQUANTITY,o.IFCQUANTITYAREA,o.IFCQUANTITYCOUNT,o.IFCQUANTITYLENGTH,o.IFCQUANTITYNUMBER,o.IFCQUANTITYTIME,o.IFCQUANTITYVOLUME,o.IFCQUANTITYWEIGHT]),rels:new Set([o.IFCRELDEFINESBYPROPERTIES])},elements:{entities:new Set([o.IFCSPACE,o.IFCANNOTATION,o.IFCCONTROLLER,o.IFCBOILER,o.IFCLAMP,o.IFCPUMP,o.IFCAIRTERMINALBOX,o.IFCFLOWINSTRUMENT,o.IFCFURNISHINGELEMENT,o.IFCELECTRICGENERATOR,o.IFCAUDIOVISUALAPPLIANCE,o.IFCPIPEFITTING,o.IFCSTAIR,o.IFCDUCTFITTING,o.IFCMECHANICALFASTENER,o.IFCDOOR,o.IFCELECTRICMOTOR,o.IFCSYSTEMFURNITUREELEMENT,o.IFCEVAPORATOR,o.IFCWINDOWSTANDARDCASE,o.IFCLIGHTFIXTURE,o.IFCUNITARYCONTROLELEMENT,o.IFCCABLECARRIERFITTING,o.IFCCOIL,o.IFCFASTENER,o.IFCFLOWSTORAGEDEVICE,o.IFCPROTECTIVEDEVICE,o.IFCBEAM,o.IFCTANK,o.IFCFILTER,o.IFCCOLUMN,o.IFCELECTRICDISTRIBUTIONBOARD,o.IFCFOOTING,o.IFCCOLUMNSTANDARDCASE,o.IFCVOIDINGFEATURE,o.IFCREINFORCINGBAR,o.IFCFLOWSEGMENT,o.IFCELECTRICTIMECONTROL,o.IFCCABLEFITTING,o.IFCDISTRIBUTIONCHAMBERELEMENT,o.IFCDISTRIBUTIONCONTROLELEMENT,o.IFCMEMBER,o.IFCBUILDINGELEMENTPROXY,o.IFCPLATESTANDARDCASE,o.IFCSWITCHINGDEVICE,o.IFCSHADINGDEVICE,o.IFCDISCRETEACCESSORY,o.IFCDUCTSILENCER,o.IFCSTACKTERMINAL,o.IFCFIRESUPPRESSIONTERMINAL,o.IFCMEDICALDEVICE,o.IFCFURNITURE,o.IFCSLAB,o.IFCTRANSPORTELEMENT,o.IFCAIRTERMINAL,o.IFCENERGYCONVERSIONDEVICE,o.IFCCIVILELEMENT,o.IFCPILE,o.IFCELECTRICAPPLIANCE,o.IFCMEMBERSTANDARDCASE,o.IFCDISTRIBUTIONELEMENT,o.IFCCOVERING,o.IFCSPACEHEATER,o.IFCROOF,o.IFCAIRTOAIRHEATRECOVERY,o.IFCFLOWCONTROLLER,o.IFCHUMIDIFIER,o.IFCJUNCTIONBOX,o.IFCFLOWMETER,o.IFCFLOWTERMINAL,o.IFCRAILING,o.IFCCONDENSER,o.IFCPROTECTIVEDEVICETRIPPINGUNIT,o.IFCREINFORCINGMESH,o.IFCTENDONANCHOR,o.IFCVIBRATIONISOLATOR,o.IFCWALL,o.IFCMOTORCONNECTION,o.IFCVIRTUALELEMENT,o.IFCENGINE,o.IFCBEAMSTANDARDCASE,o.IFCBURNER,o.IFCBUILDINGELEMENTPART,o.IFCRAMP,o.IFCTUBEBUNDLE,o.IFCSLABSTANDARDCASE,o.IFCDISTRIBUTIONFLOWELEMENT,o.IFCSANITARYTERMINAL,o.IFCOPENINGSTANDARDCASE,o.IFCALARM,o.IFCSURFACEFEATURE,o.IFCSLABELEMENTEDCASE,o.IFCFLOWMOVINGDEVICE,o.IFCPLATE,o.IFCCOMMUNICATIONSAPPLIANCE,o.IFCDOORSTANDARDCASE,o.IFCRAMPFLIGHT,o.IFCCHIMNEY,o.IFCWINDOW,o.IFCELECTRICFLOWSTORAGEDEVICE,o.IFCHEATEXCHANGER,o.IFCFAN,o.IFCSOLARDEVICE,o.IFCGEOGRAPHICELEMENT,o.IFCCURTAINWALL,o.IFCFLOWTREATMENTDEVICE,o.IFCWALLSTANDARDCASE,o.IFCDUCTSEGMENT,o.IFCCOMPRESSOR,o.IFCPIPESEGMENT,o.IFCCOOLINGTOWER,o.IFCPROJECTIONELEMENT,o.IFCOUTLET,o.IFCEVAPORATIVECOOLER,o.IFCCABLECARRIERSEGMENT,o.IFCTENDON,o.IFCTRANSFORMER,o.IFCCHILLER,o.IFCDAMPER,o.IFCSENSOR,o.IFCELEMENTASSEMBLY,o.IFCCOOLEDBEAM,o.IFCWALLELEMENTEDCASE,o.IFCINTERCEPTOR,o.IFCVALVE,o.IFCCABLESEGMENT,o.IFCWASTETERMINAL,o.IFCSTAIRFLIGHT,o.IFCFLOWFITTING,o.IFCACTUATOR,o.IFCUNITARYEQUIPMENT,o.IFCGRID,o.IFCBUILTELEMENT])}};const Me={950732822:"IFCURIREFERENCE",4075327185:"IFCTIME",1209108979:"IFCTEMPERATURERATEOFCHANGEMEASURE",3457685358:"IFCSOUNDPRESSURELEVELMEASURE",4157543285:"IFCSOUNDPOWERLEVELMEASURE",2798247006:"IFCPROPERTYSETDEFINITIONSET",1790229001:"IFCPOSITIVEINTEGER",525895558:"IFCNONNEGATIVELENGTHMEASURE",1774176899:"IFCLINEINDEX",1275358634:"IFCLANGUAGEID",2541165894:"IFCDURATION",3701338814:"IFCDAYINWEEKNUMBER",2195413836:"IFCDATETIME",937566702:"IFCDATE",1683019596:"IFCCARDINALPOINTREFERENCE",2314439260:"IFCBINARY",1500781891:"IFCAREADENSITYMEASURE",3683503648:"IFCARCINDEX",4065007721:"IFCYEARNUMBER",1718600412:"IFCWARPINGMOMENTMEASURE",51269191:"IFCWARPINGCONSTANTMEASURE",2593997549:"IFCVOLUMETRICFLOWRATEMEASURE",3458127941:"IFCVOLUMEMEASURE",3345633955:"IFCVAPORPERMEABILITYMEASURE",1278329552:"IFCTORQUEMEASURE",2591213694:"IFCTIMESTAMP",2726807636:"IFCTIMEMEASURE",743184107:"IFCTHERMODYNAMICTEMPERATUREMEASURE",2016195849:"IFCTHERMALTRANSMITTANCEMEASURE",857959152:"IFCTHERMALRESISTANCEMEASURE",2281867870:"IFCTHERMALEXPANSIONCOEFFICIENTMEASURE",2645777649:"IFCTHERMALCONDUCTIVITYMEASURE",232962298:"IFCTHERMALADMITTANCEMEASURE",296282323:"IFCTEXTTRANSFORMATION",603696268:"IFCTEXTFONTNAME",3490877962:"IFCTEXTDECORATION",1460886941:"IFCTEXTALIGNMENT",2801250643:"IFCTEXT",58845555:"IFCTEMPERATUREGRADIENTMEASURE",361837227:"IFCSPECULARROUGHNESS",2757832317:"IFCSPECULAREXPONENT",3477203348:"IFCSPECIFICHEATCAPACITYMEASURE",993287707:"IFCSOUNDPRESSUREMEASURE",846465480:"IFCSOUNDPOWERMEASURE",3471399674:"IFCSOLIDANGLEMEASURE",408310005:"IFCSHEARMODULUSMEASURE",2190458107:"IFCSECTIONALAREAINTEGRALMEASURE",3467162246:"IFCSECTIONMODULUSMEASURE",2766185779:"IFCSECONDINMINUTE",3211557302:"IFCROTATIONALSTIFFNESSMEASURE",1755127002:"IFCROTATIONALMASSMEASURE",2133746277:"IFCROTATIONALFREQUENCYMEASURE",200335297:"IFCREAL",96294661:"IFCRATIOMEASURE",3972513137:"IFCRADIOACTIVITYMEASURE",3665567075:"IFCPRESSUREMEASURE",2169031380:"IFCPRESENTABLETEXT",1364037233:"IFCPOWERMEASURE",1245737093:"IFCPOSITIVERATIOMEASURE",3054510233:"IFCPOSITIVEPLANEANGLEMEASURE",2815919920:"IFCPOSITIVELENGTHMEASURE",4042175685:"IFCPLANEANGLEMEASURE",2642773653:"IFCPLANARFORCEMEASURE",2260317790:"IFCPARAMETERVALUE",929793134:"IFCPHMEASURE",2395907400:"IFCNUMERICMEASURE",2095195183:"IFCNORMALISEDRATIOMEASURE",765770214:"IFCMONTHINYEARNUMBER",2615040989:"IFCMONETARYMEASURE",3114022597:"IFCMOMENTOFINERTIAMEASURE",1648970520:"IFCMOLECULARWEIGHTMEASURE",3177669450:"IFCMOISTUREDIFFUSIVITYMEASURE",1753493141:"IFCMODULUSOFSUBGRADEREACTIONMEASURE",1052454078:"IFCMODULUSOFROTATIONALSUBGRADEREACTIONMEASURE",2173214787:"IFCMODULUSOFLINEARSUBGRADEREACTIONMEASURE",3341486342:"IFCMODULUSOFELASTICITYMEASURE",102610177:"IFCMINUTEINHOUR",3531705166:"IFCMASSPERLENGTHMEASURE",3124614049:"IFCMASSMEASURE",4017473158:"IFCMASSFLOWRATEMEASURE",1477762836:"IFCMASSDENSITYMEASURE",2486716878:"IFCMAGNETICFLUXMEASURE",286949696:"IFCMAGNETICFLUXDENSITYMEASURE",151039812:"IFCLUMINOUSINTENSITYMEASURE",2755797622:"IFCLUMINOUSINTENSITYDISTRIBUTIONMEASURE",2095003142:"IFCLUMINOUSFLUXMEASURE",503418787:"IFCLOGICAL",3086160713:"IFCLINEARVELOCITYMEASURE",1307019551:"IFCLINEARSTIFFNESSMEASURE",2128979029:"IFCLINEARMOMENTMEASURE",191860431:"IFCLINEARFORCEMEASURE",1243674935:"IFCLENGTHMEASURE",3258342251:"IFCLABEL",2054016361:"IFCKINEMATICVISCOSITYMEASURE",3192672207:"IFCISOTHERMALMOISTURECAPACITYMEASURE",3686016028:"IFCIONCONCENTRATIONMEASURE",3809634241:"IFCINTEGERCOUNTRATEMEASURE",1939436016:"IFCINTEGER",2679005408:"IFCINDUCTANCEMEASURE",3358199106:"IFCILLUMINANCEMEASURE",983778844:"IFCIDENTIFIER",2589826445:"IFCHOURINDAY",1158859006:"IFCHEATINGVALUEMEASURE",3113092358:"IFCHEATFLUXDENSITYMEASURE",3064340077:"IFCGLOBALLYUNIQUEID",3044325142:"IFCFREQUENCYMEASURE",1361398929:"IFCFORCEMEASURE",2590844177:"IFCFONTWEIGHT",2715512545:"IFCFONTVARIANT",1102727119:"IFCFONTSTYLE",2078135608:"IFCENERGYMEASURE",2506197118:"IFCELECTRICVOLTAGEMEASURE",2951915441:"IFCELECTRICRESISTANCEMEASURE",3790457270:"IFCELECTRICCURRENTMEASURE",2093906313:"IFCELECTRICCONDUCTANCEMEASURE",3818826038:"IFCELECTRICCHARGEMEASURE",1827137117:"IFCELECTRICCAPACITANCEMEASURE",69416015:"IFCDYNAMICVISCOSITYMEASURE",524656162:"IFCDOSEEQUIVALENTMEASURE",4134073009:"IFCDIMENSIONCOUNT",1514641115:"IFCDESCRIPTIVEMEASURE",300323983:"IFCDAYLIGHTSAVINGHOUR",86635668:"IFCDAYINMONTHNUMBER",94842927:"IFCCURVATUREMEASURE",1778710042:"IFCCOUNTMEASURE",3238673880:"IFCCONTEXTDEPENDENTMEASURE",3812528620:"IFCCOMPOUNDPLANEANGLEMEASURE",2991860651:"IFCCOMPLEXNUMBER",1867003952:"IFCBOXALIGNMENT",2735952531:"IFCBOOLEAN",2650437152:"IFCAREAMEASURE",632304761:"IFCANGULARVELOCITYMEASURE",360377573:"IFCAMOUNTOFSUBSTANCEMEASURE",4182062534:"IFCACCELERATIONMEASURE",3699917729:"IFCABSORBEDDOSEMEASURE",1971632696:"IFCGEOSLICE",2680139844:"IFCGEOMODEL",24726584:"IFCELECTRICFLOWTREATMENTDEVICE",3693000487:"IFCDISTRIBUTIONBOARD",3460952963:"IFCCONVEYORSEGMENT",3999819293:"IFCCAISSONFOUNDATION",3314249567:"IFCBOREHOLE",4196446775:"IFCBEARING",325726236:"IFCALIGNMENT",3425753595:"IFCTRACKELEMENT",991950508:"IFCSIGNAL",3798194928:"IFCREINFORCEDSOIL",3290496277:"IFCRAIL",1383356374:"IFCPAVEMENT",2182337498:"IFCNAVIGATIONELEMENT",234836483:"IFCMOORINGDEVICE",2078563270:"IFCMOBILETELECOMMUNICATIONSAPPLIANCE",1638804497:"IFCLIQUIDTERMINAL",1154579445:"IFCLINEARPOSITIONINGELEMENT",2696325953:"IFCKERB",2713699986:"IFCGEOTECHNICALASSEMBLY",2142170206:"IFCELECTRICFLOWTREATMENTDEVICETYPE",3376911765:"IFCEARTHWORKSFILL",1077100507:"IFCEARTHWORKSELEMENT",3071239417:"IFCEARTHWORKSCUT",479945903:"IFCDISTRIBUTIONBOARDTYPE",3426335179:"IFCDEEPFOUNDATION",1502416096:"IFCCOURSE",2940368186:"IFCCONVEYORSEGMENTTYPE",3203706013:"IFCCAISSONFOUNDATIONTYPE",3862327254:"IFCBUILTSYSTEM",1876633798:"IFCBUILTELEMENT",963979645:"IFCBRIDGEPART",644574406:"IFCBRIDGE",3649138523:"IFCBEARINGTYPE",1662888072:"IFCALIGNMENTVERTICAL",317615605:"IFCALIGNMENTSEGMENT",1545765605:"IFCALIGNMENTHORIZONTAL",4266260250:"IFCALIGNMENTCANT",3956297820:"IFCVIBRATIONDAMPERTYPE",1530820697:"IFCVIBRATIONDAMPER",840318589:"IFCVEHICLE",1953115116:"IFCTRANSPORTATIONDEVICE",618700268:"IFCTRACKELEMENTTYPE",2281632017:"IFCTENDONCONDUITTYPE",3663046924:"IFCTENDONCONDUIT",42703149:"IFCSINESPIRAL",1894708472:"IFCSIGNALTYPE",3599934289:"IFCSIGNTYPE",33720170:"IFCSIGN",1027922057:"IFCSEVENTHORDERPOLYNOMIALSPIRAL",544395925:"IFCSEGMENTEDREFERENCECURVE",3649235739:"IFCSECONDORDERPOLYNOMIALSPIRAL",550521510:"IFCROADPART",146592293:"IFCROAD",3818125796:"IFCRELADHERESTOELEMENT",4021432810:"IFCREFERENT",1891881377:"IFCRAILWAYPART",3992365140:"IFCRAILWAY",1763565496:"IFCRAILTYPE",1946335990:"IFCPOSITIONINGELEMENT",514975943:"IFCPAVEMENTTYPE",506776471:"IFCNAVIGATIONELEMENTTYPE",710110818:"IFCMOORINGDEVICETYPE",1950438474:"IFCMOBILETELECOMMUNICATIONSAPPLIANCETYPE",976884017:"IFCMARINEPART",525669439:"IFCMARINEFACILITY",1770583370:"IFCLIQUIDTERMINALTYPE",2176059722:"IFCLINEARELEMENT",679976338:"IFCKERBTYPE",3948183225:"IFCIMPACTPROTECTIONDEVICETYPE",2568555532:"IFCIMPACTPROTECTIONDEVICE",2898700619:"IFCGRADIENTCURVE",1594536857:"IFCGEOTECHNICALSTRATUM",4230923436:"IFCGEOTECHNICALELEMENT",4228831410:"IFCFACILITYPARTCOMMON",1310830890:"IFCFACILITYPART",24185140:"IFCFACILITY",4234616927:"IFCDIRECTRIXDERIVEDREFERENCESWEPTAREASOLID",1306400036:"IFCDEEPFOUNDATIONTYPE",4189326743:"IFCCOURSETYPE",2000195564:"IFCCOSINESPIRAL",3497074424:"IFCCLOTHOID",1626504194:"IFCBUILTELEMENTTYPE",3651464721:"IFCVEHICLETYPE",1229763772:"IFCTRIANGULATEDIRREGULARNETWORK",3665877780:"IFCTRANSPORTATIONDEVICETYPE",782932809:"IFCTHIRDORDERPOLYNOMIALSPIRAL",2735484536:"IFCSPIRAL",1356537516:"IFCSECTIONEDSURFACE",1290935644:"IFCSECTIONEDSOLIDHORIZONTAL",1862484736:"IFCSECTIONEDSOLID",1441486842:"IFCRELPOSITIONS",1033248425:"IFCRELASSOCIATESPROFILEDEF",3381221214:"IFCPOLYNOMIALCURVE",2485787929:"IFCOFFSETCURVEBYDISTANCES",590820931:"IFCOFFSETCURVE",3465909080:"IFCINDEXEDPOLYGONALTEXTUREMAP",593015953:"IFCDIRECTRIXCURVESWEPTAREASOLID",4212018352:"IFCCURVESEGMENT",3425423356:"IFCAXIS2PLACEMENTLINEAR",823603102:"IFCSEGMENT",2165702409:"IFCPOINTBYDISTANCEEXPRESSION",182550632:"IFCOPENCROSSPROFILEDEF",388784114:"IFCLINEARPLACEMENT",536804194:"IFCALIGNMENTHORIZONTALSEGMENT",3752311538:"IFCALIGNMENTCANTSEGMENT",1010789467:"IFCTEXTURECOORDINATEINDICESWITHVOIDS",222769930:"IFCTEXTURECOORDINATEINDICES",2691318326:"IFCQUANTITYNUMBER",3633395639:"IFCALIGNMENTVERTICALSEGMENT",2879124712:"IFCALIGNMENTPARAMETERSEGMENT",25142252:"IFCCONTROLLER",3087945054:"IFCALARM",4288193352:"IFCACTUATOR",630975310:"IFCUNITARYCONTROLELEMENT",4086658281:"IFCSENSOR",2295281155:"IFCPROTECTIVEDEVICETRIPPINGUNIT",182646315:"IFCFLOWINSTRUMENT",1426591983:"IFCFIRESUPPRESSIONTERMINAL",819412036:"IFCFILTER",3415622556:"IFCFAN",1003880860:"IFCELECTRICTIMECONTROL",402227799:"IFCELECTRICMOTOR",264262732:"IFCELECTRICGENERATOR",3310460725:"IFCELECTRICFLOWSTORAGEDEVICE",862014818:"IFCELECTRICDISTRIBUTIONBOARD",1904799276:"IFCELECTRICAPPLIANCE",1360408905:"IFCDUCTSILENCER",3518393246:"IFCDUCTSEGMENT",342316401:"IFCDUCTFITTING",562808652:"IFCDISTRIBUTIONCIRCUIT",4074379575:"IFCDAMPER",3640358203:"IFCCOOLINGTOWER",4136498852:"IFCCOOLEDBEAM",2272882330:"IFCCONDENSER",3571504051:"IFCCOMPRESSOR",3221913625:"IFCCOMMUNICATIONSAPPLIANCE",639361253:"IFCCOIL",3902619387:"IFCCHILLER",4217484030:"IFCCABLESEGMENT",1051757585:"IFCCABLEFITTING",3758799889:"IFCCABLECARRIERSEGMENT",635142910:"IFCCABLECARRIERFITTING",2938176219:"IFCBURNER",32344328:"IFCBOILER",2906023776:"IFCBEAMSTANDARDCASE",277319702:"IFCAUDIOVISUALAPPLIANCE",2056796094:"IFCAIRTOAIRHEATRECOVERY",177149247:"IFCAIRTERMINALBOX",1634111441:"IFCAIRTERMINAL",486154966:"IFCWINDOWSTANDARDCASE",4237592921:"IFCWASTETERMINAL",4156078855:"IFCWALLELEMENTEDCASE",4207607924:"IFCVALVE",4292641817:"IFCUNITARYEQUIPMENT",3179687236:"IFCUNITARYCONTROLELEMENTTYPE",3026737570:"IFCTUBEBUNDLE",3825984169:"IFCTRANSFORMER",812556717:"IFCTANK",1162798199:"IFCSWITCHINGDEVICE",385403989:"IFCSTRUCTURALLOADCASE",1404847402:"IFCSTACKTERMINAL",1999602285:"IFCSPACEHEATER",3420628829:"IFCSOLARDEVICE",3027962421:"IFCSLABSTANDARDCASE",3127900445:"IFCSLABELEMENTEDCASE",1329646415:"IFCSHADINGDEVICE",3053780830:"IFCSANITARYTERMINAL",2572171363:"IFCREINFORCINGBARTYPE",1232101972:"IFCRATIONALBSPLINECURVEWITHKNOTS",90941305:"IFCPUMP",655969474:"IFCPROTECTIVEDEVICETRIPPINGUNITTYPE",738039164:"IFCPROTECTIVEDEVICE",1156407060:"IFCPLATESTANDARDCASE",3612865200:"IFCPIPESEGMENT",310824031:"IFCPIPEFITTING",3694346114:"IFCOUTLET",144952367:"IFCOUTERBOUNDARYCURVE",2474470126:"IFCMOTORCONNECTION",1911478936:"IFCMEMBERSTANDARDCASE",1437502449:"IFCMEDICALDEVICE",629592764:"IFCLIGHTFIXTURE",76236018:"IFCLAMP",2176052936:"IFCJUNCTIONBOX",4175244083:"IFCINTERCEPTOR",2068733104:"IFCHUMIDIFIER",3319311131:"IFCHEATEXCHANGER",2188021234:"IFCFLOWMETER",1209101575:"IFCEXTERNALSPATIALELEMENT",484807127:"IFCEVAPORATOR",3747195512:"IFCEVAPORATIVECOOLER",2814081492:"IFCENGINE",2417008758:"IFCELECTRICDISTRIBUTIONBOARDTYPE",3242481149:"IFCDOORSTANDARDCASE",3205830791:"IFCDISTRIBUTIONSYSTEM",400855858:"IFCCOMMUNICATIONSAPPLIANCETYPE",905975707:"IFCCOLUMNSTANDARDCASE",1677625105:"IFCCIVILELEMENT",3296154744:"IFCCHIMNEY",2674252688:"IFCCABLEFITTINGTYPE",2188180465:"IFCBURNERTYPE",1177604601:"IFCBUILDINGSYSTEM",39481116:"IFCBUILDINGELEMENTPARTTYPE",1136057603:"IFCBOUNDARYCURVE",2461110595:"IFCBSPLINECURVEWITHKNOTS",1532957894:"IFCAUDIOVISUALAPPLIANCETYPE",4088093105:"IFCWORKCALENDAR",4009809668:"IFCWINDOWTYPE",926996030:"IFCVOIDINGFEATURE",2391383451:"IFCVIBRATIONISOLATOR",2415094496:"IFCTENDONTYPE",3081323446:"IFCTENDONANCHORTYPE",413509423:"IFCSYSTEMFURNITUREELEMENT",3101698114:"IFCSURFACEFEATURE",3657597509:"IFCSTRUCTURALSURFACEACTION",2757150158:"IFCSTRUCTURALCURVEREACTION",1004757350:"IFCSTRUCTURALCURVEACTION",338393293:"IFCSTAIRTYPE",1072016465:"IFCSOLARDEVICETYPE",4074543187:"IFCSHADINGDEVICETYPE",2157484638:"IFCSEAMCURVE",2781568857:"IFCROOFTYPE",2310774935:"IFCREINFORCINGMESHTYPE",964333572:"IFCREINFORCINGELEMENTTYPE",683857671:"IFCRATIONALBSPLINESURFACEWITHKNOTS",1469900589:"IFCRAMPTYPE",2839578677:"IFCPOLYGONALFACESET",1158309216:"IFCPILETYPE",3079942009:"IFCOPENINGSTANDARDCASE",1114901282:"IFCMEDICALDEVICETYPE",3113134337:"IFCINTERSECTIONCURVE",3946677679:"IFCINTERCEPTORTYPE",2571569899:"IFCINDEXEDPOLYCURVE",3493046030:"IFCGEOGRAPHICELEMENT",1509553395:"IFCFURNITURE",1893162501:"IFCFOOTINGTYPE",2853485674:"IFCEXTERNALSPATIALSTRUCTUREELEMENT",4148101412:"IFCEVENT",132023988:"IFCENGINETYPE",2397081782:"IFCELEMENTASSEMBLYTYPE",2323601079:"IFCDOORTYPE",1213902940:"IFCCYLINDRICALSURFACE",1525564444:"IFCCONSTRUCTIONPRODUCTRESOURCETYPE",4105962743:"IFCCONSTRUCTIONMATERIALRESOURCETYPE",2185764099:"IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE",15328376:"IFCCOMPOSITECURVEONSURFACE",3875453745:"IFCCOMPLEXPROPERTYTEMPLATE",3893394355:"IFCCIVILELEMENTTYPE",2197970202:"IFCCHIMNEYTYPE",167062518:"IFCBSPLINESURFACEWITHKNOTS",2887950389:"IFCBSPLINESURFACE",2603310189:"IFCADVANCEDBREPWITHVOIDS",1635779807:"IFCADVANCEDBREP",2916149573:"IFCTRIANGULATEDFACESET",1935646853:"IFCTOROIDALSURFACE",2387106220:"IFCTESSELLATEDFACESET",3206491090:"IFCTASKTYPE",699246055:"IFCSURFACECURVE",4095615324:"IFCSUBCONTRACTRESOURCETYPE",603775116:"IFCSTRUCTURALSURFACEREACTION",4015995234:"IFCSPHERICALSURFACE",2481509218:"IFCSPATIALZONETYPE",463610769:"IFCSPATIALZONE",710998568:"IFCSPATIALELEMENTTYPE",1412071761:"IFCSPATIALELEMENT",3663146110:"IFCSIMPLEPROPERTYTEMPLATE",3243963512:"IFCREVOLVEDAREASOLIDTAPERED",816062949:"IFCREPARAMETRISEDCOMPOSITECURVESEGMENT",1521410863:"IFCRELSPACEBOUNDARY2NDLEVEL",3523091289:"IFCRELSPACEBOUNDARY1STLEVEL",427948657:"IFCRELINTERFERESELEMENTS",307848117:"IFCRELDEFINESBYTEMPLATE",1462361463:"IFCRELDEFINESBYOBJECT",2565941209:"IFCRELDECLARES",1027710054:"IFCRELASSIGNSTOGROUPBYFACTOR",3521284610:"IFCPROPERTYTEMPLATE",492091185:"IFCPROPERTYSETTEMPLATE",653396225:"IFCPROJECTLIBRARY",569719735:"IFCPROCEDURETYPE",3967405729:"IFCPREDEFINEDPROPERTYSET",1682466193:"IFCPCURVE",428585644:"IFCLABORRESOURCETYPE",2294589976:"IFCINDEXEDPOLYGONALFACEWITHVOIDS",178912537:"IFCINDEXEDPOLYGONALFACE",4095422895:"IFCGEOGRAPHICELEMENTTYPE",2652556860:"IFCFIXEDREFERENCESWEPTAREASOLID",2804161546:"IFCEXTRUDEDAREASOLIDTAPERED",4024345920:"IFCEVENTTYPE",2629017746:"IFCCURVEBOUNDEDSURFACE",1815067380:"IFCCREWRESOURCETYPE",3419103109:"IFCCONTEXT",2574617495:"IFCCONSTRUCTIONRESOURCETYPE",2059837836:"IFCCARTESIANPOINTLIST3D",1675464909:"IFCCARTESIANPOINTLIST2D",574549367:"IFCCARTESIANPOINTLIST",3406155212:"IFCADVANCEDFACE",3698973494:"IFCTYPERESOURCE",3736923433:"IFCTYPEPROCESS",901063453:"IFCTESSELLATEDITEM",1096409881:"IFCSWEPTDISKSOLIDPOLYGONAL",1042787934:"IFCRESOURCETIME",1608871552:"IFCRESOURCECONSTRAINTRELATIONSHIP",2943643501:"IFCRESOURCEAPPROVALRELATIONSHIP",2090586900:"IFCQUANTITYSET",1482703590:"IFCPROPERTYTEMPLATEDEFINITION",3778827333:"IFCPREDEFINEDPROPERTIES",2998442950:"IFCMIRROREDPROFILEDEF",853536259:"IFCMATERIALRELATIONSHIP",3404854881:"IFCMATERIALPROFILESETUSAGETAPERING",3079605661:"IFCMATERIALPROFILESETUSAGE",2852063980:"IFCMATERIALCONSTITUENTSET",3708119e3:"IFCMATERIALCONSTITUENT",1585845231:"IFCLAGTIME",2133299955:"IFCINDEXEDTRIANGLETEXTUREMAP",1437953363:"IFCINDEXEDTEXTUREMAP",3570813810:"IFCINDEXEDCOLOURMAP",1437805879:"IFCEXTERNALREFERENCERELATIONSHIP",297599258:"IFCEXTENDEDPROPERTIES",211053100:"IFCEVENTTIME",2713554722:"IFCCONVERSIONBASEDUNITWITHOFFSET",3285139300:"IFCCOLOURRGBLIST",1236880293:"IFCWORKTIME",1199560280:"IFCTIMEPERIOD",3611470254:"IFCTEXTUREVERTEXLIST",2771591690:"IFCTASKTIMERECURRING",1549132990:"IFCTASKTIME",2043862942:"IFCTABLECOLUMN",2934153892:"IFCSURFACEREINFORCEMENTAREA",609421318:"IFCSTRUCTURALLOADORRESULT",3478079324:"IFCSTRUCTURALLOADCONFIGURATION",1054537805:"IFCSCHEDULINGTIME",2439245199:"IFCRESOURCELEVELRELATIONSHIP",2433181523:"IFCREFERENCE",3915482550:"IFCRECURRENCEPATTERN",986844984:"IFCPROPERTYABSTRACTION",3843373140:"IFCPROJECTEDCRS",677532197:"IFCPRESENTATIONITEM",1507914824:"IFCMATERIALUSAGEDEFINITION",552965576:"IFCMATERIALPROFILEWITHOFFSETS",164193824:"IFCMATERIALPROFILESET",2235152071:"IFCMATERIALPROFILE",1847252529:"IFCMATERIALLAYERWITHOFFSETS",760658860:"IFCMATERIALDEFINITION",3057273783:"IFCMAPCONVERSION",4294318154:"IFCEXTERNALINFORMATION",1466758467:"IFCCOORDINATEREFERENCESYSTEM",1785450214:"IFCCOORDINATEOPERATION",775493141:"IFCCONNECTIONVOLUMEGEOMETRY",979691226:"IFCREINFORCINGBAR",3700593921:"IFCELECTRICDISTRIBUTIONPOINT",1062813311:"IFCDISTRIBUTIONCONTROLELEMENT",1052013943:"IFCDISTRIBUTIONCHAMBERELEMENT",578613899:"IFCCONTROLLERTYPE",2454782716:"IFCCHAMFEREDGEFEATURE",753842376:"IFCBEAM",3001207471:"IFCALARMTYPE",2874132201:"IFCACTUATORTYPE",3304561284:"IFCWINDOW",3512223829:"IFCWALLSTANDARDCASE",2391406946:"IFCWALL",3313531582:"IFCVIBRATIONISOLATORTYPE",2347447852:"IFCTENDONANCHOR",3824725483:"IFCTENDON",2515109513:"IFCSTRUCTURALANALYSISMODEL",4252922144:"IFCSTAIRFLIGHT",331165859:"IFCSTAIR",1529196076:"IFCSLAB",1783015770:"IFCSENSORTYPE",1376911519:"IFCROUNDEDEDGEFEATURE",2016517767:"IFCROOF",2320036040:"IFCREINFORCINGMESH",3027567501:"IFCREINFORCINGELEMENT",3055160366:"IFCRATIONALBEZIERCURVE",3283111854:"IFCRAMPFLIGHT",3024970846:"IFCRAMP",2262370178:"IFCRAILING",3171933400:"IFCPLATE",1687234759:"IFCPILE",1073191201:"IFCMEMBER",900683007:"IFCFOOTING",3508470533:"IFCFLOWTREATMENTDEVICE",2223149337:"IFCFLOWTERMINAL",707683696:"IFCFLOWSTORAGEDEVICE",987401354:"IFCFLOWSEGMENT",3132237377:"IFCFLOWMOVINGDEVICE",4037862832:"IFCFLOWINSTRUMENTTYPE",4278956645:"IFCFLOWFITTING",2058353004:"IFCFLOWCONTROLLER",4222183408:"IFCFIRESUPPRESSIONTERMINALTYPE",1810631287:"IFCFILTERTYPE",346874300:"IFCFANTYPE",1658829314:"IFCENERGYCONVERSIONDEVICE",857184966:"IFCELECTRICALELEMENT",1634875225:"IFCELECTRICALCIRCUIT",712377611:"IFCELECTRICTIMECONTROLTYPE",1217240411:"IFCELECTRICMOTORTYPE",1365060375:"IFCELECTRICHEATERTYPE",1534661035:"IFCELECTRICGENERATORTYPE",3277789161:"IFCELECTRICFLOWSTORAGEDEVICETYPE",663422040:"IFCELECTRICAPPLIANCETYPE",855621170:"IFCEDGEFEATURE",2030761528:"IFCDUCTSILENCERTYPE",3760055223:"IFCDUCTSEGMENTTYPE",869906466:"IFCDUCTFITTINGTYPE",395920057:"IFCDOOR",3041715199:"IFCDISTRIBUTIONPORT",3040386961:"IFCDISTRIBUTIONFLOWELEMENT",1945004755:"IFCDISTRIBUTIONELEMENT",2063403501:"IFCDISTRIBUTIONCONTROLELEMENTTYPE",1599208980:"IFCDISTRIBUTIONCHAMBERELEMENTTYPE",2635815018:"IFCDISCRETEACCESSORYTYPE",1335981549:"IFCDISCRETEACCESSORY",4147604152:"IFCDIAMETERDIMENSION",3961806047:"IFCDAMPERTYPE",3495092785:"IFCCURTAINWALL",1973544240:"IFCCOVERING",2954562838:"IFCCOOLINGTOWERTYPE",335055490:"IFCCOOLEDBEAMTYPE",488727124:"IFCCONSTRUCTIONPRODUCTRESOURCE",1060000209:"IFCCONSTRUCTIONMATERIALRESOURCE",3898045240:"IFCCONSTRUCTIONEQUIPMENTRESOURCE",1163958913:"IFCCONDITIONCRITERION",2188551683:"IFCCONDITION",2816379211:"IFCCONDENSERTYPE",3850581409:"IFCCOMPRESSORTYPE",843113511:"IFCCOLUMN",2301859152:"IFCCOILTYPE",2611217952:"IFCCIRCLE",2951183804:"IFCCHILLERTYPE",1285652485:"IFCCABLESEGMENTTYPE",3293546465:"IFCCABLECARRIERSEGMENTTYPE",395041908:"IFCCABLECARRIERFITTINGTYPE",1909888760:"IFCBUILDINGELEMENTPROXYTYPE",1095909175:"IFCBUILDINGELEMENTPROXY",2979338954:"IFCBUILDINGELEMENTPART",52481810:"IFCBUILDINGELEMENTCOMPONENT",3299480353:"IFCBUILDINGELEMENT",231477066:"IFCBOILERTYPE",1916977116:"IFCBEZIERCURVE",819618141:"IFCBEAMTYPE",1967976161:"IFCBSPLINECURVE",3460190687:"IFCASSET",2470393545:"IFCANGULARDIMENSION",1871374353:"IFCAIRTOAIRHEATRECOVERYTYPE",3352864051:"IFCAIRTERMINALTYPE",1411407467:"IFCAIRTERMINALBOXTYPE",3821786052:"IFCACTIONREQUEST",1213861670:"IFC2DCOMPOSITECURVE",1033361043:"IFCZONE",3342526732:"IFCWORKSCHEDULE",4218914973:"IFCWORKPLAN",1028945134:"IFCWORKCONTROL",1133259667:"IFCWASTETERMINALTYPE",1898987631:"IFCWALLTYPE",2769231204:"IFCVIRTUALELEMENT",728799441:"IFCVALVETYPE",1911125066:"IFCUNITARYEQUIPMENTTYPE",1600972822:"IFCTUBEBUNDLETYPE",3593883385:"IFCTRIMMEDCURVE",1620046519:"IFCTRANSPORTELEMENT",1692211062:"IFCTRANSFORMERTYPE",1637806684:"IFCTIMESERIESSCHEDULE",5716631:"IFCTANKTYPE",2254336722:"IFCSYSTEM",2315554128:"IFCSWITCHINGDEVICETYPE",148013059:"IFCSUBCONTRACTRESOURCE",1975003073:"IFCSTRUCTURALSURFACECONNECTION",2986769608:"IFCSTRUCTURALRESULTGROUP",1235345126:"IFCSTRUCTURALPOINTREACTION",734778138:"IFCSTRUCTURALPOINTCONNECTION",2082059205:"IFCSTRUCTURALPOINTACTION",3987759626:"IFCSTRUCTURALPLANARACTIONVARYING",1621171031:"IFCSTRUCTURALPLANARACTION",1252848954:"IFCSTRUCTURALLOADGROUP",1721250024:"IFCSTRUCTURALLINEARACTIONVARYING",1807405624:"IFCSTRUCTURALLINEARACTION",2445595289:"IFCSTRUCTURALCURVEMEMBERVARYING",214636428:"IFCSTRUCTURALCURVEMEMBER",4243806635:"IFCSTRUCTURALCURVECONNECTION",1179482911:"IFCSTRUCTURALCONNECTION",682877961:"IFCSTRUCTURALACTION",1039846685:"IFCSTAIRFLIGHTTYPE",3112655638:"IFCSTACKTERMINALTYPE",3812236995:"IFCSPACETYPE",652456506:"IFCSPACEPROGRAM",1305183839:"IFCSPACEHEATERTYPE",3856911033:"IFCSPACE",2533589738:"IFCSLABTYPE",4097777520:"IFCSITE",4105383287:"IFCSERVICELIFE",3517283431:"IFCSCHEDULETIMECONTROL",1768891740:"IFCSANITARYTERMINALTYPE",2863920197:"IFCRELASSIGNSTASKS",160246688:"IFCRELAGGREGATES",2324767716:"IFCRAMPFLIGHTTYPE",2893384427:"IFCRAILINGTYPE",3248260540:"IFCRADIUSDIMENSION",2250791053:"IFCPUMPTYPE",1842657554:"IFCPROTECTIVEDEVICETYPE",3651124850:"IFCPROJECTIONELEMENT",3642467123:"IFCPROJECTORDERRECORD",2904328755:"IFCPROJECTORDER",2744685151:"IFCPROCEDURE",3740093272:"IFCPORT",3724593414:"IFCPOLYLINE",4017108033:"IFCPLATETYPE",4231323485:"IFCPIPESEGMENTTYPE",804291784:"IFCPIPEFITTINGTYPE",3327091369:"IFCPERMIT",2382730787:"IFCPERFORMANCEHISTORY",2837617999:"IFCOUTLETTYPE",3425660407:"IFCORDERACTION",3588315303:"IFCOPENINGELEMENT",4143007308:"IFCOCCUPANT",1916936684:"IFCMOVE",977012517:"IFCMOTORCONNECTIONTYPE",3181161470:"IFCMEMBERTYPE",2108223431:"IFCMECHANICALFASTENERTYPE",377706215:"IFCMECHANICALFASTENER",2506943328:"IFCLINEARDIMENSION",1161773419:"IFCLIGHTFIXTURETYPE",1051575348:"IFCLAMPTYPE",3827777499:"IFCLABORRESOURCE",4288270099:"IFCJUNCTIONBOXTYPE",2391368822:"IFCINVENTORY",1806887404:"IFCHUMIDIFIERTYPE",1251058090:"IFCHEATEXCHANGERTYPE",2706460486:"IFCGROUP",3009204131:"IFCGRID",200128114:"IFCGASTERMINALTYPE",814719939:"IFCFURNITURESTANDARD",263784265:"IFCFURNISHINGELEMENT",3009222698:"IFCFLOWTREATMENTDEVICETYPE",2297155007:"IFCFLOWTERMINALTYPE",1339347760:"IFCFLOWSTORAGEDEVICETYPE",1834744321:"IFCFLOWSEGMENTTYPE",1482959167:"IFCFLOWMOVINGDEVICETYPE",3815607619:"IFCFLOWMETERTYPE",3198132628:"IFCFLOWFITTINGTYPE",3907093117:"IFCFLOWCONTROLLERTYPE",1287392070:"IFCFEATUREELEMENTSUBTRACTION",2143335405:"IFCFEATUREELEMENTADDITION",2827207264:"IFCFEATUREELEMENT",2489546625:"IFCFASTENERTYPE",647756555:"IFCFASTENER",3737207727:"IFCFACETEDBREPWITHVOIDS",807026263:"IFCFACETEDBREP",3390157468:"IFCEVAPORATORTYPE",3174744832:"IFCEVAPORATIVECOOLERTYPE",3272907226:"IFCEQUIPMENTSTANDARD",1962604670:"IFCEQUIPMENTELEMENT",2107101300:"IFCENERGYCONVERSIONDEVICETYPE",1704287377:"IFCELLIPSE",2590856083:"IFCELEMENTCOMPONENTTYPE",1623761950:"IFCELEMENTCOMPONENT",4123344466:"IFCELEMENTASSEMBLY",1758889154:"IFCELEMENT",360485395:"IFCELECTRICALBASEPROPERTIES",3849074793:"IFCDISTRIBUTIONFLOWELEMENTTYPE",3256556792:"IFCDISTRIBUTIONELEMENTTYPE",681481545:"IFCDIMENSIONCURVEDIRECTEDCALLOUT",1457835157:"IFCCURTAINWALLTYPE",3295246426:"IFCCREWRESOURCE",1916426348:"IFCCOVERINGTYPE",1419761937:"IFCCOSTSCHEDULE",3895139033:"IFCCOSTITEM",3293443760:"IFCCONTROL",2559216714:"IFCCONSTRUCTIONRESOURCE",2510884976:"IFCCONIC",3732776249:"IFCCOMPOSITECURVE",300633059:"IFCCOLUMNTYPE",2937912522:"IFCCIRCLEHOLLOWPROFILEDEF",3124254112:"IFCBUILDINGSTOREY",1950629157:"IFCBUILDINGELEMENTTYPE",4031249490:"IFCBUILDING",1260505505:"IFCBOUNDEDCURVE",3649129432:"IFCBOOLEANCLIPPINGRESULT",1334484129:"IFCBLOCK",3207858831:"IFCASYMMETRICISHAPEPROFILEDEF",1674181508:"IFCANNOTATION",2296667514:"IFCACTOR",2097647324:"IFCTRANSPORTELEMENTTYPE",3473067441:"IFCTASK",1580310250:"IFCSYSTEMFURNITUREELEMENTTYPE",4124788165:"IFCSURFACEOFREVOLUTION",2809605785:"IFCSURFACEOFLINEAREXTRUSION",2028607225:"IFCSURFACECURVESWEPTAREASOLID",4070609034:"IFCSTRUCTUREDDIMENSIONCALLOUT",2218152070:"IFCSTRUCTURALSURFACEMEMBERVARYING",3979015343:"IFCSTRUCTURALSURFACEMEMBER",3689010777:"IFCSTRUCTURALREACTION",530289379:"IFCSTRUCTURALMEMBER",3136571912:"IFCSTRUCTURALITEM",3544373492:"IFCSTRUCTURALACTIVITY",451544542:"IFCSPHERE",3893378262:"IFCSPATIALSTRUCTUREELEMENTTYPE",2706606064:"IFCSPATIALSTRUCTUREELEMENT",3626867408:"IFCRIGHTCIRCULARCYLINDER",4158566097:"IFCRIGHTCIRCULARCONE",1856042241:"IFCREVOLVEDAREASOLID",2914609552:"IFCRESOURCE",1401173127:"IFCRELVOIDSELEMENT",3451746338:"IFCRELSPACEBOUNDARY",366585022:"IFCRELSERVICESBUILDINGS",4122056220:"IFCRELSEQUENCE",1058617721:"IFCRELSCHEDULESCOSTITEMS",1245217292:"IFCRELREFERENCEDINSPATIALSTRUCTURE",750771296:"IFCRELPROJECTSELEMENT",202636808:"IFCRELOVERRIDESPROPERTIES",2051452291:"IFCRELOCCUPIESSPACES",3268803585:"IFCRELNESTS",4189434867:"IFCRELINTERACTIONREQUIREMENTS",279856033:"IFCRELFLOWCONTROLELEMENTS",3940055652:"IFCRELFILLSELEMENT",781010003:"IFCRELDEFINESBYTYPE",4186316022:"IFCRELDEFINESBYPROPERTIES",693640335:"IFCRELDEFINES",2551354335:"IFCRELDECOMPOSES",2802773753:"IFCRELCOVERSSPACES",886880790:"IFCRELCOVERSBLDGELEMENTS",3242617779:"IFCRELCONTAINEDINSPATIALSTRUCTURE",3678494232:"IFCRELCONNECTSWITHREALIZINGELEMENTS",504942748:"IFCRELCONNECTSWITHECCENTRICITY",1638771189:"IFCRELCONNECTSSTRUCTURALMEMBER",3912681535:"IFCRELCONNECTSSTRUCTURALELEMENT",2127690289:"IFCRELCONNECTSSTRUCTURALACTIVITY",3190031847:"IFCRELCONNECTSPORTS",4201705270:"IFCRELCONNECTSPORTTOELEMENT",3945020480:"IFCRELCONNECTSPATHELEMENTS",1204542856:"IFCRELCONNECTSELEMENTS",826625072:"IFCRELCONNECTS",2851387026:"IFCRELASSOCIATESPROFILEPROPERTIES",2655215786:"IFCRELASSOCIATESMATERIAL",3840914261:"IFCRELASSOCIATESLIBRARY",982818633:"IFCRELASSOCIATESDOCUMENT",2728634034:"IFCRELASSOCIATESCONSTRAINT",919958153:"IFCRELASSOCIATESCLASSIFICATION",4095574036:"IFCRELASSOCIATESAPPROVAL",1327628568:"IFCRELASSOCIATESAPPLIEDVALUE",1865459582:"IFCRELASSOCIATES",205026976:"IFCRELASSIGNSTORESOURCE",3372526763:"IFCRELASSIGNSTOPROJECTORDER",2857406711:"IFCRELASSIGNSTOPRODUCT",4278684876:"IFCRELASSIGNSTOPROCESS",1307041759:"IFCRELASSIGNSTOGROUP",2495723537:"IFCRELASSIGNSTOCONTROL",1683148259:"IFCRELASSIGNSTOACTOR",3939117080:"IFCRELASSIGNS",3454111270:"IFCRECTANGULARTRIMMEDSURFACE",2798486643:"IFCRECTANGULARPYRAMID",2770003689:"IFCRECTANGLEHOLLOWPROFILEDEF",3219374653:"IFCPROXY",1451395588:"IFCPROPERTYSET",4194566429:"IFCPROJECTIONCURVE",103090709:"IFCPROJECT",4208778838:"IFCPRODUCT",2945172077:"IFCPROCESS",220341763:"IFCPLANE",603570806:"IFCPLANARBOX",3566463478:"IFCPERMEABLECOVERINGPROPERTIES",3505215534:"IFCOFFSETCURVE3D",3388369263:"IFCOFFSETCURVE2D",3888040117:"IFCOBJECT",1425443689:"IFCMANIFOLDSOLIDBREP",1281925730:"IFCLINE",572779678:"IFCLSHAPEPROFILEDEF",1484403080:"IFCISHAPEPROFILEDEF",987898635:"IFCGEOMETRICCURVESET",1268542332:"IFCFURNITURETYPE",4238390223:"IFCFURNISHINGELEMENTTYPE",3455213021:"IFCFLUIDFLOWPROPERTIES",315944413:"IFCFILLAREASTYLETILES",4203026998:"IFCFILLAREASTYLETILESYMBOLWITHSTYLE",374418227:"IFCFILLAREASTYLEHATCHING",2047409740:"IFCFACEBASEDSURFACEMODEL",477187591:"IFCEXTRUDEDAREASOLID",80994333:"IFCENERGYPROPERTIES",2835456948:"IFCELLIPSEPROFILEDEF",2777663545:"IFCELEMENTARYSURFACE",339256511:"IFCELEMENTTYPE",1883228015:"IFCELEMENTQUANTITY",1472233963:"IFCEDGELOOP",4006246654:"IFCDRAUGHTINGPREDEFINEDCURVEFONT",445594917:"IFCDRAUGHTINGPREDEFINEDCOLOUR",3073041342:"IFCDRAUGHTINGCALLOUT",526551008:"IFCDOORSTYLE",1714330368:"IFCDOORPANELPROPERTIES",2963535650:"IFCDOORLININGPROPERTIES",32440307:"IFCDIRECTION",4054601972:"IFCDIMENSIONCURVETERMINATOR",606661476:"IFCDIMENSIONCURVE",693772133:"IFCDEFINEDSYMBOL",2827736869:"IFCCURVEBOUNDEDPLANE",2601014836:"IFCCURVE",2147822146:"IFCCSGSOLID",2506170314:"IFCCSGPRIMITIVE3D",194851669:"IFCCRANERAILFSHAPEPROFILEDEF",4133800736:"IFCCRANERAILASHAPEPROFILEDEF",2485617015:"IFCCOMPOSITECURVESEGMENT",2205249479:"IFCCLOSEDSHELL",1383045692:"IFCCIRCLEPROFILEDEF",1416205885:"IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM",3331915920:"IFCCARTESIANTRANSFORMATIONOPERATOR3D",3486308946:"IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM",3749851601:"IFCCARTESIANTRANSFORMATIONOPERATOR2D",59481748:"IFCCARTESIANTRANSFORMATIONOPERATOR",1123145078:"IFCCARTESIANPOINT",2898889636:"IFCCSHAPEPROFILEDEF",2713105998:"IFCBOXEDHALFSPACE",2581212453:"IFCBOUNDINGBOX",4182860854:"IFCBOUNDEDSURFACE",2736907675:"IFCBOOLEANRESULT",2740243338:"IFCAXIS2PLACEMENT3D",3125803723:"IFCAXIS2PLACEMENT2D",4261334040:"IFCAXIS1PLACEMENT",1302238472:"IFCANNOTATIONSURFACE",2265737646:"IFCANNOTATIONFILLAREAOCCURRENCE",669184980:"IFCANNOTATIONFILLAREA",3288037868:"IFCANNOTATIONCURVEOCCURRENCE",2543172580:"IFCZSHAPEPROFILEDEF",1299126871:"IFCWINDOWSTYLE",512836454:"IFCWINDOWPANELPROPERTIES",336235671:"IFCWINDOWLININGPROPERTIES",2759199220:"IFCVERTEXLOOP",1417489154:"IFCVECTOR",427810014:"IFCUSHAPEPROFILEDEF",2347495698:"IFCTYPEPRODUCT",1628702193:"IFCTYPEOBJECT",1345879162:"IFCTWODIRECTIONREPEATFACTOR",2715220739:"IFCTRAPEZIUMPROFILEDEF",3124975700:"IFCTEXTLITERALWITHEXTENT",4282788508:"IFCTEXTLITERAL",3028897424:"IFCTERMINATORSYMBOL",3071757647:"IFCTSHAPEPROFILEDEF",230924584:"IFCSWEPTSURFACE",1260650574:"IFCSWEPTDISKSOLID",2247615214:"IFCSWEPTAREASOLID",1878645084:"IFCSURFACESTYLERENDERING",2513912981:"IFCSURFACE",2233826070:"IFCSUBEDGE",3653947884:"IFCSTRUCTURALSTEELPROFILEPROPERTIES",3843319758:"IFCSTRUCTURALPROFILEPROPERTIES",1190533807:"IFCSTRUCTURALLOADSINGLEFORCEWARPING",1597423693:"IFCSTRUCTURALLOADSINGLEFORCE",1973038258:"IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION",2473145415:"IFCSTRUCTURALLOADSINGLEDISPLACEMENT",2668620305:"IFCSTRUCTURALLOADPLANARFORCE",1595516126:"IFCSTRUCTURALLOADLINEARFORCE",390701378:"IFCSPACETHERMALLOADPROPERTIES",1202362311:"IFCSOUNDVALUE",2485662743:"IFCSOUNDPROPERTIES",723233188:"IFCSOLIDMODEL",2609359061:"IFCSLIPPAGECONNECTIONCONDITION",4124623270:"IFCSHELLBASEDSURFACEMODEL",2411513650:"IFCSERVICELIFEFACTOR",1509187699:"IFCSECTIONEDSPINE",2778083089:"IFCROUNDEDRECTANGLEPROFILEDEF",478536968:"IFCRELATIONSHIP",3765753017:"IFCREINFORCEMENTDEFINITIONPROPERTIES",3413951693:"IFCREGULARTIMESERIES",3615266464:"IFCRECTANGLEPROFILEDEF",110355661:"IFCPROPERTYTABLEVALUE",3650150729:"IFCPROPERTYSINGLEVALUE",3357820518:"IFCPROPERTYSETDEFINITION",941946838:"IFCPROPERTYREFERENCEVALUE",2752243245:"IFCPROPERTYLISTVALUE",4166981789:"IFCPROPERTYENUMERATEDVALUE",1680319473:"IFCPROPERTYDEFINITION",871118103:"IFCPROPERTYBOUNDEDVALUE",673634403:"IFCPRODUCTDEFINITIONSHAPE",179317114:"IFCPREDEFINEDPOINTMARKERSYMBOL",433424934:"IFCPREDEFINEDDIMENSIONSYMBOL",2559016684:"IFCPREDEFINEDCURVEFONT",759155922:"IFCPREDEFINEDCOLOUR",2775532180:"IFCPOLYGONALBOUNDEDHALFSPACE",2924175390:"IFCPOLYLOOP",1423911732:"IFCPOINTONSURFACE",4022376103:"IFCPOINTONCURVE",2067069095:"IFCPOINT",1663979128:"IFCPLANAREXTENT",2004835150:"IFCPLACEMENT",597895409:"IFCPIXELTEXTURE",3021840470:"IFCPHYSICALCOMPLEXQUANTITY",2519244187:"IFCPATH",2529465313:"IFCPARAMETERIZEDPROFILEDEF",1029017970:"IFCORIENTEDEDGE",2665983363:"IFCOPENSHELL",2833995503:"IFCONEDIRECTIONREPEATFACTOR",219451334:"IFCOBJECTDEFINITION",1430189142:"IFCMECHANICALCONCRETEMATERIALPROPERTIES",2022407955:"IFCMATERIALDEFINITIONREPRESENTATION",2347385850:"IFCMAPPEDITEM",1008929658:"IFCLOOP",2624227202:"IFCLOCALPLACEMENT",3422422726:"IFCLIGHTSOURCESPOT",1520743889:"IFCLIGHTSOURCEPOSITIONAL",4266656042:"IFCLIGHTSOURCEGONIOMETRIC",2604431987:"IFCLIGHTSOURCEDIRECTIONAL",125510826:"IFCLIGHTSOURCEAMBIENT",1402838566:"IFCLIGHTSOURCE",3741457305:"IFCIRREGULARTIMESERIES",3905492369:"IFCIMAGETEXTURE",2445078500:"IFCHYGROSCOPICMATERIALPROPERTIES",812098782:"IFCHALFSPACESOLID",178086475:"IFCGRIDPLACEMENT",3590301190:"IFCGEOMETRICSET",4142052618:"IFCGEOMETRICREPRESENTATIONSUBCONTEXT",2453401579:"IFCGEOMETRICREPRESENTATIONITEM",3448662350:"IFCGEOMETRICREPRESENTATIONCONTEXT",1446786286:"IFCGENERALPROFILEPROPERTIES",803998398:"IFCGENERALMATERIALPROPERTIES",3857492461:"IFCFUELPROPERTIES",738692330:"IFCFILLAREASTYLE",4219587988:"IFCFAILURECONNECTIONCONDITION",3008276851:"IFCFACESURFACE",803316827:"IFCFACEOUTERBOUND",1809719519:"IFCFACEBOUND",2556980723:"IFCFACE",1860660968:"IFCEXTENDEDMATERIALPROPERTIES",476780140:"IFCEDGECURVE",3900360178:"IFCEDGE",4170525392:"IFCDRAUGHTINGPREDEFINEDTEXTFONT",3732053477:"IFCDOCUMENTREFERENCE",1694125774:"IFCDIMENSIONPAIR",2273265877:"IFCDIMENSIONCALLOUTRELATIONSHIP",3632507154:"IFCDERIVEDPROFILEDEF",3800577675:"IFCCURVESTYLE",2889183280:"IFCCONVERSIONBASEDUNIT",3050246964:"IFCCONTEXTDEPENDENTUNIT",45288368:"IFCCONNECTIONPOINTECCENTRICITY",1981873012:"IFCCONNECTIONCURVEGEOMETRY",370225590:"IFCCONNECTEDFACESET",1485152156:"IFCCOMPOSITEPROFILEDEF",2542286263:"IFCCOMPLEXPROPERTY",776857604:"IFCCOLOURRGB",647927063:"IFCCLASSIFICATIONREFERENCE",3150382593:"IFCCENTERLINEPROFILEDEF",616511568:"IFCBLOBTEXTURE",2705031697:"IFCARBITRARYPROFILEDEFWITHVOIDS",1310608509:"IFCARBITRARYOPENPROFILEDEF",3798115385:"IFCARBITRARYCLOSEDPROFILEDEF",2297822566:"IFCANNOTATIONTEXTOCCURRENCE",3612888222:"IFCANNOTATIONSYMBOLOCCURRENCE",962685235:"IFCANNOTATIONSURFACEOCCURRENCE",2442683028:"IFCANNOTATIONOCCURRENCE",1065908215:"IFCWATERPROPERTIES",891718957:"IFCVIRTUALGRIDINTERSECTION",1907098498:"IFCVERTEXPOINT",3304826586:"IFCVERTEXBASEDTEXTUREMAP",2799835756:"IFCVERTEX",180925521:"IFCUNITASSIGNMENT",1735638870:"IFCTOPOLOGYREPRESENTATION",1377556343:"IFCTOPOLOGICALREPRESENTATIONITEM",581633288:"IFCTIMESERIESVALUE",1718945513:"IFCTIMESERIESREFERENCERELATIONSHIP",3101149627:"IFCTIMESERIES",3317419933:"IFCTHERMALMATERIALPROPERTIES",1210645708:"IFCTEXTUREVERTEX",2552916305:"IFCTEXTUREMAP",1742049831:"IFCTEXTURECOORDINATEGENERATOR",280115917:"IFCTEXTURECOORDINATE",1484833681:"IFCTEXTSTYLEWITHBOXCHARACTERISTICS",1640371178:"IFCTEXTSTYLETEXTMODEL",2636378356:"IFCTEXTSTYLEFORDEFINEDFONT",1983826977:"IFCTEXTSTYLEFONTMODEL",1447204868:"IFCTEXTSTYLE",912023232:"IFCTELECOMADDRESS",531007025:"IFCTABLEROW",985171141:"IFCTABLE",1290481447:"IFCSYMBOLSTYLE",626085974:"IFCSURFACETEXTURE",1351298697:"IFCSURFACESTYLEWITHTEXTURES",846575682:"IFCSURFACESTYLESHADING",1607154358:"IFCSURFACESTYLEREFRACTION",3303107099:"IFCSURFACESTYLELIGHTING",1300840506:"IFCSURFACESTYLE",3049322572:"IFCSTYLEDREPRESENTATION",3958052878:"IFCSTYLEDITEM",2830218821:"IFCSTYLEMODEL",3408363356:"IFCSTRUCTURALLOADTEMPERATURE",2525727697:"IFCSTRUCTURALLOADSTATIC",2162789131:"IFCSTRUCTURALLOAD",2273995522:"IFCSTRUCTURALCONNECTIONCONDITION",3692461612:"IFCSIMPLEPROPERTY",4240577450:"IFCSHAPEREPRESENTATION",3982875396:"IFCSHAPEMODEL",867548509:"IFCSHAPEASPECT",4165799628:"IFCSECTIONREINFORCEMENTPROPERTIES",2042790032:"IFCSECTIONPROPERTIES",448429030:"IFCSIUNIT",2341007311:"IFCROOT",3679540991:"IFCRIBPLATEPROFILEPROPERTIES",1660063152:"IFCREPRESENTATIONMAP",3008791417:"IFCREPRESENTATIONITEM",3377609919:"IFCREPRESENTATIONCONTEXT",1076942058:"IFCREPRESENTATION",1222501353:"IFCRELAXATION",1580146022:"IFCREINFORCEMENTBARPROPERTIES",2692823254:"IFCREFERENCESVALUEDOCUMENT",825690147:"IFCQUANTITYWEIGHT",2405470396:"IFCQUANTITYVOLUME",3252649465:"IFCQUANTITYTIME",931644368:"IFCQUANTITYLENGTH",2093928680:"IFCQUANTITYCOUNT",2044713172:"IFCQUANTITYAREA",3710013099:"IFCPROPERTYENUMERATION",148025276:"IFCPROPERTYDEPENDENCYRELATIONSHIP",3896028662:"IFCPROPERTYCONSTRAINTRELATIONSHIP",2598011224:"IFCPROPERTY",2802850158:"IFCPROFILEPROPERTIES",3958567839:"IFCPROFILEDEF",2267347899:"IFCPRODUCTSOFCOMBUSTIONPROPERTIES",2095639259:"IFCPRODUCTREPRESENTATION",2417041796:"IFCPRESENTATIONSTYLEASSIGNMENT",3119450353:"IFCPRESENTATIONSTYLE",1304840413:"IFCPRESENTATIONLAYERWITHSTYLE",2022622350:"IFCPRESENTATIONLAYERASSIGNMENT",1775413392:"IFCPREDEFINEDTEXTFONT",3213052703:"IFCPREDEFINEDTERMINATORSYMBOL",990879717:"IFCPREDEFINEDSYMBOL",3727388367:"IFCPREDEFINEDITEM",3355820592:"IFCPOSTALADDRESS",2226359599:"IFCPHYSICALSIMPLEQUANTITY",2483315170:"IFCPHYSICALQUANTITY",101040310:"IFCPERSONANDORGANIZATION",2077209135:"IFCPERSON",1207048766:"IFCOWNERHISTORY",1411181986:"IFCORGANIZATIONRELATIONSHIP",4251960020:"IFCORGANIZATION",1227763645:"IFCOPTICALMATERIALPROPERTIES",2251480897:"IFCOBJECTIVE",3701648758:"IFCOBJECTPLACEMENT",1918398963:"IFCNAMEDUNIT",2706619895:"IFCMONETARYUNIT",3368373690:"IFCMETRIC",677618848:"IFCMECHANICALSTEELMATERIALPROPERTIES",4256014907:"IFCMECHANICALMATERIALPROPERTIES",2597039031:"IFCMEASUREWITHUNIT",3265635763:"IFCMATERIALPROPERTIES",2199411900:"IFCMATERIALLIST",1303795690:"IFCMATERIALLAYERSETUSAGE",3303938423:"IFCMATERIALLAYERSET",248100487:"IFCMATERIALLAYER",1847130766:"IFCMATERIALCLASSIFICATIONRELATIONSHIP",1838606355:"IFCMATERIAL",30780891:"IFCLOCALTIME",1566485204:"IFCLIGHTINTENSITYDISTRIBUTION",4162380809:"IFCLIGHTDISTRIBUTIONDATA",3452421091:"IFCLIBRARYREFERENCE",2655187982:"IFCLIBRARYINFORMATION",3020489413:"IFCIRREGULARTIMESERIESVALUE",852622518:"IFCGRIDAXIS",3548104201:"IFCEXTERNALLYDEFINEDTEXTFONT",3207319532:"IFCEXTERNALLYDEFINEDSYMBOL",1040185647:"IFCEXTERNALLYDEFINEDSURFACESTYLE",2242383968:"IFCEXTERNALLYDEFINEDHATCHSTYLE",3200245327:"IFCEXTERNALREFERENCE",1648886627:"IFCENVIRONMENTALIMPACTVALUE",3796139169:"IFCDRAUGHTINGCALLOUTRELATIONSHIP",770865208:"IFCDOCUMENTINFORMATIONRELATIONSHIP",1154170062:"IFCDOCUMENTINFORMATION",1376555844:"IFCDOCUMENTELECTRONICFORMAT",2949456006:"IFCDIMENSIONALEXPONENTS",1045800335:"IFCDERIVEDUNITELEMENT",1765591967:"IFCDERIVEDUNIT",1072939445:"IFCDATEANDTIME",3510044353:"IFCCURVESTYLEFONTPATTERN",2367409068:"IFCCURVESTYLEFONTANDSCALING",1105321065:"IFCCURVESTYLEFONT",539742890:"IFCCURRENCYRELATIONSHIP",602808272:"IFCCOSTVALUE",1065062679:"IFCCOORDINATEDUNIVERSALTIMEOFFSET",347226245:"IFCCONSTRAINTRELATIONSHIP",613356794:"IFCCONSTRAINTCLASSIFICATIONRELATIONSHIP",1658513725:"IFCCONSTRAINTAGGREGATIONRELATIONSHIP",1959218052:"IFCCONSTRAINT",2732653382:"IFCCONNECTIONSURFACEGEOMETRY",4257277454:"IFCCONNECTIONPORTGEOMETRY",2614616156:"IFCCONNECTIONPOINTGEOMETRY",2859738748:"IFCCONNECTIONGEOMETRY",3264961684:"IFCCOLOURSPECIFICATION",3639012971:"IFCCLASSIFICATIONNOTATIONFACET",938368621:"IFCCLASSIFICATIONNOTATION",1098599126:"IFCCLASSIFICATIONITEMRELATIONSHIP",1767535486:"IFCCLASSIFICATIONITEM",747523909:"IFCCLASSIFICATION",622194075:"IFCCALENDARDATE",2069777674:"IFCBOUNDARYNODECONDITIONWARPING",1387855156:"IFCBOUNDARYNODECONDITION",3367102660:"IFCBOUNDARYFACECONDITION",1560379544:"IFCBOUNDARYEDGECONDITION",4037036970:"IFCBOUNDARYCONDITION",3869604511:"IFCAPPROVALRELATIONSHIP",390851274:"IFCAPPROVALPROPERTYRELATIONSHIP",2080292479:"IFCAPPROVALACTORRELATIONSHIP",130549933:"IFCAPPROVAL",1110488051:"IFCAPPLIEDVALUERELATIONSHIP",411424972:"IFCAPPLIEDVALUE",639542469:"IFCAPPLICATION",618182010:"IFCADDRESS",3630933823:"IFCACTORROLE",599546466:"FILE_DESCRIPTION",1390159747:"FILE_NAME",1109904537:"FILE_SCHEMA"};class ge{constructor(t){e(this,"_attributesOffsets",[]),e(this,"_relationsMap",{}),e(this,"_guids",[]),e(this,"_guidsItems",[]),e(this,"_ifcApi",null),e(this,"wasmPath","/node_modules/web-ifc/"),e(this,"classesToInclude",[Pe.base,Pe.materials,Pe.properties,Pe.elements]),e(this,"expressIDs",[]),e(this,"classes",[]),this._serializer=t}async getIfcApi(){if(!this._ifcApi){const t=new o.IfcAPI;t.SetWasmPath(this.wasmPath,!1),await t.Init(),t.SetLogLevel(o.LogLevel.LOG_LEVEL_OFF),this._ifcApi=t}return this._ifcApi}async process(t){const e=await this.getIfcApi();if(t.readFromCallback)e.OpenModelFromCallback(t.readCallback,{COORDINATE_TO_ORIGIN:!0});else{if(!t.bytes)throw new Error("No data provided");await e.OpenModel(t.bytes,{COORDINATE_TO_ORIGIN:!0})}const s=e.GetAllTypesOfModel(0).map((t=>t.typeID)),i=e.GetModelSchema(0);if(!o[i])throw new Error("Model schema not recognized.");const r=t.geometryProcessedLocalIDs;await this.processItems(r);const n=new Set(r),a=this.getEntitiesToProcess(),I=s.filter((t=>a.includes(t)));for(const t of I){const s=e.GetLineIDsWithType(0,t);if(0===s.size())continue;const i=[];for(let t=0;t<s.size();t++){const e=s.get(t);n.has(e)||i.push(e)}await this.processItems(i)}const E=s.filter((t=>this.getRelsToProcess().includes(t)));await this.processRelations(E);const{relIndicesVector:c,relsVector:h}=this.getRelationsVector(),{guidsVector:l,guidsIdVector:d}=this.getGuidsVector(),C=await this.getMetadataOffset(),T=this.getAttributesVector(),u=$t.createLocalIdsVector(this._serializer.builder,this.expressIDs),R=this.getCategoriesVector(),b=await this.getSpatialStructureOffset();return this.clean(),{relIndicesVector:c,relsVector:h,guidsVector:l,guidsIdVector:d,metadataOffset:C,attributesVector:T,localIdsVector:u,categoriesVector:R,sptialStrutureOffset:b}}async processItems(t){const e=await this.getIfcApi();for(let s=0;s<t.length;s++){const i=t[s];try{const t=await e.properties.getItemProperties(0,i);if(!t)continue;const s=Me[t.type];this.classes.push(s),this.expressIDs.push(i),this.serializeAttributes(i,t)}catch(t){console.log(`Problem reading properties for ${i}`),console.log(t),await new Promise((t=>{setTimeout(t,100)}));continue}}}addRelation(t,e,s){this._relationsMap[t]||(this._relationsMap[t]={}),this._relationsMap[t][e]||(this._relationsMap[t][e]=[]);for(const i of s)this._relationsMap[t][e].push(i)}serializeAttributes(t,e){const s=[];let i=null;for(const[r,n]of Object.entries(e)){if("number"==typeof n)continue;if(this._serializer.attrsToExclude.has(r)||null==n)continue;if(Array.isArray(n)){const e=n.filter((t=>5===t.type)).map((t=>t.value));this.addRelation(t,r,e);continue}const{value:e,type:a}=n;if(5===a){if("number"!=typeof e)continue;this.addRelation(t,r,[e])}else{if("GlobalId"===r&&"string"==typeof e){i=e;continue}const t=[r,e],I="name"in n&&n.name?n.name:n.constructor.name.toUpperCase();if(I){const e=o[I]??a;t.push(e)}const E=JSON.stringify(t),c=this._serializer.builder.createSharedString(E);s.push(c)}}const r=Mt.createDataVector(this._serializer.builder,s),n=Mt.createAttribute(this._serializer.builder,r);this._attributesOffsets.push(n),i&&(this._guids.push(i),this._guidsItems.push(this.expressIDs.length-1))}getAttributesVector(){return $t.createAttributesVector(this._serializer.builder,this._attributesOffsets)}getGuidsVector(){$t.startGuidsVector(this._serializer.builder,this._guids.length);for(const t of this._guids.reverse()){const e=new Ie({guid:t}),{b1:s,b2:i,b3:r,b4:n,b5:o,b6:a,b44:I,b45:E,b46:c,b47:h,b48:l}=e.guidNumbers;jt.createGuid(this._serializer.builder,s,i,r,n,o,a,I,E,c,h,l)}return{guidsVector:this._serializer.builder.endVector(),guidsIdVector:$t.createGuidsItemsVector(this._serializer.builder,this._guidsItems)}}async processRelations(t){const e=await this.getIfcApi();for(const s of t){const t=me.get(s);if(!t)continue;const{forRelating:i,forRelated:r}=t,n=e.GetLineIDsWithType(0,s);if(0!==n.size())for(let t=0;t<n.size();t++){const s=n.get(t),o=await e.properties.getItemProperties(0,s);if(!o)continue;const a=Object.keys(o),I=a.find((t=>t.startsWith("Relating"))),E=a.find((t=>t.startsWith("Related")));if(!I||!E)continue;const c=o[I].value,h=o[E].map((({value:t})=>t));this.addRelation(c,i,h);for(const t of h)this.addRelation(t,r,[c])}}}getRelationsVector(t=!1){const e=[],s=[];for(const[i,r]of Object.entries(this._relationsMap)){if(t&&!this.expressIDs.includes(Number(i)))continue;const n=[];for(const[e,s]of Object.entries(r)){let i=s;if(t&&(i=s.filter((t=>this.expressIDs.includes(t))),0===i.length))continue;const r=JSON.stringify([e,...i]),o=this._serializer.builder.createSharedString(r);n.push(o)}if(t&&0===n.length)continue;s.push(Number(i));const o=Xt.createDataVector(this._serializer.builder,n),a=Xt.createRelation(this._serializer.builder,o);e.push(a)}const i=$t.createRelationsVector(this._serializer.builder,e);return{relIndicesVector:$t.createRelationsItemsVector(this._serializer.builder,s),relsVector:i}}getCategoriesVector(){const t=this.classes.map((t=>this._serializer.builder.createSharedString(t)));return $t.createCategoriesVector(this._serializer.builder,t)}async getMetadataOffset(){const t={schema:(await this.getIfcApi()).GetModelSchema(0)};return this._serializer.builder.createString(JSON.stringify(t))}getEntityDecomposition(t,e){var s;const i=[];for(const r of e){const n=null==(s=this._relationsMap[t])?void 0:s[r];if(!n)continue;const o={};for(const t of n){const e=this.expressIDs.indexOf(t);if(-1===e)continue;const s=this.classes[e];s&&(o[s]||(o[s]=[]),o[s].push(t))}for(const t in o){const s=o[t].map((t=>this.getEntityDecomposition(t,e))),r=qt.createChildrenVector(this._serializer.builder,s),n=this._serializer.builder.createSharedString(t);qt.startSpatialStructure(this._serializer.builder),qt.addCategory(this._serializer.builder,n),qt.addChildren(this._serializer.builder,r);const a=qt.endSpatialStructure(this._serializer.builder);i.push(a)}}const r=qt.createChildrenVector(this._serializer.builder,i);qt.startSpatialStructure(this._serializer.builder),qt.addLocalId(this._serializer.builder,t),qt.addChildren(this._serializer.builder,r);return qt.endSpatialStructure(this._serializer.builder)}async getSpatialStructureOffset(){const t=await this.getIfcApi(),e=o.IFCPROJECT,s=[...t.GetLineIDsWithType(0,e)].map((t=>this.getEntityDecomposition(t,["IsDecomposedBy","ContainsElements"]))),i=this._serializer.builder.createSharedString("IFCPROJECT"),r=qt.createChildrenVector(this._serializer.builder,s);qt.startSpatialStructure(this._serializer.builder),qt.addCategory(this._serializer.builder,i),qt.addChildren(this._serializer.builder,r);return qt.endSpatialStructure(this._serializer.builder)}clean(){var t;null==(t=this._ifcApi)||t.Dispose(),this._ifcApi=null,this._guids=[],this._guidsItems=[],this._attributesOffsets=[],this._relationsMap={},this.expressIDs=[],this.classes=[]}getEntitiesToProcess(){return this.classesToInclude.map((({entities:t})=>[...t])).flat()}getRelsToProcess(){return this.classesToInclude.map((({rels:t})=>t?[...t]:[])).flat()}}function Ue(t,e){return Math.trunc(t*e)/e}class De{constructor(t,s,i,r){e(this,"x"),e(this,"y"),e(this,"z"),e(this,"hash"),e(this,"id"),this.x=Ue(t[3*s],r),this.y=Ue(t[3*s+1],r),this.z=Ue(t[3*s+2],r),this.hash=`${this.x}/${this.y}/${this.z}`,this.id=i}}class ye{constructor(t){e(this,"list",new Map),e(this,"tempV1",new n.Vector3),e(this,"tempV2",new n.Vector3),e(this,"tempV3",new n.Vector3),e(this,"precission"),this.precission=t}create(t,e){const s=new De(t,e,this.list.size,this.precission);return this.list.has(s.hash)||this.list.set(s.hash,s),this.list.get(s.hash)}get(){return Array.from(this.list.values()).map((t=>[t.x,t.y,t.z]))}isValidTriangle(t,e,s,i){this.tempV1.set(t[3*e],t[3*e+1],t[3*e+2]),this.tempV2.set(t[3*s],t[3*s+1],t[3*s+2]),this.tempV3.set(t[3*i],t[3*i+1],t[3*i+2]);const r=1/this.precission*10,n=this.tempV1.distanceTo(this.tempV2)>r,o=this.tempV1.distanceTo(this.tempV3)>r,a=this.tempV2.distanceTo(this.tempV3)>r;return n&&o&&a}}class we{constructor(t,s){e(this,"p1"),e(this,"p2"),e(this,"hash"),this.p1=t,this.p2=s;const i=[this.p1,this.p2];i.sort(((t,e)=>t.x-e.x||t.y-e.y||t.z-e.z)),this.hash=`${i[0].hash}_${i[1].hash}`}}class ve{constructor(t,s){e(this,"edges",new Map),e(this,"openEdges",new Set),e(this,"id"),e(this,"plane"),this.id=t,this.plane=s}add(t){if(0!==this.edges.size)for(const e of t)this.openEdges.has(e.hash)?this.openEdges.delete(e.hash):this.openEdges.add(e.hash),this.edges.set(e.hash,e);else for(const e of t)this.openEdges.add(e.hash),this.edges.set(e.hash,e)}match(t,e){if(e.id!==this.plane.id)return!1;for(const e of t)if(this.openEdges.has(e.hash))return!0;return!1}getOpenEdges(){const t=[];for(const e of this.openEdges)t.push(this.edges.get(e));return t}merge(t){for(const[e,s]of t.edges)this.edges.set(e,s);for(const e of t.openEdges)this.openEdges.has(e)?this.openEdges.delete(e):this.openEdges.add(e)}}class xe{constructor(){e(this,"list",new Map),e(this,"nextFaceID",0)}add(t,e){const s=this.match(t,e);if(0===s.length){const s=this.nextFaceID++,i=new ve(s,e);return i.add(t),void this.list.set(i.id,i)}if(1!==s.length){if(s.length>1){const e=this.list.get(s[0]);e.add(t);for(let t=1;t<s.length;t++){const i=s[t],r=this.list.get(i);e.merge(r),this.list.delete(i)}}}else{this.list.get(s[0]).add(t)}}match(t,e){let s=[];for(const i of this.list.values())i.match(t,e)&&s.push(i.id);return s}}class Ve{constructor(t){e(this,"closed",!1),e(this,"openStartPoint",null),e(this,"openEndPoint",null),e(this,"plane"),e(this,"orderedPoints",[]),this.plane=t}getEdges(t=!1){const e=[];if(t)for(let t=this.orderedPoints.length-1;t>0;t--)e.push(new we(this.orderedPoints[t],this.orderedPoints[t-1]));else for(let t=0;t<this.orderedPoints.length-1;t++)e.push(new we(this.orderedPoints[t],this.orderedPoints[t+1]));return e}getIndices(){return this.orderedPoints.map((t=>t.id))}add(t){if(0===this.orderedPoints.length)return this.openStartPoint=t.p1.hash,this.openEndPoint=t.p2.hash,void this.orderedPoints.push(t.p1,t.p2);const e=this.match(t);if(0===e)throw new Error("Edge doesn't match with any open point");if(e>2)throw new Error("Edge matches with more than 2 open points");if(2===e)return this.closed=!0,this.openEndPoint=null,void(this.openStartPoint=null);this.openStartPoint===t.p1.hash?(this.orderedPoints.unshift(t.p2),this.openStartPoint=t.p2.hash):this.openEndPoint===t.p1.hash?(this.orderedPoints.push(t.p2),this.openEndPoint=t.p2.hash):this.openStartPoint===t.p2.hash?(this.orderedPoints.unshift(t.p1),this.openStartPoint=t.p1.hash):this.openEndPoint===t.p2.hash&&(this.orderedPoints.push(t.p1),this.openEndPoint=t.p1.hash)}match(t){if(this.closed)return 0;let e=0;return this.openStartPoint===t.p1.hash&&e++,this.openStartPoint===t.p2.hash&&e++,this.openEndPoint===t.p1.hash&&e++,this.openEndPoint===t.p2.hash&&e++,e}merge(t){if(t.closed||this.closed)throw new Error("Cannot merge closed wires");if(t.openStartPoint===this.openEndPoint&&t.openEndPoint===this.openStartPoint)throw new Error("Cannot merge wires that close each other");if(t.openEndPoint===this.openEndPoint&&t.openStartPoint===this.openStartPoint)throw new Error("Cannot merge wires that close each other");let e=!1;t.openEndPoint!==this.openStartPoint&&t.openEndPoint!==this.openEndPoint||(e=!0);const s=t.getEdges(e);for(const t of s)this.add(t)}getArea(){const t=this.orderedPoints.map((t=>[t.x,t.y,t.z]));let e=0,s=1;const i=Math.abs(this.plane.normal.x),r=Math.abs(this.plane.normal.y),o=Math.abs(this.plane.normal.z);i>=r&&i>=o?(e=1,s=2):r>=i&&r>=o?(e=0,s=2):(e=0,s=1);const a=[];for(const i of t)a.push(new n.Vector2(i[e],i[s]));let I=0;for(let t=0,e=a.length;t<e;t++){I+=a[t].x*a[t==a.length-1?0:t+1].y*.5,I-=a[t==a.length-1?0:t+1].x*a[t].y*.5}return Math.abs(I)}}class Ge{constructor(t){e(this,"list",new Map),e(this,"plane"),e(this,"nextWireID",0),this.plane=t}add(t){const e=this.match(t);if(0===e.length){const e=this.nextWireID++,s=new Ve(this.plane);return s.add(t),void this.list.set(e,s)}if(1!==e.length){if(e.length>1){const s=this.list.get(e[0]);s.add(t);const i=this.list.get(e[1]);s.merge(i),this.list.delete(e[1])}}else{this.list.get(e[0]).add(t)}}getWires(){let t=null,e=0;for(const[s,i]of this.list){const r=i.getArea();r>e&&(e=r,t=s)}if(null===t)return null;const s=this.list.get(t).getIndices(),i=[];for(const[e,s]of this.list)e!==t&&i.push(s.getIndices());return{outer:s,inners:i}}match(t){const e=[];for(const[s,i]of this.list)i.match(t)>0&&e.push(s);return e}}function Be(t){let e=Number.POSITIVE_INFINITY,s=Number.POSITIVE_INFINITY,i=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY,n=Number.NEGATIVE_INFINITY,o=Number.NEGATIVE_INFINITY;for(let a=0;a<t.length;a+=3){const I=t[a],E=t[a+1],c=t[a+2];I<e&&(e=I),E<s&&(s=E),c<i&&(i=c),I>r&&(r=I),E>n&&(n=E),c>o&&(o=c)}return{min:{x:e,y:s,z:i},max:{x:r,y:n,z:o}}}class Ye{constructor(t,s,i){e(this,"normal"),e(this,"constant"),e(this,"id"),e(this,"faces",[]);const r=Ue(t.normal.x,i),o=Ue(t.normal.y,i),a=Ue(t.normal.z,i),I=Ue(t.constant,s);this.normal=new n.Vector3(r,o,a),this.constant=I;const E="||";this.id=`${r}${E}${o}${E}${a}${E}${I}`}}class He{constructor(){e(this,"_ifcAPI",null),e(this,"wasmPath","../../../../node_modules/web-ifc/"),e(this,"_tempObject1",new n.Object3D),e(this,"_tempObject2",new n.Object3D),e(this,"_tempMatrix1",new n.Matrix4),e(this,"_previousGeometries",new Map),e(this,"_previousGeometriesIDs",new Map),e(this,"_previousLocalPlacements",new Map),e(this,"_problematicGeometries",new Set),e(this,"_problematicGeometriesHashes",new Set),e(this,"_coordinatesInitialized",!1),e(this,"categoriesToLoad",new Set([o.IFCPROJECT,o.IFCSITE,o.IFCBUILDING,o.IFCBUILDINGSTOREY,o.IFCSPACE,o.IFCANNOTATION,o.IFCCONTROLLER,o.IFCBOILER,o.IFCLAMP,o.IFCPUMP,o.IFCAIRTERMINALBOX,o.IFCFLOWINSTRUMENT,o.IFCFURNISHINGELEMENT,o.IFCELECTRICGENERATOR,o.IFCAUDIOVISUALAPPLIANCE,o.IFCPIPEFITTING,o.IFCSTAIR,o.IFCDUCTFITTING,o.IFCMECHANICALFASTENER,o.IFCDOOR,o.IFCELECTRICMOTOR,o.IFCSYSTEMFURNITUREELEMENT,o.IFCEVAPORATOR,o.IFCWINDOWSTANDARDCASE,o.IFCLIGHTFIXTURE,o.IFCUNITARYCONTROLELEMENT,o.IFCCABLECARRIERFITTING,o.IFCCOIL,o.IFCFASTENER,o.IFCFLOWSTORAGEDEVICE,o.IFCPROTECTIVEDEVICE,o.IFCBEAM,o.IFCTANK,o.IFCFILTER,o.IFCCOLUMN,o.IFCELECTRICDISTRIBUTIONBOARD,o.IFCFOOTING,o.IFCCOLUMNSTANDARDCASE,o.IFCVOIDINGFEATURE,o.IFCREINFORCINGBAR,o.IFCFLOWSEGMENT,o.IFCELECTRICTIMECONTROL,o.IFCCABLEFITTING,o.IFCDISTRIBUTIONCHAMBERELEMENT,o.IFCDISTRIBUTIONCONTROLELEMENT,o.IFCMEMBER,o.IFCBUILDINGELEMENTPROXY,o.IFCPLATESTANDARDCASE,o.IFCSWITCHINGDEVICE,o.IFCSHADINGDEVICE,o.IFCDISCRETEACCESSORY,o.IFCDUCTSILENCER,o.IFCSTACKTERMINAL,o.IFCFIRESUPPRESSIONTERMINAL,o.IFCMEDICALDEVICE,o.IFCFURNITURE,o.IFCSLAB,o.IFCTRANSPORTELEMENT,o.IFCAIRTERMINAL,o.IFCENERGYCONVERSIONDEVICE,o.IFCCIVILELEMENT,o.IFCPILE,o.IFCELECTRICAPPLIANCE,o.IFCMEMBERSTANDARDCASE,o.IFCDISTRIBUTIONELEMENT,o.IFCCOVERING,o.IFCSPACEHEATER,o.IFCROOF,o.IFCAIRTOAIRHEATRECOVERY,o.IFCFLOWCONTROLLER,o.IFCHUMIDIFIER,o.IFCJUNCTIONBOX,o.IFCFLOWMETER,o.IFCFLOWTERMINAL,o.IFCRAILING,o.IFCCONDENSER,o.IFCPROTECTIVEDEVICETRIPPINGUNIT,o.IFCREINFORCINGMESH,o.IFCTENDONANCHOR,o.IFCVIBRATIONISOLATOR,o.IFCWALL,o.IFCMOTORCONNECTION,o.IFCVIRTUALELEMENT,o.IFCENGINE,o.IFCBEAMSTANDARDCASE,o.IFCBURNER,o.IFCBUILDINGELEMENTPART,o.IFCRAMP,o.IFCTUBEBUNDLE,o.IFCSLABSTANDARDCASE,o.IFCDISTRIBUTIONFLOWELEMENT,o.IFCSANITARYTERMINAL,o.IFCOPENINGSTANDARDCASE,o.IFCALARM,o.IFCSURFACEFEATURE,o.IFCSLABELEMENTEDCASE,o.IFCFLOWMOVINGDEVICE,o.IFCPLATE,o.IFCCOMMUNICATIONSAPPLIANCE,o.IFCDOORSTANDARDCASE,o.IFCRAMPFLIGHT,o.IFCCHIMNEY,o.IFCWINDOW,o.IFCELECTRICFLOWSTORAGEDEVICE,o.IFCHEATEXCHANGER,o.IFCFAN,o.IFCSOLARDEVICE,o.IFCGEOGRAPHICELEMENT,o.IFCCURTAINWALL,o.IFCFLOWTREATMENTDEVICE,o.IFCWALLSTANDARDCASE,o.IFCDUCTSEGMENT,o.IFCCOMPRESSOR,o.IFCPIPESEGMENT,o.IFCCOOLINGTOWER,o.IFCPROJECTIONELEMENT,o.IFCOUTLET,o.IFCEVAPORATIVECOOLER,o.IFCCABLECARRIERSEGMENT,o.IFCTENDON,o.IFCTRANSFORMER,o.IFCCHILLER,o.IFCDAMPER,o.IFCSENSOR,o.IFCELEMENTASSEMBLY,o.IFCCOOLEDBEAM,o.IFCWALLELEMENTEDCASE,o.IFCINTERCEPTOR,o.IFCVALVE,o.IFCCABLESEGMENT,o.IFCWASTETERMINAL,o.IFCSTAIRFLIGHT,o.IFCFLOWFITTING,o.IFCACTUATOR,o.IFCUNITARYEQUIPMENT,o.IFCGRID,o.IFCBUILTELEMENT])),e(this,"scene",null),e(this,"isolatedMeshes",null),e(this,"onElementLoaded",(()=>{})),e(this,"onGeometryLoaded",(()=>{})),e(this,"onLocalPlacementLoaded",(()=>{})),e(this,"onMaxIdFound",(()=>{})),e(this,"onCoordinatesLoaded",(()=>{}))}async load(t){var e;this._previousGeometriesIDs.clear(),this._ifcAPI=new o.IfcAPI,this._ifcAPI.SetWasmPath(this.wasmPath,!1),await this._ifcAPI.Init();let s=0;if(t.readFromCallback&&t.readCallback)s=this._ifcAPI.OpenModelFromCallback(t.readCallback,{COORDINATE_TO_ORIGIN:!0});else{if(!t.bytes)throw new Error("No data provided");s=await this._ifcAPI.OpenModel(t.bytes,{COORDINATE_TO_ORIGIN:!0})}this._ifcAPI.SetLogLevel(o.LogLevel.LOG_LEVEL_OFF);const i=this._ifcAPI.GetMaxExpressID(s);this.onMaxIdFound(i),this.onLocalPlacementLoaded({id:0,data:[0,0,0,1,0,0,0,1,0]});const r=t=>{if(null===this._ifcAPI)throw new Error("IfcAPI not initialized");if(!this._coordinatesInitialized){const t=this._ifcAPI.GetCoordinationMatrix(s);this._tempMatrix1.fromArray(t);const e=this.decompose(this._tempMatrix1);this.onCoordinatesLoaded(e),this._coordinatesInitialized=!0}const e=this._ifcAPI.GetLine(0,t.expressID),i={id:t.expressID,type:e.type,guid:e.GlobalId.value,geometries:[]},r=t.geometries.size(),n=t.geometries.get(0).flatTransformation,{units:a,transformWithoutScale:I}=this.removeScale(n);for(let e=0;e<r;e++)i.type===o.IFCREINFORCINGBAR?this.loadSweptDiskSolidGeometry(s,i,t,e,I.elements,a):this.loadBrepGeometry(s,i,t,e,I.elements,a);const{dxx:E,dxy:c,dxz:h,dyx:l,dyy:d,dyz:C,px:T,py:u,pz:R}=this.decompose(I);i.geometries.length>0&&this.onElementLoaded({element:i,position:[T,u,R],xDirection:[E,c,h],yDirection:[l,d,C]})};if(null==(e=this.isolatedMeshes)?void 0:e.size)this._ifcAPI.StreamMeshes(s,Array.from(this.isolatedMeshes),r);else for(const t of this.categoriesToLoad){const e=this._ifcAPI.GetLineIDsWithType(s,t),i=[];for(let t=0;t<e.size();t++)i.push(e.get(t));i.length>0&&(console.log(`${Me[t]}: ${i.length}`),this._ifcAPI.StreamMeshes(s,i,r))}this._ifcAPI.Dispose(),this._ifcAPI=null,this._ifcAPI=new o.IfcAPI,this._ifcAPI.SetWasmPath(this.wasmPath,!1),await this._ifcAPI.Init(),this._previousGeometries.clear(),this._previousGeometriesIDs.clear(),this._previousLocalPlacements.clear(),this._problematicGeometries.clear(),this._problematicGeometriesHashes.clear()}loadSweptDiskSolidGeometry(t,e,s,i,r,n){if(null===this._ifcAPI)throw new Error("IfcAPI not initialized");const o=s.geometries.get(i),{x:a,y:I,z:E,w:c}=o.color,h={id:o.geometryExpressID,color:[a,I,E,c],localPlacementID:null};e.geometries.push(h);const{transformWithoutScale:l}=this.removeScale(o.flatTransformation);if(this._previousGeometriesIDs.has(h.id))return this.getLocalTransform(r,l,h),void(h.id=this._previousGeometriesIDs.get(h.id));this.getLocalTransform(r,l,h);const d=this._ifcAPI.GetGeometry(t,h.id),C=d.GetSweptDiskSolid(),T=[],u=C.axis.size();for(let t=0;t<u;t++){const e=C.axis.get(t),s=e.points.size();for(let t=0;t<s-1;t++){const s=[];T.push(s);const i=e.points.get(t),r=e.points.get(t+1),o=i.x*n,a=i.y*n,I=i.z*n,E=r.x*n,c=r.y*n,h=r.z*n;s.push(o,a,I,E,c,h)}}const R=this.getGeometryBuffers(t,o);if(null===R)return console.log(`Zero length geometry: ${h.id}`),e.geometries.pop(),void this._problematicGeometries.add(h.id);const{position:b}=R;for(let t=0;t<b.length;t++)b[t]*=n;const F=Be(b),p=C.profileRadius*n;this._previousGeometriesIDs.set(h.id,h.id),this.onGeometryLoaded({id:h.id,geometry:{type:Wt.SweptDisk,segments:T,radius:p,bbox:F}}),d.delete()}loadBrepGeometry(t,e,s,i,r,o){if(null===this._ifcAPI)throw new Error("IfcAPI not initialized");const a=s.geometries.get(i);if(this._problematicGeometries.has(a.geometryExpressID))return void console.log(`Problematic geometry: ${a.geometryExpressID}`);const{x:I,y:E,z:c,w:h}=a.color,l={id:a.geometryExpressID,color:[I,E,c,h],localPlacementID:null};e.geometries.push(l);const{transformWithoutScale:d}=this.removeScale(a.flatTransformation);if(this._previousGeometriesIDs.has(l.id))return this.getLocalTransform(r,d,l),void(l.id=this._previousGeometriesIDs.get(l.id));const C=this.getGeometryBuffers(t,a);if(null===C)return console.log(`Zero length geometry: ${l.id}`),e.geometries.pop(),void this._problematicGeometries.add(l.id);const{position:T,normals:u,index:R}=C;for(let t=0;t<T.length;t++)T[t]*=o;const b=T.length/3,F=R.length/3;let p=0,A=0;const f=new n.Triangle,O=new n.Vector3,N=new n.Vector3,S=new n.Vector3,_=this.getVolume(R,T),L=new n.Vector3;for(let t=0;t<R.length-2;t+=3){const e=R[t],s=R[t+1],i=R[t+2];O.set(T[3*e],T[3*e+1],T[3*e+2]),N.set(T[3*s],T[3*s+1],T[3*s+2]),S.set(T[3*i],T[3*i+1],T[3*i+2]),L.add(O),L.add(N),L.add(S),f.set(O,N,S);const r=f.getArea();r>p&&(p=r),A+=r}L.divideScalar(R.length),O.set(T[0],T[1],T[2]),N.set(T[3],T[4],T[5]),S.set(T[6],T[7],T[8]);const m=1e4,P=Ue(A,m),M=Ue(p,m),g=Ue(_,m),U=Ue(O.x,m),D=Ue(O.y,m),y=Ue(O.z,m),w=`${b}-${F}-${P}-${M}-${g}-${Ue(L.x,m)}-${Ue(L.x,m)}-${Ue(L.x,m)}-${U}-${D}-${y}`;if(this._problematicGeometriesHashes.has(w))return console.log(`Problematic geometry: ${l.id}`),e.geometries.pop(),this._problematicGeometries.add(l.id),void this._problematicGeometriesHashes.add(w);const v=!this._previousGeometries.has(w),x=a.geometryExpressID;if(v)this._previousGeometries.set(w,a.geometryExpressID),this._previousGeometriesIDs.set(x,x);else{const t=this._previousGeometries.get(w);if(void 0===t)throw new Error("Previous geometry not found");this._previousGeometriesIDs.set(x,t),l.id=t}if(this.getLocalTransform(r,d,l),v)try{const t=function(t){const{position:e,normals:s,index:i}=t,r=1e6,o=Be(e),a=new n.Plane,I=new n.Vector3,E=new n.Vector3,c=new Map;for(let t=0;t<i.length-2;t+=3){const n=i[t];I.set(s[3*n],s[3*n+1],s[3*n+2]),E.set(e[3*n],e[3*n+1],e[3*n+2]),a.setFromNormalAndCoplanarPoint(I,E);const o=new Ye(a,r,1e7);c.has(o.id)||c.set(o.id,o),c.get(o.id).faces.push(t)}const h=new ye(r),l=new xe;for(const[,t]of c)for(const s of t.faces){const r=i[s],n=i[s+1],o=i[s+2];if(!h.isValidTriangle(e,r,n,o))continue;const a=h.create(e,r),I=h.create(e,n),E=h.create(e,o),c=[new we(a,I),new we(I,E),new we(E,a)];l.add(c,t)}const d=new Map,C=new Map;let T=0;for(const[,t]of l.list){const e=new Ge(t.plane),s=t.getOpenEdges();for(const t of s)e.add(t);const i=e.getWires();d.set(T,(null==i?void 0:i.outer)||[]),C.set(T,(null==i?void 0:i.inners)||[]),T++}return{bbox:o,type:Wt.Shell,outerWires:d,innerWires:C,points:h.get()}}({position:T,normals:u,index:R});this.onGeometryLoaded({id:l.id,geometry:t})}catch(t){console.error(`Problematic geometry: ${l.id}`),e.geometries.pop(),this._problematicGeometries.add(l.id),this._problematicGeometriesHashes.add(w)}}getLocalTransform(t,e,s){this._tempObject1.position.set(0,0,0),this._tempObject1.rotation.set(0,0,0),this._tempObject1.scale.set(1,1,1),this._tempObject1.updateMatrix(),this._tempMatrix1.fromArray(t),this._tempObject1.applyMatrix4(this._tempMatrix1),this._tempObject2.position.set(0,0,0),this._tempObject2.rotation.set(0,0,0),this._tempObject2.scale.set(1,1,1),this._tempObject2.updateMatrix(),this._tempObject2.applyMatrix4(e),this._tempObject1.attach(this._tempObject2);const{px:i,py:r,pz:n,dxx:o,dxy:a,dxz:I,dyx:E,dyy:c,dyz:h}=this.decompose(this._tempObject2.matrix);this._tempObject2.removeFromParent();if(!(0===i&&0===r&&0===n&&1===o&&0===a&&0===I&&0===E&&1===c&&0===h)){const t=`${i}-${r}-${n}-${o}-${a}-${I}-${E}-${c}-${h}`,e=this._previousLocalPlacements.get(t);if(e)s.localPlacementID=e.id;else{const e={id:this._previousLocalPlacements.size+1,data:[i,r,n,o,a,I,E,c,h]};this._previousLocalPlacements.set(t,e),s.localPlacementID=e.id,this.onLocalPlacementLoaded(e)}}}removeScale(t){const e=(new n.Matrix4).fromArray(t),s=new n.Vector3,i=new n.Quaternion,r=new n.Vector3;e.decompose(s,i,r);const o=r.x,a=new n.Matrix4;return a.compose(s,i,new n.Vector3(1,1,1)),{units:o,transformWithoutScale:a}}decompose(t){const e=1e3,s=1e5;return{dxx:Ue(t.elements[0],e),dxy:Ue(t.elements[1],e),dxz:Ue(t.elements[2],e),dyx:Ue(t.elements[4],s),dyy:Ue(t.elements[5],s),dyz:Ue(t.elements[6],s),dzx:Ue(t.elements[8],s),dzy:Ue(t.elements[9],s),dzz:Ue(t.elements[10],s),px:Ue(t.elements[12],s),py:Ue(t.elements[13],s),pz:Ue(t.elements[14],s)}}getVolume(t,e){let s=0;const i=new n.Vector3,r=new n.Vector3,o=new n.Vector3;for(let n=0;n<t.length-2;n+=3){const a=3*t[n],I=3*t[n+1],E=3*t[n+2];i.set(e[a],e[a+1],e[a+2]),r.set(e[I],e[I+1],e[I+2]),o.set(e[E],e[E+1],e[E+2]),s+=this.getSignedVolumeOfTriangle(i,r,o)}return Math.abs(s)}getSignedVolumeOfTriangle(t,e,s){return 1/6*(-(s.x*e.y*t.z)+e.x*s.y*t.z+s.x*t.y*e.z-t.x*s.y*e.z-e.x*t.y*s.z+t.x*e.y*s.z)}getGeometryBuffers(t,e){if(!this._ifcAPI)throw new Error("IfcAPI not initialized");const s=this._ifcAPI.GetGeometry(t,e.geometryExpressID),i=this._ifcAPI.GetIndexArray(s.GetIndexData(),s.GetIndexDataSize()),r=this._ifcAPI.GetVertexArray(s.GetVertexData(),s.GetVertexDataSize());if(0===i.length||0===r.length)return s.delete(),null;const n=new Float32Array(r.length/2),o=new Float32Array(r.length/2);for(let t=0;t<r.length;t+=6)n[t/2]=r[t],n[t/2+1]=r[t+1],n[t/2+2]=r[t+2],o[t/2]=r[t+3],o[t/2+1]=r[t+4],o[t/2+2]=r[t+5];return s.delete(),{position:n,normals:o,index:i}}}class ze{constructor(){e(this,"wasmPath","../../../../node_modules/web-ifc/")}async process(t){const{builder:e}=t;let s=0;const i=[];let r={dxx:1,dxy:0,dxz:0,dyx:0,dyy:1,dyz:0,px:0,py:0,pz:0};const o=[],a=[],I=[],E=new Map,c=new Map,h=new Map,l=new He;l.wasmPath=this.wasmPath,l.onGeometryLoaded=t=>{o.push(t)},l.onElementLoaded=t=>{a.push(t)},l.onLocalPlacementLoaded=t=>{I.push(t)},l.onCoordinatesLoaded=t=>{r=t},l.onMaxIdFound=t=>{s=t},await l.load(t);const d=[];let C=0;zt.startGlobalTransformsVector(e,a.length);const T=new Map,u=[];for(let t=0;t<a.length;t++){const s=a[a.length-1-t];d.push(C++);const{position:r,xDirection:n,yDirection:o}=s,[I,c,h]=r,[l,R,b]=n,[F,p,A]=o;i.push(a[t].element.id);const f=a.length-1-t,O=s.element.type,N=Me[O];T.has(N)||T.set(N,T.size),Ht.createTransform(e,I,c,h,l,R,b,F,p,A),T.get(N),u.unshift(s.element.id),E.set(s.element.id,f)}const R=e.endVector(),b=[];for(let t=0;t<o.length;t++){const s=o[t];if(s.geometry.type!==Wt.Shell)continue;const{points:i,outerWires:r,innerWires:n}=s.geometry;Gt.startVerticesVector(e,i.length);for(let t=0;t<i.length;t++){const[s,r,n]=i[i.length-1-t];Ft.createVecf(e,s,r,n)}const a=e.endVector(),I=[];for(const[,t]of r){const s=Vt.createIndicesVector(e,t),i=Vt.createShellProfile(e,s);I.push(i)}const E=Gt.createProfilesVector(e,I),c=[];for(const[t,s]of n)for(const i of s){const s=xt.createIndicesVector(e,i),r=xt.createShellHole(e,t,s);c.push(r)}const h=Gt.createHolesVector(e,c),l=Gt.createShell(e,E,h,a);b.push(l)}const F=zt.createShellsVector(e,b),p=[];for(let t=0;t<o.length;t++){const s=o[t];if(s.geometry.type!==Wt.SweptDisk)continue;const{segments:i,radius:r}=s.geometry,n=[];Dt.startArcsVector(e,0);const a=e.endVector();Dt.startLinesVector(e,i.length);const I=[];for(let t=0;t<i.length;t++){const[s,r,n,o,a,E]=i[t];gt.createLine(e,s,r,n,o,a,E),I.push(t)}const E=e.endVector(),c=I.map((()=>Zt.Line)),h=Dt.createIndexesVector(e,I),l=Dt.createTypesVector(e,c);Dt.startPolyLinesVector(e,0);const d=e.endVector();Dt.startAxis(e),Dt.addArcs(e,a),Dt.addIndexes(e,h),Dt.addLines(e,E),Dt.addPolyLines(e,d),Dt.addTypes(e,l);const C=Dt.endAxis(e);n.push(C);const T=Bt.createAxesVector(e,n),u=Bt.createRadiusVector(e,[r]);Bt.startSweptDisk(e),Bt.addAxes(e,T),Bt.addRadius(e,u);const R=Bt.endSweptDisk(e);p.push(R)}const A=zt.createSweptDisksVector(e,p);zt.startRepresentationsVector(e,o.length);const f=new Map;for(let t=0;t<o.length;t++){const e=o.length-1-t,s=o[e].geometry.type;let i=f.get(s);void 0===i&&(i=-1),f.set(s,i+1)}const O=new n.Vector3,N=new n.Vector3;for(let t=0;t<o.length;t++){const s=o.length-1-t,i=o[s],{bbox:r}=i.geometry;c.set(i.id,s);const n=i.geometry.type,a=f.get(n);if(void 0===a)throw new Error("Malformed geometry definition");f.set(n,a-1),O.set(r.min.x,r.min.y,r.min.z),N.set(r.max.x,r.max.y,r.max.z);O.distanceTo(N)>999999&&(console.log(`Infinity bounding box: ${i.id}`),r.min.x=0,r.min.y=0,r.min.z=0,r.max.x=.1,r.max.y=.1,r.max.z=.1),vt.createRepresentation(e,i.geometry.type,a,r.min.x,r.min.y,r.min.z,r.max.x,r.max.y,r.max.z)}const S=e.endVector();let _=0;for(const t of a)for(const e of t.element.geometries){const t=e.color.toString();if(!h.has(t)){const s=e.color.map((t=>255*t));h.set(t,{id:_++,color:s})}}zt.startMaterialsVector(e,h.size);const L=Array.from(h.keys());for(let t=0;t<L.length;t++){const s=L[L.length-1-t],{color:i}=h.get(s),[r,n,o,a]=i;wt.createMaterial(e,r,n,o,a,Kt.FrontFace,0)}const m=e.endVector();let P=0;for(const t of a)P+=t.element.geometries.length;zt.startInstancesVector(e,P);for(let t=0;t<a.length;t++){const s=a[a.length-1-t],i=E.get(s.element.id),r=s.element.geometries;for(let t=0;t<r.length;t++){const s=r[r.length-t-1],n=c.get(s.id),o=h.get(s.color.toString()).id,a=s.localPlacementID||0;yt.createInstance(e,a,i,n,o)}}const M=e.endVector();zt.startLocalTransformsVector(e,I.length);for(let t=0;t<I.length;t++){const s=I[I.length-1-t],[i,r,n,o,a,E,c,h,l]=s.data;Ht.createTransform(e,i,r,n,o,a,E,c,h,l)}const g=e.endVector(),U=zt.createGeometriesItemsVector(e,d),D=Ht.createTransform(e,r.px,r.py,r.pz,r.dxx,r.dxy,r.dxz,r.dyx,r.dyy,r.dyz);zt.startGeometries(e),zt.addCoordinates(e,D),zt.addGlobalTransforms(e,R),zt.addShells(e,F),zt.addRepresentations(e,S),zt.addInstances(e,M),zt.addLocalTransforms(e,g),zt.addMaterials(e,m),zt.addSweptDisks(e,A),zt.addGeometriesItems(e,U);return{geometries:zt.endGeometries(e),localIDs:i,maxLocalID:s}}}exports.AABB=pt,exports.ActionType=B,exports.Arc=At,exports.Attribute=Mt,exports.Axis=Dt,exports.FragmentsModels=class{constructor(t){e(this,"_updateManager",new Se),e(this,"models",new Ne(this._updateManager)),e(this,"settings",{autoCoordinate:!0,maxUpdateRate:100}),e(this,"baseCoordinates",null),e(this,"messenger"),e(this,"_lastUpdate",0),e(this,"_autoRedrawInterval",null),e(this,"_isDisposed",!1);const s=new Promise((e=>e(t)));this.messenger=new Le(s,(t=>this.processMessage(t))),this._updateManager.onRedraw=()=>{this._autoRedrawInterval&&clearTimeout(this._autoRedrawInterval);const t=this.settings.maxUpdateRate+1;this._autoRedrawInterval=setTimeout((()=>{this.update()}),t)}}async load(t,e){const s=new le(e.modelId,this.models,this.messenger,this.models.list);s.frozen=!0;try{if(this.models.list.set(s.modelId,s),await s.setup(t),this.settings.autoCoordinate){const t=await s.getCoordinates();if(null===this.baseCoordinates)this.baseCoordinates=t;else{const[e,i,r]=t,[o,a,I]=this.baseCoordinates,E=new n.Vector3(o-e,a-i,I-r);s.object.position.add(E)}}}catch(t){throw this.models.list.delete(s.modelId),t}const{camera:i}=e;return i&&s.setCamera(i),s.frozen=!1,s}async dispose(){this._isDisposed=!0;const t=Array.from(this.models.list.values()),e=[];for(const s of t)e.push(s.dispose());await Promise.all(e)}async disposeModel(t){const e=this.models.list.get(t);e&&await e.dispose()}async update(t=!1){if(this._isDisposed)return;const e=performance.now();if(e-this._lastUpdate<this.settings.maxUpdateRate)return;this._lastUpdate=e;const s=[];for(const t of this.models.list.values())s.push(t.updateCamera());await Promise.all(s),t?await this.models.forceUpdateFinish():this.models.update()}async processMessage(t){const e=this.models.list.get(t.modelId);e&&await e.handleRequest(t)}async pick(t){const e=[];for(const s of this.models.list.values()){const i=await s.pick(t);i&&e.push(i)}if(await Promise.all(e),0===e.length)return;let s=e[0],i=s.distance;for(let t=1;t<e.length;t++)e[t].distance<i&&(i=e[t].distance,s=e[t]);return s}async getBBoxes(t){const e=[],s=async(t,s)=>{const i=await t.getBBoxes(s);if(i)for(const t of i)e.push(t)},i=[];for(const e in t){const r=this.models.list.get(e);r&&i.push(s(r,t[e]))}return await Promise.all(i),e}async highlight(t,e){await this.forEachModel(e,"highlight",t)}async resetHighlight(t){await this.forEachModel(t,"resetHighlight")}async forEachModel(t,e,...s){if(!t){t={};for(const e of this.models.list.keys())t[e]=void 0}const i=[];for(const r in t){const n=this.models.list.get(r);if(n){const o=t[r],a=n[e](o,...s);i.push(a)}}await Promise.all(i)}},exports.Geometries=zt,exports.GeometryType=Wt,exports.Guid=jt,exports.IfcSerializer=class{constructor(){e(this,"_builder",null),e(this,"wasmPath","/node_modules/web-ifc/"),e(this,"attrsToExclude",new Set(["Representation","ObjectPlacement"]))}get builder(){if(!this._builder)throw new Error("Builder not initialized");return this._builder}async process(t){this._builder=new Pt(1024);const e=new ze;e.wasmPath=this.wasmPath;const i={...t,builder:this.builder},r=await e.process(i),{geometries:n,maxLocalID:o,localIDs:a}=r,I=new ge(this);I.wasmPath=this.wasmPath;const E={...t,geometryProcessedLocalIDs:a},c=await I.process(E),{relIndicesVector:h,relsVector:l,guidsVector:d,guidsIdVector:C,metadataOffset:T,localIdsVector:u,sptialStrutureOffset:R,attributesVector:b,categoriesVector:F}=c,p=s.MathUtils.generateUUID(),A=this.builder.createString(p);$t.startModel(this.builder),$t.addGeometries(this.builder,n),$t.addMetadata(this.builder,T),$t.addAttributes(this.builder,b),$t.addLocalIds(this.builder,u),$t.addCategories(this.builder,F),$t.addRelationsItems(this.builder,h),$t.addRelations(this.builder,l),$t.addGuidsItems(this.builder,C),$t.addGuids(this.builder,d),$t.addSpatialStructure(this.builder,R),$t.addGuid(this.builder,A),$t.addMaxLocalId(this.builder,o);const f=$t.endModel(this.builder);this.builder.finish(f);const O=this.builder.asUint8Array();return this.clean(),O}clean(){var t;null==(t=this._builder)||t.clear(),this._builder=null}},exports.Instance=yt,exports.Line=gt,exports.LineType=kt,exports.LodState=Y,exports.MAX_16BIT_SIZE=65536,exports.Material=wt,exports.MessageType=H,exports.Model=$t,exports.ObjectType=G,exports.PickPriority=x,exports.Polyline=Ut,exports.Relation=Xt,exports.Representation=vt,exports.SegmentType=Zt,exports.Shell=Gt,exports.ShellHole=xt,exports.ShellProfile=Vt,exports.Sidedness=Kt,exports.SnapType=V,exports.SpatialStructure=qt,exports.StateType=z,exports.SweptDisk=Bt,exports.Transform=Ht,exports.Vecd=Yt,exports.Vecf=Ft,exports.getObject=function t(e,s){const i=Object.getPrototypeOf(e),r=Object.getOwnPropertyNames(i);for(const n of r){if("constructor"===n||"__init"===n)continue;if(n.includes("mutate_"))continue;if(n.match(/.*Array$/))continue;const r=i[n];if("function"==typeof r){const i=void 0!==e[`${n}Length`]&&void 0!==e[`${n}Array`];if(2===r.length||i){const i=e[`${n}Length`](),r=[];s[n]=r;for(let s=0;s<i;s++){const i=e[n](s);if("object"==typeof i&&null!==i&&"bb"in i){const e={};t(i,e),r.push(e)}else r.push(i)}continue}const o=e[n]();if("object"!=typeof o||null===o){s[n]=o;continue}s[n]={},t(o,s[n])}else s[n]=r}},exports.ifcCategoryMap=Me;
